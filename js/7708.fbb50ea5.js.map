{"version":3,"file":"js/7708.fbb50ea5.js","mappings":"oHACO,SAASA,IACZ,SAASC,EAA0BC,EAAWC,EAAa,SACvD,MAAMC,EAAS,GACf,GAAiB,SAAdD,GACID,EACC,IAAK,IAAIG,KAAOH,EAAU,CACtB,IAAyB,IAAtBG,EAAIC,QAAQ,KAAY,CACvB,IAAIC,EAAIC,EAAQH,GAChBD,EAAOG,GAAKL,EAASG,GAAK,EAC9B,MACID,EAAOC,GAAOH,EAASG,GAAK,GAEhCD,EAAOC,GAAOH,EAASG,GAAK,EAChC,CAGR,OAAOD,CACX,CAEA,SAASI,EAAQH,GACb,MAAMI,EAAQJ,EAAIK,MAAM,KAAKC,QAAOC,GAASA,IACvCA,EAAOP,EAAIK,MAAM,KAAKC,QAAOC,IAASC,MAAMD,KAGlD,OAAOH,EAAM,GAAGG,EAAKE,IAAIC,OAG7B,CAEA,MAAO,CACHd,4BAER,C,icC9BA,MAAMe,EAAc,EAEpB,O,uzDCsGA,MAAM,0BAACf,IAA6BD,EAAAA,EAAAA,KAC9BI,GAASa,EAAAA,EAAAA,IAAI,CAAC,GACdC,GAAWD,EAAAA,EAAAA,IAAI,CAAC,GAChBE,GAAOF,EAAAA,EAAAA,IAAI,CACbG,KAAM,GACNC,KAAM,GACNC,WAAY,KAGVC,EAAeC,IACjBL,EAAKM,MAAQ,CACTL,KAAMI,EAAIJ,KACVC,KAAMG,EAAIH,KACVK,IAAKF,EAAIE,IACTJ,WAAYE,EAAIF,WACnB,EAICK,EAAYA,KACdR,EAAKM,MAAQ,CACTL,KAAM,GACNC,KAAM,GACNK,IAAK,GACLJ,WAAY,GACf,EAWL,SAASM,IACLxB,EAAOqB,MAAQ,GACfI,EAAAA,EAAMC,SAAS,aAAc,CAAEC,IAAK,4BAA6BC,MAAOb,EAAKM,QAASQ,MAAMC,IACpE,KAAhBA,GAAMC,OACN/B,EAAOqB,MAAQxB,EAA0BiC,EAAKA,MACvB,KAAhBA,GAAMC,SACbR,IACAS,KACJ,IACDC,OAAMC,IACLC,QAAQC,IAAIF,EAAE,GAEtB,CAEA,SAASF,GAAQL,EAAO,2BACpBF,EAAAA,EAAMC,SAAS,YAAa,CAAEC,IAAKA,IAAOE,MAAMC,IAExChB,EAASO,MADO,KAAhBS,GAAMC,OACWD,EAAKA,KAEL,CAAC,CACtB,IACDG,OAAMC,IACLC,QAAQC,IAAIF,EAAE,GAEtB,CAGA,SAASG,GAASC,GACTA,EAAKX,MAAOW,EAAKC,QAGtBP,GAAQM,EAAKX,IACjB,C,OANAK,K,y+DCtKA,MAAMpB,EAAc,EAEpB,O","sources":["webpack://Technovati/./src/composables/formatError.js","webpack://Technovati/./src/components/PaginationLinks.vue","webpack://Technovati/./src/views/appraisal/AppraisalTypeView.vue","webpack://Technovati/./src/views/appraisal/AppraisalTypeView.vue?15f6"],"sourcesContent":["\r\nexport function formatError() {\r\n    function transformValidationErrors(response , handleType = 'axios'){\r\n        const errors = []\r\n        if(handleType == 'axios'){\r\n            if(response){\r\n                for (let key in response) {\r\n                    if(key.indexOf('.') !== -1){\r\n                        let k = trimKey(key);\r\n                        errors[k] = response[key][0]\r\n                    }else{\r\n                        errors[key] = response[key][0]\r\n                    }\r\n                    errors[key] = response[key][0]\r\n                }\r\n            }\r\n        }\r\n        return errors\r\n    }\r\n    \r\n    function trimKey(key){\r\n        const parts = key.split('.').filter(part => (part));\r\n        const part = key.split('.').filter(part => !isNaN(part));\r\n       \r\n        // const numericValues = parts.map(Number);\r\n        return parts[2]+part.map(Number);\r\n\r\n// console.log(numericValues);\r\n    }\r\n\r\n    return {\r\n        transformValidationErrors\r\n    }\r\n}","import script from \"./PaginationLinks.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./PaginationLinks.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n    <div>\r\n        <div class=\"container mt-2\">\r\n            <h3 class=\"mx-4\">Appraisal Types</h3>\r\n            <div class=\"row\">\r\n                <div class=\"col-md-4\">\r\n                    <div class=\"card\">\r\n                        <div class=\"card-body\">\r\n                            <fieldset class=\"border rounded-3 p-2 m-1\">\r\n                                <legend class=\"float-none w-auto px-2 h5\">Create Appraisal Type</legend>\r\n                                <form id=\"typeForm\">\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-md-12\">\r\n                                            <div class=\"form-group\">\r\n                                                <label class=\"form-label\">Type</label>\r\n                                                <input type=\"text\" v-model=\"type.name\" class=\"form-control\" placeholder=\"e.g first half apparisal\">\r\n                                                <p class=\"text-danger \" v-if=\"errors?.name\">{{ errors?.name }} </p>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-md-12\">\r\n                                            <div class=\"form-group\">\r\n                                                <label class=\"form-label\">Obtainable Score</label>\r\n                                                <input type=\"number\" step=\"0.1\" v-model=\"type.obtainable\" class=\"form-control\" placeholder=\"e.g 45\">\r\n                                                <p class=\"text-danger \" v-if=\"errors?.obtainable\">{{ errors?.obtainable }} </p>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-md-12\">\r\n                                            <div class=\"form-group\">\r\n                                                <label class=\"form-label\">Note</label>\r\n                                                <textarea type=\"text\" v-model=\"type.note\" class=\"form-control\" placeholder=\"enter note\"></textarea>\r\n                                                <p class=\"text-danger \" v-if=\"errors?.note\">{{ errors?.note }}  </p>\r\n                                            </div>\r\n                                        </div>\r\n\r\n\r\n                                    </div>\r\n                                    <button type=\"button\" class=\"btn btn-success btn-sm mt-2\"\r\n                                        @click=\"createAppraisalSection\">Submit</button>\r\n                                </form>\r\n\r\n                            </fieldset>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-md-8\">\r\n                    <div class=\"card\">\r\n                        <div class=\"card-header\">Appraisal Types</div>\r\n                        <div class=\"card-body\">\r\n                            <div class=\"table-responsive\">\r\n                                <table class=\"table-hover table-stripped table-bordered table\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>SN</th>\r\n                                            <th>Names</th>\r\n                                            <th>Obtainable</th>\r\n                                            <th>Description</th>\r\n                                            <th> <i class=\"bi bi-pencil-fill\"></i> </th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody v-if=\"sections.data\">\r\n                                        <tr v-for=\"(data, loop) in sections.data\" :key=\"loop\">\r\n                                            <td>{{ loop + 1 }}</td>\r\n                                            <td>{{ data.name }}</td>\r\n                                            <td>{{ data.obtainable }}</td>\r\n                                            <td>{{ data.note }}</td>\r\n                                            <td>\r\n                                                <div class=\"dropdown\">\r\n                                                    <button type=\"button\" class=\"btn btn-primary btn-sm dropdown-toggle\"\r\n                                                        data-bs-toggle=\"dropdown\">\r\n                                                        <i class=\"bi bi-tools\"></i>\r\n                                                    </button>\r\n                                                    <ul class=\"dropdown-menu\">\r\n                                                        <li class=\"bg-warning\"><a class=\"dropdown-item pointer\"\r\n                                                                @click=\"editSection(data)\">Edit</a> </li>\r\n                                                        <!-- <li class=\"bg-danger\"><a class=\"dropdown-item pointer\"\r\n                                                                @click=\"deleteLog(data.pid)\">Delete</a> </li> -->\r\n                                                    </ul>\r\n                                                </div>\r\n                                            </td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                    <tfoot v-else class=\"text-center\" style=\"width: 100%\" width=\"100%\">\r\n                                        <tr>\r\n                                            <td colspan=\"50\"><small class=\"small\">No Record Yet</small> </td>\r\n                                        </tr>\r\n                                    </tfoot>\r\n                                </table>\r\n                                <div class=\"flex justify-center mt-4\">\r\n                                    <nav class=\"relative justify-center rounded-md shadow pagination\">\r\n                                        <pagination-links v-for=\"(link, i) of sections.links\" :link=\"link\" :key=\"i\"\r\n                                            @next=\"nextPage(link)\"></pagination-links>\r\n                                    </nav>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport store from \"@/store\";\r\nimport { ref } from \"vue\";\r\nimport PaginationLinks from \"@/components/PaginationLinks.vue\";\r\nimport { formatError } from \"@/composables/formatError\";\r\nconst {transformValidationErrors} = formatError()\r\nconst errors = ref({});\r\nconst sections = ref({});\r\nconst type = ref({\r\n    name: '',\r\n    note: '' ,\r\n    obtainable: ''\r\n});\r\n\r\nconst editSection = (sec) => {\r\n    type.value = {\r\n        name: sec.name,\r\n        note: sec.note,\r\n        pid: sec.pid,\r\n        obtainable: sec.obtainable,\r\n    }\r\n}\r\n\r\n\r\nconst resetAttr = () => {\r\n    type.value = {\r\n        name: '',\r\n        note: '',\r\n        pid: '',\r\n        obtainable: '',\r\n    }\r\n}\r\n\r\n// const deleteLog = (id) => {\r\n//      store.dispatch('putMethod', { url: '/update-appraisal-section/0/' + id,prompt:'are you sure, you want to disable this ?' }).then((data) => {\r\n//         if (data?.status == 201) {\r\n//             loadLog()\r\n//         }\r\n//     })\r\n// }\r\n\r\nfunction createAppraisalSection() {\r\n    errors.value = []\r\n    store.dispatch('postMethod', { url: '/create-appraisal-section', param: type.value }).then((data) => {\r\n        if (data?.status == 422) {\r\n            errors.value = transformValidationErrors(data.data)\r\n        } else if (data?.status == 201) {\r\n            resetAttr()\r\n            loadLog()\r\n        }\r\n    }).catch(e => {\r\n        console.log(e);\r\n    })\r\n}\r\n\r\nfunction loadLog(url =  '/load-appraisal-section') {\r\n    store.dispatch('getMethod', { url: url }).then((data) => {\r\n        if (data?.status == 200) {\r\n            sections.value = data.data;\r\n        }else{\r\n            sections.value = {};\r\n        }\r\n    }).catch(e => {\r\n        console.log(e);\r\n    })\r\n}\r\n\r\nloadLog()\r\nfunction nextPage(link) {\r\n    if (!link.url || link.active) {\r\n        return;\r\n    }\r\n    loadLog(link.url)\r\n}\r\n\r\n</script>\r\n\r\n<style scoped></style>","import script from \"./AppraisalTypeView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./AppraisalTypeView.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["formatError","transformValidationErrors","response","handleType","errors","key","indexOf","k","trimKey","parts","split","filter","part","isNaN","map","Number","__exports__","ref","sections","type","name","note","obtainable","editSection","sec","value","pid","resetAttr","createAppraisalSection","store","dispatch","url","param","then","data","status","loadLog","catch","e","console","log","nextPage","link","active"],"sourceRoot":""}