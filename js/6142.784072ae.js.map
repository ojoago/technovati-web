{"version":3,"file":"js/6142.784072ae.js","mappings":"+fAGA,MAAMA,EAAc,EAEpB,O,k8CCyFA,MAAMC,GAASC,EAAAA,EAAAA,IAAI,CAAC,GACdC,GAAaD,EAAAA,EAAAA,IAAI,CAAC,GAClBE,GAAYF,EAAAA,EAAAA,IAAI,CAClBE,UAAW,GACXC,KAAM,KAGJC,EAAWC,IACbH,EAAUI,MAAQ,CACdJ,UAAWG,EAAIH,UACfC,KAAkB,OAAZE,EAAIF,KAAgB,EAAI,EAC9BI,IAAKF,EAAIE,IACZ,EAML,SAASC,IAELT,EAAOO,MAAQ,GACfG,EAAAA,EAAMC,SAAS,aAAc,CAAEC,IAAK,2BAA4BC,MAAOV,EAAUI,QAASO,MAAMC,IACxE,KAAhBA,GAAMC,OACNhB,EAAOO,MAAQQ,EAAKA,KACG,KAAhBA,GAAMC,SACbb,EAAUI,MAAQ,GAClBU,IACJ,IAEDC,OAAMC,IAELC,QAAQC,IAAIF,EAAE,GAEtB,CAEA,SAASF,EAAQL,EAAK,0BAClBF,EAAAA,EAAMC,SAAS,YAAa,CAAEC,IAAKA,IAAOE,MAAMC,IAExCb,EAAWK,MADK,KAAhBQ,GAAMC,OACaD,EAAKA,KAEL,CAAC,CACxB,IACDG,OAAMC,IACLC,QAAQC,IAAIF,EAAE,GAEtB,CAKA,SAASG,EAASC,GACTA,EAAKX,MAAOW,EAAKC,QAGtBP,EAAQM,EAAKX,IACjB,C,OANAK,I,wtDC5IA,MAAMlB,EAAc,EAEpB,O","sources":["webpack://Technovati/./src/components/PaginationLinks.vue","webpack://Technovati/./src/views/payroll/SalaryStructureView.vue","webpack://Technovati/./src/views/payroll/SalaryStructureView.vue?8638"],"sourcesContent":["import script from \"./PaginationLinks.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./PaginationLinks.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n    <div>\r\n        <div class=\"container mt-2\">\r\n            <h3 class=\"mx-4\">Salary Structures</h3>\r\n            <div class=\"row\">\r\n                <div class=\"col-md-4\">\r\n                    <div class=\"card\">\r\n                        <div class=\"card-body\">\r\n                            <fieldset class=\"border rounded-3 p-2 m-1\">\r\n                                <legend class=\"float-none w-auto px-2\">Salary Structure</legend>\r\n                                <form>\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-md-12\">\r\n                                            <div class=\"form-group\">\r\n                                                <label class=\"form-label\">Name</label>\r\n                                                <input type=\"text\" v-model=\"structure.structure\" class=\"form-control\"\r\n                                                    placeholder=\"e.g  of level one\">\r\n                                                <p class=\"text-danger \" v-if=\"errors?.structure\">{{ errors?.structure[0] }}\r\n                                                </p>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-md-12\">\r\n                                            <label class=\"form-label\">Has any Step</label>\r\n                                            <div class=\"form-group\">\r\n                                                <input type=\"radio\" v-model=\"structure.step\" value=\"1\"> yes\r\n                                                <input type=\"radio\" v-model=\"structure.step\" value=\"0\"> No\r\n                                                <p class=\"text-danger \" v-if=\"errors?.step\">{{ errors?.step[0]  }}\r\n                                                </p>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <button type=\"button\" class=\"btn btn-success btn-sm mt-2\"  @click=\"createSalaryStructure\">Submit</button>\r\n                                </form>\r\n                            </fieldset>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-md-8\">\r\n                    <div class=\"card\">\r\n                        <div class=\"card-header\">Salary Structures</div>\r\n                        <div class=\"card-body\">\r\n                            <div class=\"table-responsive\">\r\n                                <table class=\"table-hover table-stripped table-bordered table\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>SN</th>\r\n                                            <th>Structure</th>\r\n                                            <th> Has any Step</th>\r\n                                            <th> <i class=\"bi bi-gear-fill\"></i> </th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        <tr v-for=\"(lg, loop) in structures.data\" :key=\"loop\">\r\n                                            <td>{{ loop + 1 }}</td>\r\n                                            <td>{{ lg.structure }}</td>\r\n                                            <td>{{ lg.step }}</td>\r\n                                            <!-- <td>{{ lg.time_out }}</td> -->\r\n                                            <td>\r\n                                                <div class=\"dropdown\">\r\n                                                    <button type=\"button\" class=\"btn btn-primary btn-sm dropdown-toggle\"\r\n                                                        data-bs-toggle=\"dropdown\">\r\n                                                        <i class=\"bi bi-tools\"></i>\r\n                                                    </button>\r\n                                                    <ul class=\"dropdown-menu\">\r\n                                                        <li class=\"bg-warning\"><a class=\"dropdown-item pointer\"\r\n                                                                @click=\"editlog(lg)\">Edit</a> </li>\r\n                                                        <!-- <li class=\"bg-danger\"><a class=\"dropdown-item pointer\"\r\n                                                                @click=\"deleteLog(lg.pid)\">Delete</a> </li> -->\r\n                                                    </ul>\r\n                                                </div>\r\n                                            </td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                                <div class=\"flex justify-center mt-4\">\r\n                                    <nav class=\"relative justify-center rounded-md shadow pagination\">\r\n                                        <pagination-links v-for=\"(link, i) of structures.links\" :link=\"link\" :key=\"i\"\r\n                                            @next=\"nextPage(link)\"></pagination-links>\r\n                                    </nav>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport store from \"@/store\";\r\nimport { ref } from \"vue\";\r\nimport PaginationLinks from \"@/components/PaginationLinks.vue\";\r\n\r\nconst errors = ref({});\r\nconst structures = ref({});\r\nconst structure = ref({\r\n    structure: '',\r\n    step: '',\r\n});\r\n\r\nconst editlog = (stp) => {\r\n    structure.value = {\r\n        structure: stp.structure,\r\n        step: stp.step == 'Yes' ? 1 : 0,\r\n        pid: stp.pid,\r\n    }\r\n}\r\n// const deleteLog = (pid) => {\r\n//     alert(pid)\r\n// }\r\n\r\nfunction createSalaryStructure() {\r\n   \r\n    errors.value = []\r\n    store.dispatch('postMethod', { url: '/create-salary-structure', param: structure.value }).then((data) => {\r\n        if (data?.status == 422) {\r\n            errors.value = data.data\r\n        } else if (data?.status == 201) {\r\n            structure.value = [];\r\n            loadLog()\r\n        }\r\n        \r\n    }).catch(e => {\r\n        \r\n        console.log(e);\r\n    })\r\n}\r\n\r\nfunction loadLog(url ='/load-salary-structure') {\r\n    store.dispatch('getMethod', { url: url }).then((data) => {\r\n        if (data?.status == 200) {\r\n            structures.value = data.data;\r\n        }else{\r\n            structures.value = {}\r\n        }\r\n    }).catch(e => {\r\n        console.log(e);\r\n    })\r\n}\r\n\r\n\r\n\r\nloadLog()\r\nfunction nextPage(link) {\r\n    if (!link.url || link.active) {\r\n        return;\r\n    }\r\n    loadLog(link.url)\r\n}\r\n\r\n</script>\r\n\r\n<style scoped></style>","import script from \"./SalaryStructureView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./SalaryStructureView.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["__exports__","errors","ref","structures","structure","step","editlog","stp","value","pid","createSalaryStructure","store","dispatch","url","param","then","data","status","loadLog","catch","e","console","log","nextPage","link","active"],"sourceRoot":""}