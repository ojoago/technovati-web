{"version":3,"file":"js/2982.b5664ecf.js","mappings":"+fAGA,MAAMA,EAAc,EAEpB,O,yjDCqGA,MAAMC,GAAcC,EAAAA,EAAAA,KAAI,GAClBC,EAAaA,KACfF,EAAYG,OAAQ,EACpBC,EAASD,MAAQ,CAAC,CAAC,EAGjBE,GAAUJ,EAAAA,EAAAA,IAAI,MACdK,GAAQL,EAAAA,EAAAA,IAAI,MAClBI,EAAQF,MAAQI,EAAAA,GAAOC,OAAOC,MAAMC,MAAMC,IAC1CL,EAAMH,MAAQI,EAAAA,GAAOC,OAAOI,cAE5B,MAAMC,GAASZ,EAAAA,EAAAA,IAAI,CAAC,EAAE,IAEJ,GAAfK,EAAMH,MACLU,EAAOV,MAAQ,CAAC,EAAE,GACE,GAAfG,EAAMH,MACXU,EAAOV,MAAQ,CAAC,EAAE,GACE,GAAfG,EAAMH,QACXU,EAAOV,MAAQ,CAAC,EAAE,IAItB,MAAMC,GAAWH,EAAAA,EAAAA,IAAI,CAAC,GACtB,SAASa,EAAiBJ,GACtBN,EAASD,MAAQO,EACjBV,EAAYG,OAAQ,CACxB,CACA,SAASY,IACLR,EAAAA,EAAMS,SAAS,aAAc,CAAEC,IAAK,uBAAuBC,MAAOd,EAASD,QAASgB,MAAMT,IAClE,KAAhBA,GAAMG,OACNO,EAASjB,MAAQO,EAAKA,KACD,KAAhBA,GAAMG,SACXO,EAASjB,MAAQ,CAAC,EAClBD,IACJ,GAER,CAEA,MAAMkB,GAAWnB,EAAAA,EAAAA,IAAI,CAAC,GACtB,SAASoB,EAAYJ,EAAM,4BACvBV,EAAAA,EAAMS,SAAS,YAAa,CAAEC,IAAKA,IAAOE,MAAMT,IAExCU,EAASjB,MADO,KAAhBO,GAAMG,OACWH,EAAKA,KAEL,CAAC,CACtB,GAER,CAIA,SAASY,EAAoBX,EAAIE,GAC7BN,EAAAA,EAAMS,SAAS,YAAa,CAAEC,IAAM,+BAA8BN,KAAOE,IAAYU,OAAQ,iEAAkEJ,MAAMT,IAC7I,KAAhBA,GAAMG,QACNQ,GACJ,GAER,CAGA,SAASG,EAASC,GACTA,EAAKR,MAAOQ,EAAKC,QAGtBL,EAAYI,EAAKR,IACrB,C,OAjBAI,I,44ECpJA,MAAMtB,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,O","sources":["webpack://Technovati/./src/components/PaginationLinks.vue","webpack://Technovati/./src/views/funds/ManageFundRequest.vue","webpack://Technovati/./src/views/funds/ManageFundRequest.vue?2db9"],"sourcesContent":["import script from \"./PaginationLinks.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./PaginationLinks.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n    <div>\r\n        <div class=\"container my-2\">\r\n\r\n            <div class=\"card\">\r\n                <div class=\"card-body\">\r\n                    <h3 class=\"mx-3\">Staff fund Request</h3>\r\n                    <div class=\"table-responsive\">\r\n                        <table class=\"table-hover table-stripped table-bordered table\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>SN</th>\r\n                                    <th width=\"40%\">Purpose</th>\r\n                                    <th>Amount Requested</th>\r\n                                    <th>Amount Approved</th>\r\n                                    <th>Status</th>\r\n                                    <th>Date </th>\r\n                                    <th>Image </th>\r\n                                    <th> <i class=\"bi bi-gear-fill\"></i> </th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr v-for=\"(data, loop) in requests?.data\" :key=\"loop\">\r\n                                    <td>{{ loop + 1 }}</td>\r\n                                    <td >{{ data.purpose }}</td>\r\n                                    <td>{{ data.requested }}</td>\r\n                                    <td>\r\n                                      {{ data.approved }}\r\n                                    </td>\r\n                                    <td>{{ data.request_status }}</td>\r\n                                    <td>{{ data.date }}</td>\r\n                                    <td>\r\n                                        <img :src=\"data.image\" alt=\"\" class=\"img img-responsive tend-image\">\r\n                                    </td>\r\n                                    \r\n                                    <td>\r\n                                        <button class=\"btn btn-sm btn-success\" v-if=\"level == 2 && data.status == 1\" @click=\"respondToRequest(data)\">Respond</button>\r\n                                        <div v-else-if=\"data.status+1 == level || (data.line_manager == manager && data.status == 0)\">\r\n\r\n                                            <button class=\"btn btn-sm btn-success\"  @click=\"updateRequestStatus(data.pid,status[0])\">Approve</button>\r\n                                            <button class=\"btn btn-sm btn-secondary\"  @click=\"updateRequestStatus(data.pid,status[1])\">Reject</button>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                        <div class=\"flex justify-center mt-4\">\r\n                            <nav class=\"relative justify-center rounded-md shadow pagination\">\r\n                                <pagination-links v-for=\"(link, i) of requests.links\" :link=\"link\" :key=\"i\"\r\n                                    @next=\"nextPage(link)\"></pagination-links>\r\n                            </nav>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n         <o-modal :isOpen=\"toggleModal\" @submit=\"postResponse\" modal-class=\"modal-sm\" title=\"Request Leave\"\r\n            @modal-close=\"closeModal\">\r\n            <template #content>\r\n                <div>\r\n                    <form >\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-12\">\r\n                                <label class=\"form-label\">Amount Requested {{ response.requested }} </label>\r\n                                \r\n                            </div>\r\n                            <div class=\"col-md-12\">\r\n                                <div class=\"form-group\">\r\n                                    <label class=\"form-label\">Approve Amount: <span class=\"text-danger\">*</span> </label> <br>\r\n                                    <input type=\"number\" step=\".5\" v-model=\"response.approved_amount\"\r\n                                        class=\"form-control form-control-sm\"\r\n                                        placeholder=\"e.g 5000\">\r\n                                    <p class=\"text-danger \" v-if=\"errors?.status\">{{ errors?.status[0] }}</p>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-12\">\r\n                                <div class=\"form-group\">\r\n                                    <label class=\"form-label\">Approve? <span class=\"text-danger\">*</span> </label> <br>\r\n                                    <label for=\"yes\">Yes</label> &nbsp;\r\n                                    <input v-model=\"response.status\" type=\"radio\" id=\"yes\"  value=\"2\">\r\n                                    &nbsp;\r\n                                    &nbsp;\r\n                                    &nbsp;\r\n                                    <label for=\"no\">No</label>\r\n                                    &nbsp;\r\n                                    <input v-model=\"response.status\" type=\"radio\" id=\"no\"  value=\"6\">\r\n                                    <p class=\"text-danger \" v-if=\"errors?.status\">{{ errors?.status[0] }}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </template>\r\n\r\n        </o-modal>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from \"vue\";\r\nimport store from \"@/store\";\r\nimport PaginationLinks from \"@/components/PaginationLinks.vue\";\r\n// import { useRouter } from 'vue-router';\r\n// import BudgetComponent from '@/components/travel/BudgetComponent.vue'\r\nimport OModal from \"@/components/OModal.vue\";\r\nconst toggleModal = ref(false)\r\nconst closeModal = () => {\r\n    toggleModal.value = false;\r\n    response.value = {}\r\n};\r\n\r\nconst manager = ref(null);\r\nconst level = ref(null);\r\nmanager.value = store?.state?.user?.data?.pid;\r\nlevel.value = store?.state?.approvalLevel;\r\n\r\nconst status = ref([1,5])\r\n\r\nif(level.value == 2){\r\n    status.value = [2,6]\r\n}else if(level.value == 3){\r\n    status.value = [3,7]\r\n}else if(level.value == 4){\r\n    status.value = [4,8]\r\n}\r\n \r\n\r\nconst response = ref({})\r\nfunction respondToRequest(data) {\r\n    response.value = data;\r\n    toggleModal.value = true\r\n}\r\nfunction postResponse() {\r\n    store.dispatch('postMethod', { url: '/approve-fund-amount',param: response.value }).then((data) => {\r\n        if (data?.status == 422) {\r\n            requests.value = data.data\r\n        }else if(data?.status == 201){\r\n            requests.value = {}\r\n            closeModal()\r\n        }\r\n    })\r\n}\r\n\r\nconst requests = ref({})\r\nfunction loadRequest(url = '/load-staff-fund-request') {\r\n    store.dispatch('getMethod', { url: url }).then((data) => {\r\n        if (data?.status == 200) {\r\n            requests.value = data.data\r\n        }else{\r\n            requests.value = {}\r\n        }\r\n    })\r\n}\r\nloadRequest()\r\n\r\n\r\nfunction updateRequestStatus(pid,status){\r\n    store.dispatch('putMethod', { url: `/update-fund-request-status/${pid}/${status}`  , prompt: 'Are you sure, you want to update the status of this request?' }).then((data) => {\r\n        if (data?.status == 201) {\r\n            loadRequest()\r\n        }\r\n    })\r\n}\r\n\r\n\r\nfunction nextPage(link) {\r\n    if (!link.url || link.active) {\r\n        return;\r\n    }\r\n    loadRequest(link.url)\r\n}\r\n\r\n\r\n</script>\r\n\r\n<style scoped>\r\n    .dropdown{\r\n        position: relative;\r\n    }\r\n\r\n    .dropdown-menu{\r\n        position: absolute;\r\n    }\r\n    \r\n.tend-image {\r\n    width: 40px;\r\n}\r\n\r\n.tend-image:hover {\r\n    width: 250px !important;\r\n    height: auto !important;\r\n    position: absolute !important;\r\n    right: 20px !important;\r\n    z-index: 1000;\r\n}\r\n</style>","import script from \"./ManageFundRequest.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ManageFundRequest.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ManageFundRequest.vue?vue&type=style&index=0&id=6d6ca8aa&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-6d6ca8aa\"]])\n\nexport default __exports__"],"names":["__exports__","toggleModal","ref","closeModal","value","response","manager","level","store","state","user","data","pid","approvalLevel","status","respondToRequest","postResponse","dispatch","url","param","then","requests","loadRequest","updateRequestStatus","prompt","nextPage","link","active"],"sourceRoot":""}