{"version":3,"file":"js/7783.1ae1401c.js","mappings":"6WAkBA,MAAMA,GAASC,EAAAA,EAAAA,IAAI,CAAC,GACpB,SAASC,IACLC,EAAAA,EAAMC,SAAS,eAAgB,UAAUC,MAAK,EAAGC,WAC7CN,EAAOO,MAAQD,CAAI,IACpBE,OAAMC,IACLC,QAAQC,IAAIF,EAAE,GAEtB,C,OACAP,I,ybCvBA,MAAMU,EAAc,EAEpB,Q,ohDCiGA,MAAMC,GAASZ,EAAAA,EAAAA,IAAI,CAAC,GACda,GAAQb,EAAAA,EAAAA,IAAI,CAAC,GAEbc,GAAUd,EAAAA,EAAAA,IAAI,CAChBe,QAAS,GACTC,QAAS,GACTC,UAAW,GACXJ,MAAO,KAGLK,EAAYA,KACdJ,EAAQR,MAAQ,CACZS,QAAS,GACTC,QAAS,GACTC,UAAW,GACXJ,MAAO,GACV,EAGCM,EAAWC,IAGb,IAAIC,EAAQP,EAAQR,MAAMO,MAAMS,WAAUC,GAAKA,EAAEC,KAAOJ,EAAKI,OAC9C,IAAXH,EACAP,EAAQR,MAAMO,MAAMY,KAAK,CACrBD,IAAKJ,EAAKI,IACVE,SAAU,EACVC,KAAMP,EAAKO,OAGfb,EAAQR,MAAMO,MAAMQ,GAAOK,UAC/B,EAEEE,EAAcC,IAOhBf,EAAQR,MAAMO,MAAMiB,OAAOD,EAAG,EAAE,EAIpC,SAASE,IACLnB,EAAON,MAAQ,GACfJ,EAAAA,EAAMC,SAAS,aAAc,CAAE6B,IAAK,cAAeC,MAAOnB,EAAQR,QAASF,MAAMC,IACzD,KAAhBA,GAAM6B,OACNtB,EAAON,MAAQD,EAAKA,KACG,KAAhBA,GAAM6B,SACbhB,IACAiB,IACJ,GAER,CAEA,SAASA,IACLjC,EAAAA,EAAMC,SAAS,YAAa,CAAE6B,IAAK,sBAAuB5B,MAAMC,IAC5DH,EAAAA,EAAMkC,OAAO,cAAc,GACP,KAAhB/B,GAAM6B,SACNrB,EAAMP,MAAQD,EAAKA,KACvB,GAER,CARA8B,IAUA,MAAME,GAAQrC,EAAAA,EAAAA,IAAI,CAAC,GACnB,SAASsC,IACLpC,EAAAA,EAAMC,SAAS,eAAgB,SAASC,MAAK,EAAGC,WAC5CgC,EAAM/B,MAAQD,CAAI,IACnBE,OAAMC,IACLC,QAAQC,IAAIF,EAAE,GAEtB,C,OACA8B,I,uoECzKA,MAAM,IAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,S","sources":["webpack://Technovati/./src/components/store/StoreDropdown.vue","webpack://Technovati/./src/components/store/StoreDropdown.vue?d5fd","webpack://Technovati/./src/views/inventory/CrInView.vue","webpack://Technovati/./src/views/inventory/CrInView.vue?9313"],"sourcesContent":["<template>\r\n    <div>\r\n        <select class=\"form-control\" @input=\"$emit('update:modelValue', $event.target.value)\" >\r\n            <option value=\"\" selected>Make Selection</option>\r\n            <template v-for=\"sec in stores\" :key=\"sec.id\">\r\n                <option v-if=\"stores.length == 1\" selected :value=\"sec.id\">{{ sec.text }}\r\n                </option>\r\n                <option v-else :value=\"sec.id\">{{ sec.text }} </option>\r\n            </template>\r\n        </select>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport store from \"@/store\";\r\nimport { ref } from \"vue\";\r\n// import { defineProps, defineEmits } from \"vue\";\r\n\r\nconst stores = ref({})\r\nfunction dropdownSection() {\r\n    store.dispatch('loadDropdown', 'stores').then(({ data }) => {\r\n        stores.value = data;\r\n    }).catch(e => {\r\n        console.log(e);\r\n    })\r\n}\r\ndropdownSection()\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>","import script from \"./StoreDropdown.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./StoreDropdown.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n    <div>\r\n        <div class=\"container mt-2\">\r\n            <div class=\"row\">\r\n                <div class=\"col-md-7\">\r\n                    <div class=\"card\">\r\n                        <div class=\"card-header\">Receiving Items to Inventory</div>\r\n                        <div class=\"card-body\">\r\n                            <input type=\"text\" class=\" form-control form-control-sm\" placeholder=\"search Item\">\r\n                            <div class=\"table-responsive\">\r\n                                <table class=\"table-hover table-stripped table-bordered table\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th width=\"5%\">SN</th>\r\n                                            <th>Name</th>\r\n                                            <!-- <th>Model</th> -->\r\n                                            <th>Quantity</th>\r\n                                            <!-- <th>Description</th> -->\r\n                                            <th align=\"center\"> <i class=\"bi bi-gear-fill\"></i> </th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        <tr v-for=\"(item, loop) in items?.data\" :key=\"loop\">\r\n                                            <td>{{ loop + 1 }}</td>\r\n                                            <td>{{ item.name }}</td>\r\n                                            <!-- <td>{{ item.model }} </td> -->\r\n                                            <td>{{ item.item?.quantity }} {{ item.unit }}</td>\r\n                                            <td>\r\n                                                <button @click=\"addItem(item)\" type=\"button\"\r\n                                                    class=\"btn btn-primary btn-sm\">\r\n                                                    <i class=\"bi bi-plus\"></i>\r\n                                                </button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-md-5\">\r\n                    <div class=\"card\">\r\n                        <div class=\"card-body\">\r\n                            <fieldset class=\"border rounded-3 p-2 m-1\" id=\"requestBody\">\r\n                                <legend class=\"float-none w-auto px-2 h5\">Request Items</legend>\r\n                                <form id=\"itemForm\" v-if=\"request.items.length\">\r\n                                    <fieldset class=\"border rounded-3 p-2 m-1\">\r\n                                        <div class=\"col-md-12\" v-for=\"(item, loop) in request.items\" :key=\"loop\">\r\n                                            <label class=\"form-label\">{{ item.name }} </label>\r\n                                            <div class=\"input-group\">\r\n                                                <input type=\"number\" v-model=\"item.quantity\" class=\"form-control\"\r\n                                                    placeholder=\"e.g ABU Zaria\">\r\n                                                <button type=\"button\" class=\"btn btn-danger btn-sm\"\r\n                                                    @click=\"removeitem(loop)\"> <i class=\"bi bi-file-minus-fill\"></i>\r\n                                                </button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </fieldset>\r\n\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-md-12\">\r\n                                            <label class=\"form-label\">Comment</label>\r\n                                            <textarea type=\"text\" v-model=\"request.comment\"\r\n                                                class=\"form-control form-control-sm\" placeholder=\"e.g UIU\"></textarea>\r\n                                            <p class=\"text-danger \" v-if=\"errors?.comment\">{{ errors?.comment[0] }} </p>\r\n                                        </div>\r\n                                        <div class=\"col-md-12\">\r\n                                            <label class=\"form-label\">Receiving Store</label>\r\n                                            <StoreDrop v-model=\"request.store_pid\" />\r\n                                            <p class=\"text-danger \" v-if=\"errors?.store_pid\">{{ errors?.store_pid[0] }}\r\n                                            </p>\r\n                                        </div>\r\n                                        <div class=\"col-md-12\">\r\n                                            <label class=\"form-label\">Receiver</label>\r\n                                            <Select2 v-model=\"request.reciver\" :options=\"users\"\r\n                                                :settings=\"{ width: '100%' }\" />\r\n                                            <p class=\"text-danger \" v-if=\"errors?.reciver\">{{ errors?.reciver[0] }} </p>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div class=\"float-end\">\r\n                                        <button type=\"button\" class=\"btn btn-success btn-sm mt-2 mb-2\"\r\n                                            @click=\"requestMaterial\">Submit</button>\r\n                                    </div>\r\n                                </form>\r\n\r\n                            </fieldset>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport store from \"@/store\";\r\nimport { ref } from \"vue\";\r\nimport Select2 from 'vue3-select2-component';\r\nimport StoreDrop from '@/components/store/StoreDropdown.vue';\r\nconst errors = ref({});\r\nconst items = ref({});\r\n\r\nconst request = ref({\r\n    reciver: '',\r\n    comment: '',\r\n    store_pid: '',\r\n    items: [],\r\n});\r\n\r\nconst resetAttr = () => {\r\n    request.value = {\r\n        reciver: '',\r\n        comment: '',\r\n        store_pid: '',\r\n        items: [],\r\n    }\r\n}\r\n\r\nconst addItem = (item) => {\r\n    // request.value.items[index].quantity++\r\n\r\n    var index = request.value.items.findIndex(x => x.pid == item.pid)\r\n    if (index === -1) {\r\n        request.value.items.push({\r\n            pid: item.pid,\r\n            quantity: 1,\r\n            name: item.name,\r\n        })\r\n    } else {\r\n        request.value.items[index].quantity++\r\n    }\r\n}\r\nconst removeitem = (i) => {\r\n    // let len = request.value.items.length;\r\n    // if (len === 1) {\r\n    //     store.commit('notify', { message: 'Qualification requires at least one instituion', type: 'warning' })\r\n    //     return;\r\n    // }\r\n\r\n    request.value.items.splice(i, 1);\r\n}\r\n\r\n\r\nfunction requestMaterial() {\r\n    errors.value = []\r\n    store.dispatch('postMethod', { url: '/item-cr-in', param: request.value }).then((data) => {\r\n        if (data?.status == 422) {\r\n            errors.value = data.data\r\n        } else if (data?.status == 201) {\r\n            resetAttr();\r\n            loadItem()\r\n        }\r\n    })\r\n}\r\nloadItem()\r\nfunction loadItem() {\r\n    store.dispatch('getMethod', { url: '/load-cr-in-items' }).then((data) => {\r\n        store.commit('setSpinner', false)\r\n        if (data?.status == 200) {\r\n            items.value = data.data;\r\n        }\r\n    })\r\n}\r\n\r\nconst users = ref({})\r\nfunction dropdownSupplier() {\r\n    store.dispatch('loadDropdown', 'users').then(({ data }) => {\r\n        users.value = data;\r\n    }).catch(e => {\r\n        console.log(e);\r\n    })\r\n}\r\ndropdownSupplier()\r\n\r\n// function loadStoreItem(pid) {\r\n//     store.dispatch('getMethod', { url: '/load-cr-out-items/' + pid }).then((data) => {\r\n//         if (data?.status == 200) {\r\n//             items.value = data.data;\r\n//         } else {\r\n//             items.value = []\r\n//         }\r\n//     }).catch(e => {\r\n//         console.log(e);\r\n//     })\r\n// }\r\n\r\n</script>\r\n\r\n<style scoped>\r\n/* #requestBody{\r\n    overflow-y: auto;\r\n    max-height: calc(100vh - 130px) !important;\r\n    overflow-x: hidden;\r\n}\r\n#requestBody{\r\n    scrollbar-width: thin !important;\r\n}\r\n\r\n#requestBody::-webkit-scrollbar{\r\n    width: 8px !important;\r\n} */\r\n\r\n</style>","import script from \"./CrInView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./CrInView.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./CrInView.vue?vue&type=style&index=0&id=2edeef9f&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-2edeef9f\"]])\n\nexport default __exports__"],"names":["stores","ref","dropdownSection","store","dispatch","then","data","value","catch","e","console","log","__exports__","errors","items","request","reciver","comment","store_pid","resetAttr","addItem","item","index","findIndex","x","pid","push","quantity","name","removeitem","i","splice","requestMaterial","url","param","status","loadItem","commit","users","dropdownSupplier"],"sourceRoot":""}