{"version":3,"file":"js/6227.b03e0054.js","mappings":"0mCA6DA,MAAMA,GAAQC,EAAAA,EAAAA,IAAI,CACdC,cAAc,GACdC,UAAU,GACVC,KAAM,CAAC,CAAEC,OAAQ,OAGfC,EAAYA,KACdN,EAAMO,MAAQ,CACVL,cAAe,GACfC,UAAW,GACXC,KAAM,CAAC,CAAEC,OAAQ,KACpB,EAECG,EAAUA,KACZR,EAAMO,MAAMH,KAAKK,KAAK,CAAEJ,OAAO,IAAI,EAEjCK,EAAcC,IAChB,IAAIC,EAAMZ,EAAMO,MAAMH,KAAKS,OACf,IAARD,EAIJZ,EAAMO,MAAMH,KAAKU,OAAOH,EAAG,GAHvBI,EAAAA,EAAMC,OAAO,SAAU,CAAEC,QAAS,mCAAoCC,KAAM,WAGnD,EAI3BC,EAAcC,IAChBC,EAAcD,EAAME,OAAOf,MAAM,EAG/BgB,GAAStB,EAAAA,EAAAA,IAAI,CAAC,GACpB,SAASuB,IACLT,EAAAA,EAAMU,SAAS,aAAc,CAAEC,IAAK,mBAAmBC,MAAM3B,EAAMO,QAASqB,MAAMC,IAC1D,KAAhBA,GAAMC,OACNP,EAAOhB,MAAQsB,EAAKA,KAEC,KAAhBA,GAAMC,QACXxB,GACJ,IACDyB,OAAMC,IACLC,QAAQC,IAAIF,EAAE,GAEtB,CAIA,MAAMG,GAAgBlC,EAAAA,EAAAA,IAAI,CAAC,GAC3B,SAASmC,IACLrB,EAAAA,EAAMU,SAAS,eAAgB,oBAAoBG,MAAK,EAAGC,WACvDM,EAAc5B,MAAQsB,CAAI,IAC3BE,OAAMC,IACLC,QAAQC,IAAIF,EAAE,GAEtB,CACA,MAAMK,GAAYpC,EAAAA,EAAAA,IAAI,IACtB,SAASoB,EAAciB,GACnBvB,EAAAA,EAAMU,SAAS,eAAgB,gBAAgBa,GAAIV,MAAK,EAAGC,WACvDQ,EAAU9B,MAAQsB,CAAI,IACvBE,OAAMC,IACLC,QAAQC,IAAIF,EAAE,GAEtB,C,OAEAI,I,ijDCzHA,MAAMG,EAAc,EAEpB,Q,ymCCoDA,MAAMC,GAASvC,EAAAA,EAAAA,IAAI,CAAC,GACpB,SAASkB,IACLJ,EAAAA,EAAMU,SAAS,YAAa,CAAEC,IAAK,uBAAwBE,MAAMC,IACzC,KAAhBA,GAAMC,SACNU,EAAOjC,MAAQsB,EAAKA,KACxB,IACDE,OAAMC,IACLC,QAAQC,IAAIF,EAAE,GAEtB,C,OAEAb,I,ilBCjEA,MAAM,EAAc,EAEpB,O","sources":["webpack://Technovati/./src/components/forms/BasicSalaryConfigComponent.vue","webpack://Technovati/./src/components/forms/BasicSalaryConfigComponent.vue?46ac","webpack://Technovati/./src/views/payroll/BasicSalaryView.vue","webpack://Technovati/./src/views/payroll/BasicSalaryView.vue?3d8a"],"sourcesContent":["<template>\r\n    <div>\r\n        <div class=\"container mt-2\">\r\n            <div class=\"card\">\r\n                <div class=\"card-header\">Basic Salary Configuration</div>\r\n                <div class=\"card-body\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-6\">\r\n                            <div class=\"form-group\">\r\n                                <label class=\"form-label\">Salary Structure</label>\r\n                                <select class=\"form-control form-control-sm\" v-model=\"basic.structure_pid\"\r\n                                    @change=\"loadGrades($event)\">\r\n                                    <option value=\"\" selected>Make Selection</option>\r\n                                    <option v-for=\"sec in structureDrop\" :key=\"sec.id\" :value=\"sec.id\">{{ sec.text }}\r\n                                    </option>\r\n                                </select>\r\n                                <p class=\"text-danger \" v-if=\"errors?.structure_pid\">{{ errors?.structure_pid[0] }} </p>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <div class=\"col-md-6\">\r\n                            <div class=\"form-group\">\r\n                                <label class=\"form-label\">Salary Grade</label>\r\n                                <Select2 v-model=\"basic.grade_pid\" :options=\"gradeDrop\" id=\"pid\" lable=\"grade\"\r\n                                    :settings=\"{ width: '100%' }\" />\r\n                                <p class=\"text-danger \" v-if=\"errors?.grade_pid\">{{ errors?.grade_pid[0] }} </p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <fieldset class=\"border rounded-3 p-2 m-1\" v-if=\"basic.grade_pid\">\r\n                        <legend class=\"float-none w-auto px-2 h5\"> Steps</legend>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-6 \" v-for=\"(step, loop) in basic.step\" :key=\"loop\">\r\n                                <div class=\"input-group mb-1\">\r\n                                    <label class=\"bg-light p-1\">Step {{ loop+1 }} </label>\r\n                                    <input type=\"number\" v-model=\"step.amount\" step=\"0.1\"\r\n                                        class=\"form-control form-control-sm\">\r\n                                    <button class=\"btn btn-sm btn-danger\" @click=\"removeStep\"> <i\r\n                                            class=\"bi bi-file-minus\"></i> </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <button class=\"btn btn-sm btn-primary\" @click=\"addStep\"> <i class=\"bi bi-plus\"></i> </button>\r\n\r\n                        <hr>\r\n                        <button class=\"btn btn-sm btn-primary\" @click=\"addSalarySteps\"> Submit </button>\r\n\r\n                    </fieldset>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport store from \"@/store\";\r\nimport { ref } from \"vue\";\r\nimport Select2 from 'vue3-select2-component';\r\n\r\nconst basic = ref({\r\n    structure_pid:'',\r\n    grade_pid:'' ,\r\n    step: [{ amount: '' }]\r\n})\r\n\r\nconst resetAttr = () => {\r\n    basic.value = {\r\n        structure_pid: '',\r\n        grade_pid: '',\r\n        step: [{ amount: '' }]\r\n    }\r\n}\r\nconst addStep = () => {\r\n    basic.value.step.push({ amount:''})\r\n}\r\nconst removeStep = (i) => {\r\n    let len = basic.value.step.length;\r\n    if (len === 1) {\r\n        store.commit('notify', { message: 'One Step is required to proceed ', type: 'warning' })\r\n        return;\r\n    }\r\n    basic.value.step.splice(i, 1);\r\n}\r\n\r\n\r\nconst loadGrades = (event) => {\r\n    dropdownGrade(event.target.value)\r\n}\r\n\r\nconst errors = ref({})\r\nfunction addSalarySteps() {\r\n    store.dispatch('postMethod', { url: '/add-salary-step',param:basic.value }).then((data) => {\r\n        if (data?.status == 422) {\r\n            errors.value = data.data;\r\n        }\r\n        else if (data?.status == 201) {\r\n            resetAttr()\r\n        }\r\n    }).catch(e => {\r\n        console.log(e);\r\n    })\r\n}\r\n\r\n//salary-structure\r\n\r\nconst structureDrop = ref({});\r\nfunction dropdownStructure() {\r\n    store.dispatch('loadDropdown', 'salary-structure').then(({ data }) => {\r\n        structureDrop.value = data;\r\n    }).catch(e => {\r\n        console.log(e);\r\n    })\r\n}\r\nconst gradeDrop = ref([]);\r\nfunction dropdownGrade(id) {\r\n    store.dispatch('loadDropdown', 'salary-grade/'+id).then(({ data }) => {\r\n        gradeDrop.value = data;\r\n    }).catch(e => {\r\n        console.log(e);\r\n    })\r\n}\r\n\r\ndropdownStructure()\r\n\r\n</script>\r\n\r\n<style scoped></style>","import script from \"./BasicSalaryConfigComponent.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./BasicSalaryConfigComponent.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n    <div>\r\n        <div class=\"container mt-2\">\r\n            <div class=\"card\">\r\n                <div class=\"card-header\"><h3 class=\"mx-4\">Basic Salary</h3></div>\r\n                <div class=\"card-body\">\r\n\r\n                    <ul class=\"nav nav-tabs d-flex\" id=\"myTabjustified\" role=\"tablist\">\r\n                        <li class=\"nav-item flex-fill\" role=\"presentation\">\r\n                            <button class=\"nav-link w-100 active\" id=\"personal-tab\" data-bs-toggle=\"tab\"\r\n                                data-bs-target=\"#view\" type=\"button\" role=\"tab\" aria-controls=\"personal\"\r\n                                aria-selected=\"true\">Basic Salaries</button>\r\n                        </li>\r\n                        <li class=\"nav-item flex-fill\" role=\"presentation\">\r\n                            <button class=\"nav-link w-100\" id=\"next-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#config\"\r\n                                type=\"button\" role=\"tab\" aria-controls=\"next\"\r\n                                aria-selected=\"false\">Configuartion</button>\r\n                        </li>\r\n\r\n                    </ul>\r\n                    \r\n                    <div class=\"tab-content pt-2\" id=\"myTabjustifiedContent\">\r\n                        <div class=\"tab-pane fade show active\" id=\"view\" role=\"tabpanel\" aria-labelledby=\"personal-tab\">\r\n                            <fieldset class=\"border rounded-3 p-2 m-1\" v-for=\"(object, loop) in basics\" :key=\"loop\">\r\n                                <legend class=\"float-none w-auto px-2 h5\"> {{ object[0].structure.toUpperCase() }}\r\n                                </legend>\r\n                                <fieldset class=\"border rounded-3 p-3\">\r\n                                    <span v-for=\"(key, l) in object\" :key=\"l\" class=\"badge bg-dark p-2 m-1 ellipsis\">\r\n                                        Step {{ key.step }} : {{ key.amount }}\r\n                                    </span>\r\n\r\n                                </fieldset>\r\n                            </fieldset>\r\n\r\n                        </div>\r\n\r\n                        <div class=\"tab-pane fade\" id=\"config\" role=\"tabpanel\" aria-labelledby=\"salary-tab\">\r\n\r\n                            <SalaryConfig />\r\n                    </div>\r\n\r\n                </div>\r\n\r\n\r\n\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport store from \"@/store\";\r\nimport { ref } from \"vue\";\r\nimport SalaryConfig from '@/components/forms/BasicSalaryConfigComponent.vue'\r\n\r\nconst basics = ref({})\r\nfunction loadGrades() {\r\n    store.dispatch('getMethod', { url: '/load-basic-salary' }).then((data) => {\r\n        if (data?.status == 200) {\r\n            basics.value = data.data;\r\n        }\r\n    }).catch(e => {\r\n        console.log(e);\r\n    })\r\n}\r\n\r\nloadGrades()\r\n</script>\r\n\r\n<style scoped></style>","import script from \"./BasicSalaryView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./BasicSalaryView.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["basic","ref","structure_pid","grade_pid","step","amount","resetAttr","value","addStep","push","removeStep","i","len","length","splice","store","commit","message","type","loadGrades","event","dropdownGrade","target","errors","addSalarySteps","dispatch","url","param","then","data","status","catch","e","console","log","structureDrop","dropdownStructure","gradeDrop","id","__exports__","basics"],"sourceRoot":""}