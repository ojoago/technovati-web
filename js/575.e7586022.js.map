{"version":3,"file":"js/575.e7586022.js","mappings":"8fAGA,MAAMA,EAAc,EAEpB,O,yhDCqGA,MAAMC,GAAeC,EAAAA,EAAAA,IAAI,GACzBD,EAAaE,MAAQC,EAAAA,EAAMC,MAAMC,cACjC,MAAMC,GAASL,EAAAA,EAAAA,IAAI,CAAC,GAGdM,GAAcN,EAAAA,EAAAA,KAAI,GAElBO,EAAaA,KACfD,EAAYL,OAAQ,CAAK,EAEvBO,GAAWR,EAAAA,EAAAA,IAAI,CACjB,QAAW,GACX,UAAa,GACb,OAAU,KAGRS,EAAWC,IACbF,EAASP,MAAMU,UAAYD,EAC3BJ,EAAYL,OAAQ,CAAI,EAGtBW,EAAmBA,KACrBP,EAAOJ,MAAQ,GACfC,EAAAA,EAAMW,SAAS,aAAc,CAAEC,IAAK,yBAA0BC,MAAOP,EAASP,QAASe,MAAMC,IACzF,GAAoB,KAAhBA,GAAMC,OACNb,EAAOJ,MAAQgB,EAAKA,UACjB,GAAoB,KAAhBA,GAAMC,OAAe,CAC5BC,IACA,IAAIC,EAAOC,SAASC,cAAc,UAClCF,EAAKG,OACT,IACF,EAGAC,GAASxB,EAAAA,EAAAA,IAAI,CAAC,GAIpB,SAASmB,EAAWL,EAAM,kBACtBZ,EAAAA,EAAMW,SAAS,YAAa,CAAEC,IAAKA,IAAME,MAAMC,IACvB,KAAhBA,GAAMC,SACNM,EAAOvB,MAAQgB,EAAKA,KACxB,IACDQ,OAAMC,IACLC,QAAQC,IAAIF,EAAE,GAEtB,CAEA,SAASG,EAASC,GACTA,EAAKhB,MAAOgB,EAAKC,QAGtBZ,EAAWW,EAAKhB,IACpB,C,OAjBAK,I,snEC3IA,MAAMrB,EAAc,EAEpB,O","sources":["webpack://Technovati/./src/components/PaginationLinks.vue","webpack://Technovati/./src/views/leave/LeaveRequest.vue","webpack://Technovati/./src/views/leave/LeaveRequest.vue?5912"],"sourcesContent":["import script from \"./PaginationLinks.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./PaginationLinks.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n    <div>\r\n        <div class=\"container-fluid mt-2\">\r\n            <div class=\"card\">\r\n                <div class=\"card-body\">\r\n                    <h5 class=\"card-title\">Staff Leave\r\n                        <!-- <button class=\"btn btn-primary btn-sm\" @click=\"openModal\">New Leave</button> -->\r\n                    </h5>\r\n                    <fieldset class=\"border rounded-3 p-2 m-1\">\r\n                        <legend class=\"float-none w-auto px-2\">Leave Request</legend>\r\n                        <div class=\"table-responsive\">\r\n                            <table class=\"table-hover table-stripped table-bordered table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>SN</th>\r\n                                        <th>Leave</th>\r\n                                        <th>From</th>\r\n                                        <th>to</th>\r\n                                        <th>Days</th>\r\n                                        <th>note</th>\r\n                                        <th>status</th>\r\n                                        <th>manager comment</th>\r\n                                        <th>hr comment</th>\r\n                                        <th> <i class=\"bi bi-gear-fill\"></i> </th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr v-for=\"(lv, loop) in leaves.data\" :key=\"loop\">\r\n                                        <td>{{ loop + 1 }}</td>\r\n                                        <td>{{ lv.leave.leave }}</td>\r\n                                        <td>{{ lv.begin }}</td>\r\n                                        <td>{{ lv.end }}</td>\r\n                                        <td>{{ lv.days }}</td>\r\n                                        <td>{{ lv.note }}</td>\r\n                                        <td>{{ lv.request_status }}</td>\r\n                                        <td>{{ lv.line_manager_comment }}</td>\r\n                                        <td>{{ lv.hr_comment }}</td>\r\n                                        <td>\r\n                                            <div class=\"dropdown\" v-if=\"lv.status == 1 && !lv.expired\">\r\n                                                <button type=\"button\" class=\"btn btn-primary btn-sm\"\r\n                                                    @click=\"respond(lv.pid)\">\r\n                                                    <span>Response</span>\r\n                                                </button>\r\n                                            </div>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                            <div class=\"flex justify-center mt-4\">\r\n                                <nav class=\"relative justify-center rounded-md shadow pagination\">\r\n                                    <pagination-links v-for=\"(link, i) of leaves.links\" :link=\"link\" :key=\"i\"\r\n                                        @next=\"nextPage(link)\"></pagination-links>\r\n                                </nav>\r\n                            </div>\r\n                        </div>\r\n                    </fieldset>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <o-modal :isOpen=\"assignModal\" @submit=\"respondToRequest\" modal-class=\"modal-sm\" title=\"Request Leave\"\r\n            @modal-close=\"closeModal\">\r\n            <template #content>\r\n                <div>\r\n                    <form id=\"rForm\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-12\">\r\n                                <div class=\"form-group\">\r\n                                    <label class=\"form-label\">Comment <span class=\"text-danger\">*</span> </label>\r\n                                    <textarea type=\"text\" cols=\"4\" v-model=\"response.comment\"\r\n                                        class=\"form-control form-control-sm\"\r\n                                        placeholder=\"e.g this leave only applies to senior devs\"></textarea>\r\n                                    <p class=\"text-danger \" v-if=\"errors?.comment\">{{ errors?.comment[0] }}</p>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-12\">\r\n                                <div class=\"form-group\">\r\n                                    <label class=\"form-label\">Approve? <span class=\"text-danger\">*</span> </label> <br>\r\n                                    <label for=\"yes\">Yes</label> &nbsp;\r\n                                    <input v-model=\"response.status\" type=\"radio\" id=\"yes\" name=\"status\" value=\"3\">\r\n                                    &nbsp;\r\n                                    &nbsp;\r\n                                    &nbsp;\r\n                                    <label for=\"no\">No</label>\r\n                                    &nbsp;\r\n                                    <input v-model=\"response.status\" type=\"radio\" id=\"no\" name=\"status\" value=\"4\">\r\n                                    <p class=\"text-danger \" v-if=\"errors?.status\">{{ errors?.status[0] }}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </template>\r\n\r\n        </o-modal>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\n\r\nimport store from \"@/store\";\r\nimport { ref } from \"vue\";\r\nimport PaginationLinks from \"@/components/PaginationLinks.vue\";\r\nimport OModal from \"@/components/OModal.vue\";\r\n\r\n\r\nconst approvalLeve = ref(0)\r\napprovalLeve.value = store.state.approvalLevel;\r\nconst errors = ref({});\r\n\r\n\r\nconst assignModal = ref(false)\r\n\r\nconst closeModal = () => {\r\n    assignModal.value = false;\r\n};\r\nconst response = ref({\r\n    'comment': '',\r\n    'leave_pid': '',\r\n    'status': '',\r\n});\r\n\r\nconst respond = (pid) => {\r\n    response.value.leave_pid = pid\r\n    assignModal.value = true\r\n}\r\n\r\nconst respondToRequest = () => {\r\n    errors.value = []\r\n    store.dispatch('postMethod', { url: '/hr-respond-to-request', param: response.value }).then((data) => {\r\n        if (data?.status == 422) {\r\n            errors.value = data.data\r\n        } else if (data?.status == 201) {\r\n            loadLeaves()\r\n            let form = document.querySelector('#rForm')\r\n            form.reset()\r\n        }\r\n    })\r\n}\r\n\r\nconst leaves = ref({});\r\n \r\nloadLeaves()\r\n\r\nfunction loadLeaves(url = '/leave-request') {\r\n    store.dispatch('getMethod', { url: url}).then((data) => {\r\n        if (data?.status == 200) {\r\n            leaves.value = data.data;\r\n        }\r\n    }).catch(e => {\r\n        console.log(e);\r\n    })\r\n}\r\n\r\nfunction nextPage(link) {\r\n    if (!link.url || link.active) {\r\n        return;\r\n    }\r\n    loadLeaves(link.url)\r\n}\r\n\r\n\r\n\r\n\r\n</script>\r\n\r\n<style scoped></style>","import script from \"./LeaveRequest.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./LeaveRequest.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["__exports__","approvalLeve","ref","value","store","state","approvalLevel","errors","assignModal","closeModal","response","respond","pid","leave_pid","respondToRequest","dispatch","url","param","then","data","status","loadLeaves","form","document","querySelector","reset","leaves","catch","e","console","log","nextPage","link","active"],"sourceRoot":""}