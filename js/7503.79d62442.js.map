{"version":3,"file":"js/7503.79d62442.js","mappings":"+fAGA,MAAMA,EAAc,EAEpB,O,+rECoIA,MAAMC,GAASC,EAAAA,EAAAA,IAAI,CAAC,GACdC,GAAgBD,EAAAA,EAAAA,IAAI,CAAC,GACrBE,GAAcF,EAAAA,EAAAA,KAAI,GAElBG,EAAaA,KACfD,EAAYE,OAAQ,EACpBC,IAAW,EAETC,EAAeA,KACjBJ,EAAYE,OAAQ,CAAI,EAGtBG,GAAWP,EAAAA,EAAAA,IAAI,CACjBQ,MAAQ,GACRC,KAAO,GACPC,SAAW,GACXC,MAAQ,GACRC,WAAa,GACbC,OAAS,IAGPR,GAAYA,KACdE,EAASH,MAAQ,CACbI,MAAO,GACPC,KAAM,GACNC,SAAU,GACVC,MAAO,GACPC,WAAY,GACZC,OAAQ,EACX,EAGCC,GAAgBC,IAClBR,EAASH,MAAQ,CACbI,MAAOO,EAAIP,MACXC,KAAMM,EAAIN,KACVO,IAAKD,EAAIC,IACTJ,WAAYG,EAAIH,WAChBD,MAAOI,EAAIJ,MACXD,SAAUK,EAAIL,SACdG,OAAQE,EAAIF,QAEhBX,EAAYE,OAAQ,CAAI,EAItBa,GAAkBD,IACpBE,EAAAA,EAAMC,SAAS,eAAgB,CAAEC,IAAK,uBAAyBJ,IAAOK,MAAMC,IACpD,KAAhBA,GAAMT,SACNK,EAAAA,EAAMK,OAAO,SAAU,CAAEC,QAAS,uBAAwBC,KAAM,cAChEC,KACJ,GACF,EAGAC,GAAuBX,IACzBE,EAAAA,EAAMC,SAAS,YAAa,CAAEC,IAAK,yBAA2BJ,IAAOK,MAAMC,IACnD,KAAhBA,GAAMT,SACNK,EAAAA,EAAMK,OAAO,SAAU,CAAEC,QAAS,uBAAwBC,KAAM,cAChEC,KACJ,GACF,EAKN,SAASE,KACL7B,EAAOK,MAAQ,GACfc,EAAAA,EAAMC,SAAS,aAAc,CAAEC,IAAK,qBAAsBS,MAAOtB,EAASH,QAASiB,MAAMC,IACjE,KAAhBA,GAAMT,OACNd,EAAOK,MAAQkB,EAAKA,KACG,KAAhBA,GAAMT,SACbR,KACAqB,KACAxB,EAAYE,OAAQ,EACxB,IACD0B,OAAMC,IACLC,QAAQC,IAAIF,EAAE,GAEtB,CAEA,SAASL,KACLR,EAAAA,EAAMC,SAAS,YAAa,CAAEC,IAAK,wBAAyBC,MAAMC,IAE1DrB,EAAcG,MADE,KAAhBkB,GAAMT,OACgBS,EAAKA,KAEL,CAAC,CAC3B,IACDQ,OAAMC,IACLC,QAAQC,IAAIF,EAAE,GAEtB,CAXAL,KAaA,MAAMQ,IAAQlC,EAAAA,EAAAA,IAAI,IAClB,SAASmC,KACLjB,EAAAA,EAAMC,SAAS,eAAgB,SAASE,MAAK,EAAGC,WAC5CY,GAAM9B,MAAQkB,CAAI,IACnBQ,OAAMC,IACLC,QAAQC,IAAIF,EAAE,GAEtB,CACAI,KAEA,MAAMC,IAAcpC,EAAAA,EAAAA,IAAI,IACxB,SAASqC,KACLnB,EAAAA,EAAMC,SAAS,eAAgB,eAAeE,MAAK,EAAGC,WAClDc,GAAYhC,MAAQkB,CAAI,IACzBQ,OAAMC,IACLC,QAAQC,IAAIF,EAAE,GAEtB,CAGA,SAASO,GAASC,GAETA,EAAKnB,MAAOmB,EAAKC,QAGtBd,GAAkBa,EAAKnB,IAC3B,C,OARAiB,K,gkHCrPA,MAAMvC,GAAc,GAEpB,S","sources":["webpack://Technovati/./src/components/PaginationLinks.vue","webpack://Technovati/./src/views/schedule/AnouncementView.vue","webpack://Technovati/./src/views/schedule/AnouncementView.vue?bd8e"],"sourcesContent":["import script from \"./PaginationLinks.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./PaginationLinks.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n    <div>\r\n        <div class=\"container mt-2\">\r\n            <div class=\"card\">\r\n                <div class=\"card-header\">\r\n                    <h3>Announcements</h3> \r\n                    <button class=\"btn btn-sm btn-primary\" @click=\"anounceModal\">Add\r\n                        New</button> </div>\r\n                <div class=\"card-body\">\r\n\r\n                    <div class=\"table-responsive\">\r\n                        <input type=\"text\" class=\"form-control form-control-sm\" placeholder=\"Search\">\r\n                        <table class=\"table-hover table-stripped table-bordered table\" width=\"100%\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th width=\"5%\">SN</th>\r\n                                    <th width=\"20%\">Title</th>\r\n                                    <th width=\"45%\">\r\n                                        Body</th>\r\n                                    <th width=\"15%\">Category</th>\r\n                                    <th width=\"15%\">Date</th>\r\n                                    <th width=\"5%\"> <i class=\"bi bi-gear-fill\"></i> </th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr v-for=\"(data, loop) in announcements.data\" :key=\"loop\">\r\n                                    <td>{{ loop + 1 }}</td>\r\n                                    <td class=\"line-break\">{{ data.title }}</td>\r\n                                    <td class=\"line-break \" style=\"width: 10% !important;\">{{ data.body }}</td>\r\n                                    <td class=\"\">{{ data.announce_category }}</td>\r\n                                    <td class=\"\">{{ data.created_at }}</td>\r\n                                    <td>\r\n                                        <div class=\"dropdown\" v-if=\"data?.status == 0\">\r\n                                            <button type=\"button\" class=\"btn btn-primary btn-sm dropdown-toggle\"\r\n                                                data-bs-toggle=\"dropdown\">\r\n                                                <i class=\"bi bi-tools\"></i>\r\n                                            </button>\r\n                                            <ul class=\"dropdown-menu\">\r\n                                                <li><a class=\"dropdown-item pointer bg-success\"\r\n                                                        @click=\"publishAnnouncement(data.pid)\">Publish</a> </li>\r\n                                                <li><a class=\"dropdown-item pointer bg-warning\"\r\n                                                        @click=\"editAnnounce(data)\">Edit</a> </li>\r\n                                                <li><a class=\"dropdown-item pointer bg-danger\"\r\n                                                        @click=\"deleteAnnounce(data.pid)\">Delete</a> </li>\r\n                                            </ul>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                        <div class=\"flex justify-center mt-4\">\r\n                            <nav class=\"relative justify-center rounded-md shadow pagination\">\r\n                                <pagination-links v-for=\"(link, i) of announcements.links\" :link=\"link\" :key=\"i\"\r\n                                    @next=\"nextPage(link)\"></pagination-links>\r\n                            </nav>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <o-modal :isOpen=\"toggleModal\" modal-class=\"modal-md\" title=\"Make Announcement\" @submit=\"makeAnnouncement\"\r\n            @modal-close=\"closeModal\">\r\n            <template #content>\r\n                <form id=\"anForm\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-12\">\r\n                            <label class=\"form-label\">Title</label>\r\n                            <input class=\"form-control form-control-sm\" placeholder=\"meeting by 2pm\"\r\n                                v-model=\"announce.title\">\r\n                            <p class=\"text-danger \" v-if=\"errors?.title\">{{ errors?.title[0] }} </p>\r\n                        </div>\r\n                        <div class=\"col-md-12\">\r\n                            <div class=\"form-group\">\r\n                                <label class=\"form-label\">Body</label>\r\n                                <textarea type=\"text\" v-model=\"announce.body\" class=\"form-control\"\r\n                                    placeholder=\"e.g attend or get queried\"></textarea>\r\n                                <p class=\"text-danger \" v-if=\"errors?.body\">{{ errors?.body[0] }} </p>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"form-group\">\r\n                            <label class=\"form-label\">Category</label>\r\n                            <select v-model=\"announce.category\" class=\"form-control form-control-sm\">\r\n                                <option value=\"\" selected>Make Selection</option>\r\n                                <option value=\"1\">General</option>\r\n                                <option value=\"2\">Department</option>\r\n                                <option value=\"3\">Staff</option>\r\n                            </select>\r\n                            <p class=\"text-danger \" v-if=\"errors?.category\">{{ errors?.category[0] }}</p>\r\n                        </div>\r\n\r\n                        <div class=\"col-md-12\">\r\n                            <label class=\"form-label\">Publish ?</label>\r\n                            <div class=\"form-group\">\r\n                                <input type=\"radio\" v-model=\"announce.status\" value=\"1\"> yes\r\n                                <input type=\"radio\" v-model=\"announce.status\" value=\"0\"> No\r\n                            </div>\r\n                            <p class=\"text-danger \" v-if=\"errors?.status\">{{ errors?.status[0] }} </p>\r\n                        </div>\r\n                        <div class=\"col-md-12\" v-if=\"announce.category == 3\">\r\n                            <div class=\"form-group\">\r\n                                <label class=\"form-label\">Staff</label>\r\n                                <div>\r\n                                    <Multiselect v-model=\"announce.staff\" :options=\"users\" :multiple=\"true\"\r\n                                        :close-on-select=\"true\" placeholder=\"Pick staff\" label=\"text\" track-by=\"id\" />\r\n                                </div>\r\n                                <p class=\"text-danger \" v-if=\"errors?.staff\">{{ errors?.staff[0] }}</p>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"col-md-12\" v-if=\"announce.category == 2\">\r\n                            <div class=\"form-group\">\r\n                                <label class=\"form-label\">Departments</label>\r\n                                <div>\r\n                                    <Multiselect v-model=\"announce.department\" :options=\"departments\" :multiple=\"true\"\r\n                                        :close-on-select=\"true\" placeholder=\"Pick Department\" label=\"text\"\r\n                                        track-by=\"id\" />\r\n                                </div>\r\n                                <p class=\"text-danger \" v-if=\"errors?.department\">{{ errors?.department[0] }}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </form>\r\n            </template>\r\n\r\n        </o-modal>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport store from \"@/store\";\r\nimport { ref } from \"vue\";\r\nimport PaginationLinks from \"@/components/PaginationLinks.vue\";\r\nimport OModal from \"@/components/OModal.vue\";\r\nimport { Multiselect } from 'vue-multiselect';\r\nconst errors = ref({});\r\nconst announcements = ref({});\r\nconst toggleModal = ref(false);\r\n// const md = 'modal-md';\r\nconst closeModal = () => {\r\n    toggleModal.value = false;\r\n    resetAttr()\r\n};\r\nconst anounceModal = () => {\r\n    toggleModal.value = true;\r\n};\r\n\r\nconst announce = ref({\r\n    title : '',\r\n    body : '',\r\n    category : '',\r\n    staff : '',\r\n    department : '',\r\n    status : 0\r\n});\r\n\r\nconst resetAttr = () => {\r\n    announce.value = {\r\n        title: '',\r\n        body: '',\r\n        category: '',\r\n        staff: '',\r\n        department: '',\r\n        status: 0\r\n    }\r\n}\r\n\r\nconst editAnnounce = (ann) => {\r\n    announce.value = {\r\n        title: ann.title,\r\n        body: ann.body,\r\n        pid: ann.pid,\r\n        department: ann.department,\r\n        staff: ann.staff,\r\n        category: ann.category ,\r\n        status: ann.status ,\r\n    }\r\n    toggleModal.value = true;\r\n}\r\n\r\n\r\nconst deleteAnnounce = (pid) => {\r\n    store.dispatch('deleteMethod', { url: '/delete-memo-record/' + pid }).then((data) => {\r\n        if (data?.status == 200) {\r\n            store.commit('notify', { message: 'Reloading Records...', type: 'secondary' })\r\n            loadAnnouncements()\r\n        }\r\n    })\r\n}\r\n\r\nconst publishAnnouncement = (pid) => {\r\n    store.dispatch('putMethod', { url: '/publish-announcement/' + pid }).then((data) => {\r\n        if (data?.status == 201) {\r\n            store.commit('notify', { message: 'Reloading Records...', type: 'secondary' })\r\n            loadAnnouncements()\r\n        }\r\n    })\r\n}\r\n\r\n\r\n\r\nfunction makeAnnouncement() {\r\n    errors.value = []\r\n    store.dispatch('postMethod', { url: '/make-announcement', param: announce.value }).then((data) => {\r\n        if (data?.status == 422) {\r\n            errors.value = data.data\r\n        } else if (data?.status == 201) {\r\n            resetAttr()\r\n            loadAnnouncements()\r\n            toggleModal.value = false;\r\n        }\r\n    }).catch(e => {\r\n        console.log(e);\r\n    })\r\n}\r\nloadAnnouncements()\r\nfunction loadAnnouncements() {\r\n    store.dispatch('getMethod', { url: '/load-announcements' }).then((data) => {\r\n        if (data?.status == 200) {\r\n            announcements.value = data.data;\r\n        }else{\r\n            announcements.value = {}\r\n        }\r\n    }).catch(e => {\r\n        console.log(e);\r\n    })\r\n}\r\n\r\nconst users = ref([]);\r\nfunction dropdownUser() {\r\n    store.dispatch('loadDropdown', 'users').then(({ data }) => {\r\n        users.value = data;\r\n    }).catch(e => {\r\n        console.log(e);\r\n    })\r\n}\r\ndropdownUser()\r\n\r\nconst departments = ref([]);\r\nfunction dropdownDepts() {\r\n    store.dispatch('loadDropdown', 'departments').then(({ data }) => {\r\n        departments.value = data;\r\n    }).catch(e => {\r\n        console.log(e);\r\n    })\r\n}\r\ndropdownDepts()\r\n \r\nfunction nextPage(link) {\r\n  \r\n    if (!link.url || link.active) {\r\n        return;\r\n    }\r\n    loadAnnouncements(link.url)\r\n}\r\n\r\n\r\n</script>\r\n\r\n<style scoped>\r\n\r\n\r\n</style>","import script from \"./AnouncementView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./AnouncementView.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["__exports__","errors","ref","announcements","toggleModal","closeModal","value","resetAttr","anounceModal","announce","title","body","category","staff","department","status","editAnnounce","ann","pid","deleteAnnounce","store","dispatch","url","then","data","commit","message","type","loadAnnouncements","publishAnnouncement","makeAnnouncement","param","catch","e","console","log","users","dropdownUser","departments","dropdownDepts","nextPage","link","active"],"sourceRoot":""}