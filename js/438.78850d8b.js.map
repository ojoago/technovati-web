{"version":3,"file":"js/438.78850d8b.js","mappings":"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","sources":["webpack://Technovati/./src/composables/formatError.js","webpack://Technovati/./src/components/PaginationLinks.vue","webpack://Technovati/./src/views/travel/TravelRequestView.vue","webpack://Technovati/./src/views/travel/TravelRequestView.vue?f087"],"sourcesContent":["\r\nexport function formatError() {\r\n    function transformValidationErrors(response , handleType = 'axios'){\r\n        const errors = []\r\n        if(handleType == 'axios'){\r\n            if(response){\r\n                for (let key in response) {\r\n                    if(key.indexOf('.') !== -1){\r\n                        let k = trimKey(key);\r\n                        errors[k] = response[key][0]\r\n                    }else{\r\n                        errors[key] = response[key][0]\r\n                    }\r\n                    errors[key] = response[key][0]\r\n                }\r\n            }\r\n        }\r\n        return errors\r\n    }\r\n    \r\n    function trimKey(key){\r\n        const parts = key.split('.').filter(part => (part));\r\n        const part = key.split('.').filter(part => !isNaN(part));\r\n       \r\n        // const numericValues = parts.map(Number);\r\n        return parts[2]+part.map(Number);\r\n\r\n// console.log(numericValues);\r\n    }\r\n\r\n    return {\r\n        transformValidationErrors\r\n    }\r\n}","import script from \"./PaginationLinks.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./PaginationLinks.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n    <div>\r\n        <div class=\"container my-2\">\r\n\r\n            <div class=\"card\">\r\n                <div class=\"card-body\">\r\n                    \r\n                    <button class=\"btn btn-sm btn-primary m-2\" @click=\"openModal\">Request</button>\r\n                    <div class=\"table-responsive\">\r\n                        <table class=\"table-hover table-stripped table-bordered table\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>SN</th>\r\n                                    <th>title</th>\r\n                                    <th>status</th>\r\n                                    <th>destination</th>\r\n                                    <th>from</th>\r\n                                    <th>to</th>\r\n                                    <th>crew</th>\r\n                                    <th>itinerary</th>\r\n                                    <th>mode</th>\r\n                                    <th> <i class=\"bi bi-gear-fill\"></i> </th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr v-for=\"(data, loop) in requests?.data\" :key=\"loop\">\r\n                                    <td>{{ loop + 1 }}</td>\r\n                                    <td>{{ data.title }}</td>\r\n                                    <td>{{ data.request_status }}</td>\r\n                                    <td>{{ data.destination }}</td>\r\n                                    <td>{{ data.start }}</td>\r\n                                    <td>{{ data.to }}</td>\r\n                                    <td>\r\n                                        <span v-for=\"em in data.crew\" :key=\"em.pid\" class=\"badge bg-dark p-1 m-1\">\r\n                                            {{ em.text }}\r\n                                        </span>\r\n                                    </td>\r\n                                    <td>{{ data.itinerary }}</td>\r\n                                    <td>{{ data.mode }}</td>\r\n                                    <td>\r\n                                        <div class=\"dropdown\">\r\n                                            <button type=\"button\" class=\"btn btn-primary btn-sm dropdown-toggle\"\r\n                                                data-bs-toggle=\"dropdown\">\r\n                                                <i class=\"bi bi-tools\"></i>\r\n                                            </button>\r\n                                            <ul class=\"dropdown-menu\">\r\n                                                <li><a class=\"dropdown-item pointer bg-info\"\r\n                                                        @click=\"requestDetail(data)\">Details</a> </li>\r\n                                                <!-- <li ><a class=\"dropdown-item pointer bg-success\" v-if=\"data?.status == 0\" @click=\"approveRequest(data.pid)\">Approve</a> </li>\r\n                                            <li ><a class=\"dropdown-item pointer bg-secondary\" v-if=\"data?.status == 0\" @click=\"rejectRequest(data.pid)\">Reject</a> </li> -->\r\n                                                <li><a class=\"dropdown-item pointer bg-warning\"\r\n                                                        v-if=\"data?.status == 0 && data?.user_pid == creator\"\r\n                                                        @click=\"editRequest(data)\">Edit</a> </li>\r\n                                                <li><a class=\"dropdown-item pointer bg-primary\"\r\n                                                        v-if=\"data?.status != 3 && data?.status != 4  && data?.user_pid == creator\"\r\n                                                        @click=\"addBudget(data.pid)\">Add Budget</a> </li>\r\n                                                <li><a class=\"dropdown-item pointer bg-info\"\r\n                                                        v-if=\"(data?.status == 3 || data?.status == 1) && data?.status != 4 && data?.user_pid == creator\"\r\n                                                        @click=\"addExpense(data.pid)\">Add Expense</a> </li>\r\n                                                <li><a class=\"dropdown-item pointer bg-danger\"\r\n                                                        v-if=\"data?.status == 0  && data?.user_pid == creator\"\r\n                                                        @click=\"cancelTrip(data.pid)\">Cancel</a> </li>\r\n                                            </ul>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                        <div class=\"flex justify-center mt-4\">\r\n                            <nav class=\"relative justify-center rounded-md shadow pagination\">\r\n                                <pagination-links v-for=\"(link, i) of requests.links\" :link=\"link\" :key=\"i\"\r\n                                    @next=\"nextPage(link)\"></pagination-links>\r\n                            </nav>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n\r\n        <o-modal :isOpen=\"toggleModal\" modal-class=\"modal-lg\" title=\"Travel Request\" @submit=\"makeRequest\"\r\n            @modal-close=\"closeModal\">\r\n            <template #content>\r\n                <form id=\"requestForm\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-6\">\r\n                            <div class=\"form-group\">\r\n                                <label class=\"form-label\">Tittle <span class=\"text-danger\">*</span></label>\r\n                                <input type=\"text\" v-model=\"travel.title\" class=\"form-control form-control-sm\"\r\n                                    placeholder=\"e.g work shop\">\r\n                                <p class=\"text-danger \" v-if=\"errors?.title\">{{ errors?.title }}</p>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md-6\">\r\n                            <div class=\"form-group\">\r\n                                <label class=\"form-label\">Destination <span class=\"text-danger\">*</span></label>\r\n                                <input type=\"text\" v-model=\"travel.destination\" class=\"form-control form-control-sm\">\r\n                                <p class=\"text-danger \" v-if=\"errors?.destination\">{{ errors?.destination }}\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md-6\">\r\n                            <div class=\"form-group\">\r\n                                <label class=\"form-label\">Begin Date <span class=\"text-danger\">*</span></label>\r\n                                <input type=\"date\" v-model=\"travel.begin\" class=\"form-control form-control-sm\">\r\n                                <p class=\"text-danger \" v-if=\"errors?.begin\">{{ errors?.begin }}</p>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"col-md-6\">\r\n                            <div class=\"form-group\">\r\n                                <label class=\"form-label\">End Date<span class=\"text-danger\">*</span></label>\r\n                                <input type=\"date\" v-model=\"travel.end\" class=\"form-control form-control-sm\">\r\n                                <p class=\"text-danger \" v-if=\"errors?.end\">{{ errors?.end }}</p>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"col-md-12\">\r\n                            <div class=\"form-group\">\r\n                                <label class=\"form-label\">Purpose <span class=\"text-danger\">*</span></label>\r\n                                <textarea v-model=\"travel.itinerary\" class=\"form-control form-control-sm\"></textarea>\r\n                                <p class=\"text-danger \" v-if=\"errors?.itinerary\">{{ errors?.itinerary }}</p>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"col-md-6\">\r\n                            <div class=\"form-group\">\r\n                                <label class=\"form-label\">Crew Members </label>\r\n                                <div>\r\n                                    <Multiselect v-model=\"travel.crew\" :options=\"userDrop\" :multiple=\"true\"\r\n                                        :close-on-select=\"true\" placeholder=\"Pick Crew\" label=\"text\" track-by=\"id\" />\r\n                                </div>\r\n                                <p class=\"text-danger \" v-if=\"errors?.crew\">{{ errors?.crew }}</p>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        <div class=\"col-md-6\">\r\n                            <div class=\"form-group\">\r\n                                <label class=\"form-label\">Mode of Transpotation<span\r\n                                        class=\"text-danger\">*</span></label>\r\n                                <input type=\"text\" v-model=\"travel.mode\" class=\"form-control\">\r\n                                <p class=\"text-danger \" v-if=\"errors?.mode\">{{ errors?.mode }}</p>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        <div class=\"col-md-12\">\r\n                            <label>Budgets</label>\r\n                            <template v-for=\"(item, loop) in travel.budget\" :key=\"loop\">\r\n\r\n                                <fieldset class=\"border rounded-3 p-2 m-1\">\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-md-12\">\r\n                                            <div class=\"form-group\">\r\n                                                <label class=\"form-label\">Budget Item <span\r\n                                                        class=\"text-danger\">*</span></label>\r\n                                                <input type=\"text\" v-model=\"item.budget\"\r\n                                                    class=\"form-control form-control-sm\" placeholder=\"e.g feeding\">\r\n                                                    <p class=\"text-danger \" v-if=\"errors[`budget${loop}`]\" >{{ errors[`budget${loop}`] }}</p>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-md-12\">\r\n                                            <div class=\"form-group\">\r\n                                                <label class=\"form-label\">Amount <span\r\n                                                        class=\"text-danger\">*</span></label>\r\n                                                <div class=\"input-group\">\r\n                                                    <input type=\"number\" step=\"0.1\" v-model=\"item.amount\"\r\n                                                        class=\"form-control form-control-sm\">\r\n                                                    <button type=\"button\" class=\"btn btn-danger btn-sm\"\r\n                                                        @click=\"removeBudgetItem(loop)\"> <i\r\n                                                            class=\"bi bi-patch-minus\"></i>\r\n                                                    </button>\r\n                                                </div>\r\n                                                <p class=\"text-danger \" v-if=\"errors[`amount${loop}`]\" >{{ errors[`amount${loop}`] }}</p>\r\n\r\n                                                <!-- <p class=\"text-danger \" v-if=\"errors?.destination\">{{ errors?.destination[0] }}   </p> -->\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </fieldset>\r\n                            </template>\r\n                            <div class=\"float-end p-2\">\r\n                                <button type=\"button\" class=\"btn btn-success btn-sm mt-2\" @click=\"addBudgetItem\"> <i\r\n                                        class=\"bi bi-plus\"></i> </button>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n\r\n                    </div>\r\n                </form>\r\n            </template>\r\n\r\n        </o-modal>\r\n\r\n        <o-modal :isOpen=\"budgetModal\" modal-class=\"modal-sm\" title=\"Add Request Budget\" @submit=\"addRequestBudget\"\r\n            @modal-close=\"closeModal\">\r\n            <template #content>\r\n                <form id=\"requestForm\">\r\n                    <template v-for=\"(item, loop) in budget.items\" :key=\"loop\">\r\n\r\n                        <fieldset class=\"border rounded-3 p-2 m-1\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-12\">\r\n                                    <div class=\"form-group\">\r\n                                        <label class=\"form-label\">Budget Item <span class=\"text-danger\">*</span></label>\r\n                                        <input type=\"text\" v-model=\"item.budget\" class=\"form-control form-control-sm\"\r\n                                            placeholder=\"e.g feeding\">\r\n                                        <!-- <p class=\"text-danger \" v-if=\"errors?.title\">{{ errors?.title[0] }}</p> -->\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-md-12\">\r\n                                    <div class=\"form-group\">\r\n                                        <label class=\"form-label\">Amount <span class=\"text-danger\">*</span></label>\r\n                                        <div class=\"input-group\">\r\n                                            <input type=\"number\" step=\"0.1\" v-model=\"item.amount\"\r\n                                                class=\"form-control form-control-sm\">\r\n                                            <button type=\"button\" class=\"btn btn-danger btn-sm\"\r\n                                                @click=\"removeQualification(loop)\"> <i class=\"bi bi-patch-minus\"></i>\r\n                                            </button>\r\n                                        </div>\r\n                                        <!-- <p class=\"text-danger \" v-if=\"errors?.destination\">{{ errors?.destination[0] }}   </p> -->\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </fieldset>\r\n                    </template>\r\n                    <div class=\"float-end p-2\">\r\n                        <button type=\"button\" class=\"btn btn-success btn-sm mt-2\" @click=\"addQualification\"> <i\r\n                                class=\"bi bi-plus\"></i> </button>\r\n                    </div>\r\n\r\n                </form>\r\n            </template>\r\n\r\n        </o-modal>\r\n\r\n        <o-modal :isOpen=\"expenseModal\" modal-class=\"modal-sm\" title=\"Add Request Expense\" @submit=\"addRequestExpense\"\r\n            @modal-close=\"closeModal\">\r\n            <template #content>\r\n                <form id=\"expenseForm\">\r\n                    <!-- <template v-for=\"(item, loop) in budget.items\" :key=\"loop\"> -->\r\n\r\n                    <!-- <fieldset class=\"border rounded-3 p-2 m-1\"> -->\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-12\">\r\n                            <div class=\"form-group\">\r\n                                <label class=\"form-label\">Expense <span class=\"text-danger\">*</span></label>\r\n                                <input type=\"text\" v-model=\"expense.expense\" class=\"form-control form-control-sm\"\r\n                                    placeholder=\"e.g feeding\">\r\n                                <p class=\"text-danger \" v-if=\"ex_errors?.expense\">{{ ex_errors?.expense[0] }}</p>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md-12\">\r\n                            <div class=\"form-group\">\r\n                                <label class=\"form-label\">Amount <span class=\"text-danger\">*</span></label>\r\n                                <!-- <div class=\"input-group\"> -->\r\n                                <input type=\"number\" step=\"0.1\" v-model=\"expense.amount\"\r\n                                    class=\"form-control form-control-sm\">\r\n                                <!-- <button type=\"button\" class=\"btn btn-danger btn-sm\" @click=\"removeExpenseItem(loop)\"> <i class=\"bi bi-patch-minus\"></i> </button> -->\r\n                                <!-- </div> -->\r\n                                <p class=\"text-danger \" v-if=\"ex_errors?.amount\">{{ ex_errors?.amount[0] }} </p>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md-12\">\r\n                            <div class=\"form-group\">\r\n                                <label class=\"form-label\">Receipt <span class=\"text-danger\">*</span></label>\r\n                                <input type=\"file\" class=\"form-control form-control-sm\" id=\"image\"\r\n                                    @change=\"handleImageChange\" accept=\"image/*\" required />\r\n                                <p class=\"text-danger \" v-if=\"ex_errors?.image\">{{ ex_errors?.image[0] }}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <!-- </fieldset> -->\r\n                    <!-- </template> -->\r\n\r\n                    <!-- <div class=\"float-end p-2\">\r\n                                <button type=\"button\" class=\"btn btn-success btn-sm mt-2\" @click=\"addExpenseItem\"> <i class=\"bi bi-plus\"></i> </button>\r\n                            </div> -->\r\n\r\n                </form>\r\n            </template>\r\n\r\n        </o-modal>\r\n        <!-- <BudgetComponent :budget-modal=\"budgetModal\" :request-pid=\"budget.travel_pid\"  @modal-close=\"budgetModal=false\"/> -->\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from \"vue\";\r\nimport OModal from \"@/components/OModal.vue\";\r\nimport store from \"@/store\";\r\nimport { Multiselect } from 'vue-multiselect';\r\nimport PaginationLinks from \"@/components/PaginationLinks.vue\";\r\nimport { useRouter } from 'vue-router';\r\n// import BudgetComponent from '@/components/travel/BudgetComponent.vue'\r\nimport { useHelper } from \"@/composables/helper\";\r\nimport { formatError } from \"@/composables/formatError\";\r\nconst { handleFile } = useHelper()\r\nconst {transformValidationErrors} = formatError()\r\nconst creator = ref(null);\r\ncreator.value = store?.state?.user?.data?.pid;\r\nconst router = useRouter()\r\nlet query = {}\r\nrouter.push({ query: query })\r\n     \r\n     \r\nconst toggleModal = ref(false)\r\nconst openModal = () => {\r\n    toggleModal.value = true;\r\n};\r\n\r\nconst closeModal = () => {\r\n    toggleModal.value = false;\r\n    budgetModal.value = false;\r\n    expenseModal.value = false;\r\n    resetAttr()\r\n    resetBud()\r\n    resetExp()\r\n};\r\n\r\nconst travel = ref({\r\n    title : '' ,\r\n    dept_pid: '' ,\r\n    destination : '' ,\r\n    begin : '' ,\r\n    end : '' ,\r\n    crew: '' ,\r\n    itinerary : '' ,\r\n    mode : '' ,\r\n    budget:[\r\n        {\r\n        budget: '',\r\n        amount: '',\r\n    }\r\n    ],\r\n})\r\n\r\nconst resetAttr = ()=>{\r\n    travel.value = {\r\n        title: '',\r\n        dept_pid: '',\r\n        destination: '',\r\n        begin: '',\r\n        end: '',\r\n        crew: '',\r\n        itinerary: '',\r\n        mode: '',\r\n         budget:[\r\n        {\r\n            budget: '',\r\n            amount: '',\r\n        }\r\n        ],\r\n    }\r\n}\r\n\r\nfunction editRequest(data){\r\n    travel.value = {\r\n        title: data.title,\r\n        dept_pid: data.dept_pid,\r\n        destination: data.destination,\r\n        begin: data.begin,\r\n        end: data.end,\r\n        crew: data.crew,\r\n        itinerary: data.itinerary,\r\n        pid: data.pid,\r\n        mode: data.mode,\r\n        budget:data.budgets,\r\n    }\r\n    toggleModal.value = true;\r\n}\r\nconst errors = ref({})\r\n\r\nfunction makeRequest(){\r\n    errors.value = []\r\n    // travel.value.busdget = budget.value;\r\n    store.dispatch('postMethod', { url: '/travel-request', param: travel.value }).then((data) => {\r\n        if (data?.status == 422) {\r\n            errors.value = transformValidationErrors(data.data)\r\n            console.log(errors.value);\r\n            \r\n        } else if (data?.status == 201) {\r\n            closeModal()\r\n            loadRequest()\r\n        }\r\n    })\r\n}\r\n\r\nconst requests = ref({})\r\nfunction loadRequest(url = '/load-request' ) {\r\n    store.dispatch('getMethod', { url: url }).then((data) => {\r\n        if (data?.status == 200) {\r\n            requests.value = data.data\r\n        }else{\r\n            requests.value = {}\r\n        }\r\n    })\r\n}\r\nloadRequest()\r\n\r\nfunction requestDetail(request) {\r\n    localStorage.setItem('TVATI_TRV_RQS_DETAIL', JSON.stringify(request, null, 2))\r\n    router.push({ path: 'travel-request-detail', query: { request: request.pid } })\r\n}\r\n\r\n// request budget \r\nconst budget = ref({\r\n    travel_pid : '',\r\n    items : [{\r\n        budget: '',\r\n        amount: '',\r\n    }]\r\n});\r\n\r\nconst resetBud = ()=>{\r\n    budget.value = {\r\n        travel_pid: '',\r\n        items: [{\r\n            budget: '',\r\n            amount: '',\r\n        }]\r\n    }\r\n}\r\nconst budgetModal = ref(false)\r\nconst addBudget = (pid) =>{\r\n    budget.value.travel_pid = pid;\r\n    budgetModal.value = true ;\r\n}\r\n\r\nconst addBudgetItem = () => {\r\n    travel.value.budget.push({\r\n        budget: '',\r\n        amount: '',\r\n    })\r\n}\r\n\r\n\r\nconst removeBudgetItem = (i) => {\r\n    let len = travel.value.budget.length;\r\n    if (len === 1) {\r\n        store.commit('notify', { message: 'One Item is required to proceed ', type: 'warning' })\r\n        return;\r\n    }\r\n    travel.value.budget.splice(i, 1);\r\n}\r\n\r\n\r\n\r\nconst addQualification = () => {\r\n    budget.value.items.push({\r\n        budget: '',\r\n        amount: '',\r\n    })\r\n}\r\n\r\nconst removeQualification = (i) => {\r\n    let len = budget.value.items.length;\r\n    if (len === 1) {\r\n        store.commit('notify', { message: 'One Item is required to proceed ', type: 'warning' })\r\n        return;\r\n    }\r\n    budget.value.items.splice(i, 1);\r\n}\r\n\r\n\r\nfunction addRequestBudget(){\r\n     store.dispatch('postMethod', { url: '/add-travel-request-budget', param: budget.value }).then((data) => {\r\n        if (data?.status == 422) {\r\n            errors.value = data.data\r\n        } else if (data?.status == 201) {\r\n            closeModal()\r\n            loadRequest()\r\n        }\r\n    })\r\n}\r\n\r\n\r\n// travel expense \r\nconst expense = ref({\r\n    travel_pid : '',\r\n    expense : '' ,\r\n    amount : '' ,\r\n    image : ''\r\n    // items : [{\r\n    //     item: '',\r\n    //     amount: '',\r\n    // }]\r\n});\r\n\r\nconst resetExp = () =>{\r\n    expense.value = {\r\n        travel_pid: '',\r\n        expense: '',\r\n        amount: '',\r\n        image: ''\r\n    }\r\n}\r\n// const sm = 'modal-sm';\r\nconst expenseModal = ref(false)\r\nconst addExpense = (pid) =>{\r\n    expense.value.travel_pid = pid;\r\n    expenseModal.value = true ;\r\n}\r\n\r\n\r\nconst cancelTrip = (pid) => {\r\n    store.dispatch('putMethod', { url: '/cancel-travel-request/'+pid, prompt: 'are you sure you want to cancel this request?' }).then((data) => {\r\n         if (data?.status == 201) {\r\n            loadRequest()\r\n        }\r\n    })\r\n    \r\n}\r\n// const addExpenseItem = () => {\r\n//     budget.value.items.push({\r\n//         budget: '',\r\n//         amount: '',\r\n//     })\r\n// }\r\n// const removeExpenseItem = (i) => {\r\n//     let len = expense.value.items.length;\r\n//     if (len === 1) {\r\n//         store.commit('notify', { message: 'One Item is required to proceed ', type: 'warning' })\r\n//         return;\r\n//     }\r\n//     expense.value.items.splice(i, 1);\r\n// }\r\n\r\nconst handleImageChange = (event) => {\r\n    expense.value.image = handleFile(event)\r\n}\r\nconst ex_errors = ref([]);\r\nfunction addRequestExpense(){\r\n    ex_errors.value = []\r\n     store.dispatch('postMethod', { url: '/add-travel-request-expense', param: expense.value }).then((data) => {\r\n        if (data?.status == 422) {\r\n            ex_errors.value = data.data\r\n        } else if (data?.status == 201) {\r\n            resetExp()\r\n            loadRequest()\r\n        }\r\n    })\r\n}\r\n\r\nconst userDrop = ref([]);\r\nfunction dropdownUser() {\r\n    store.dispatch('loadDropdown', 'users').then(({ data }) => {\r\n        userDrop.value = data;\r\n    })\r\n}\r\ndropdownUser()\r\n\r\nfunction nextPage(link) {\r\n    if (!link.url || link.active) {\r\n        return;\r\n    }\r\n    loadRequest(link.url)\r\n}\r\n\r\n\r\n</script>\r\n\r\n<style scoped>\r\n    .dropdown{\r\n        position: relative;\r\n    }\r\n\r\n    .dropdown-menu{\r\n        position: absolute;\r\n    }\r\n</style>","import script from \"./TravelRequestView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./TravelRequestView.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./TravelRequestView.vue?vue&type=style&index=0&id=1e32f027&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-1e32f027\"]])\n\nexport default __exports__"],"names":["formatError","transformValidationErrors","response","handleType","errors","key","indexOf","k","trimKey","parts","split","filter","part","isNaN","map","Number","__exports__","handleFile","useHelper","creator","ref","value","store","state","user","data","pid","router","useRouter","query","push","toggleModal","openModal","closeModal","budgetModal","expenseModal","resetAttr","resetBud","resetExp","travel","title","dept_pid","destination","begin","end","crew","itinerary","mode","budget","amount","editRequest","budgets","makeRequest","dispatch","url","param","then","status","console","log","loadRequest","requests","requestDetail","request","localStorage","setItem","JSON","stringify","path","travel_pid","items","addBudget","addBudgetItem","removeBudgetItem","i","len","length","splice","commit","message","type","addQualification","removeQualification","addRequestBudget","expense","image","addExpense","cancelTrip","prompt","handleImageChange","event","ex_errors","addRequestExpense","userDrop","dropdownUser","nextPage","link","active"],"sourceRoot":""}