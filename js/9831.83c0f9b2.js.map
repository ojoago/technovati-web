{"version":3,"file":"js/9831.83c0f9b2.js","mappings":"imDAkGA,MAAMA,GAASC,EAAAA,EAAAA,IAAI,CAAC,GACdC,GAAQD,EAAAA,EAAAA,IAAI,CAAC,GACbE,GAAYF,EAAAA,EAAAA,IAAI,CAAC,GACjBG,GAAUH,EAAAA,EAAAA,IAAI,CAChBI,SAAU,GACVC,QAAS,GACTH,UAAWA,EACXD,MAAO,KAGLK,EAAgBC,IAClBL,EAAUM,MAAQD,EAAME,OAAOD,MAC/BE,EAASH,EAAME,OAAOD,MAAM,EAG1BG,EAAWC,IACb,IAAIC,EAAQV,EAAQK,MAAMP,MAAMa,WAAUC,GAAKA,EAAEC,KAAOJ,EAAKI,OAC9C,IAAXH,EACAV,EAAQK,MAAMP,MAAMgB,KAAK,CACrBD,IAAKJ,EAAKI,IACVE,SAAU,EACVC,IAAKP,GAAMM,SACXE,KAAMR,EAAKQ,OAGXjB,EAAQK,MAAMP,MAAMY,GAAOK,SAAWN,GAAMM,SAC5Cf,EAAQK,MAAMP,MAAMY,GAAOK,WAE3BG,EAAAA,EAAMC,OAAO,SAAU,CAAEC,QAAU,2BAA0BpB,EAAQK,MAAMP,MAAMY,GAAOK,WAAYM,KAAM,WAElH,EAEEC,EAAcb,IAChB,GAAGA,EAAKM,SAAWN,EAAKO,IAAM,CAC1B,IAAIN,EAAQV,EAAQK,MAAMP,MAAMa,WAAUC,GAAKA,EAAEC,KAAOJ,EAAKI,MAC7Db,EAAQK,MAAMP,MAAMY,GAAOK,SAAWN,EAAKO,IAC3CE,EAAAA,EAAMC,OAAO,SAAU,CAAEC,QAAU,2BAA0BX,EAAKO,MAAOK,KAAM,WACnF,GAIEE,EAAcC,IAChBxB,EAAQK,MAAMP,MAAM2B,OAAOD,EAAG,EAAE,EAIpC,SAASE,IACL9B,EAAOS,MAAQ,GACfa,EAAAA,EAAMS,SAAS,aAAc,CAAEC,IAAK,iBAAkBC,MAAO7B,EAAQK,QAASyB,MAAMC,IAChF,GAAoB,KAAhBA,GAAMC,OACNpC,EAAOS,MAAQ0B,EAAKA,UACjB,GAAoB,KAAhBA,GAAMC,OAAe,CAC5B,IAAIC,EAAOC,SAASC,cAAc,aAClCnC,EAAQK,MAAMP,MAAQ,GACtBmC,EAAKG,QACL7B,EAASR,EAAUM,MACvB,IAER,CACA,SAASE,EAASM,GACdK,EAAAA,EAAMS,SAAS,YAAa,CAAEC,IAAK,sBAAsBf,IAAOiB,MAAMC,IAC9C,KAAhBA,GAAMC,SACNlC,EAAMO,MAAQ0B,EAAKA,KACvB,GAER,CAEI/B,EAAQK,MAAMP,OACduC,IAGJ,MAAMC,GAAWzC,EAAAA,EAAAA,IAAI,IAErB,SAASwC,IACLnB,EAAAA,EAAMS,SAAS,eAAgB,SAASG,MAAK,EAAGC,WAC5CO,EAASjC,MAAQ0B,CAAI,GAE7B,CACA,MAAMQ,GAAS1C,EAAAA,EAAAA,IAAI,IAEnB,SAAS2C,KACLtB,EAAAA,EAAMS,SAAS,eAAgB,UAAUG,MAAK,EAAGC,WAC7CQ,EAAOlC,MAAQ0B,CAAI,GAE3B,C,OACAS,K,8sECpLA,MAAMC,EAAc,EAEpB,O","sources":["webpack://Technovati/./src/views/request/InventoryItemRequestView.vue","webpack://Technovati/./src/views/request/InventoryItemRequestView.vue?72c2"],"sourcesContent":["<template>\r\n    <div>\r\n        <div class=\"container mt-2\">\r\n            <div class=\"row\">\r\n                <div class=\"col-md-7\">\r\n                    <div class=\"card\">\r\n                        <div class=\"card-header\">Finished Products</div>\r\n                        <div class=\"card-body\">\r\n                            <select class=\"form-control\" @change=\"stetStorePid($event)\">\r\n                                <option disabled selected>Select Store</option>\r\n                                <option v-for=\"sec in stores\" :key=\"sec.id\" :value=\"sec.id\">{{ sec.text }}</option>\r\n                            </select>\r\n                            <input type=\"text\" class=\"mt-1 form-control form-control-sm\" placeholder=\"search Item\">\r\n                            <div class=\"table-responsive\">\r\n                                <table class=\"table-hover table-stripped table-bordered table\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>SN</th>\r\n                                            <th>Name</th>\r\n                                            <!-- <th>Model</th> -->\r\n                                            <th>Quantity</th>\r\n                                            <!-- <th>Description</th> -->\r\n                                            <th align=\"center\"> <i class=\"bi bi-gear-fill\"></i> </th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        <tr v-for=\"(item, loop) in items?.data\" :key=\"loop\">\r\n                                            <td>{{ loop + 1 }}</td>\r\n                                            <td>{{ item.name }}</td>\r\n                                            <!-- <td>{{ item.model }} </td> -->\r\n                                            <td>{{ item?.quantity  }} {{ item.unit }}</td>\r\n                                            <td>\r\n                                                <button v-if=\"item?.quantity > 0\" @click=\"addItem(item)\" type=\"button\"\r\n                                                    class=\"btn btn-primary btn-sm\">\r\n                                                    <i class=\"bi bi-plus\"></i>\r\n                                                </button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-md-5\">\r\n                    <div class=\"card\">\r\n                        <div class=\"card-body\">\r\n                            <fieldset class=\"border rounded-3 p-2 m-1\">\r\n                                <legend class=\"float-none w-auto px-2 h5\">Request Items</legend>\r\n                                <form id=\"itemForm\" v-if=\"request.items.length\">\r\n\r\n                                    <fieldset class=\"border rounded-3 p-2 m-1\">\r\n                                        <div class=\"col-md-12\" v-for=\"(item, loop) in request.items\" :key=\"loop\">\r\n                                            <label class=\"form-label\">{{ item.name }} </label>\r\n                                            <div class=\"input-group\">\r\n                                                <span class=\"bg-light p-1\">#{{ item.qnt }}</span>\r\n                                                <input type=\"number\" step=\"0.1\" @change=\"compareQnt(item)\" v-model=\"item.quantity\" class=\"form-control\" placeholder=\"e.g 15\">\r\n                                                <button type=\"button\" class=\"btn btn-danger btn-sm\" @click=\"removeitem(loop)\"> <i class=\"bi bi-patch-minus\"></i> </button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </fieldset>\r\n\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-md-12\">\r\n                                            <label class=\"form-label\">Comment</label>\r\n                                            <textarea type=\"text\" v-model=\"request.comment\"\r\n                                                class=\"form-control form-control-sm\" placeholder=\"e.g UIU\"></textarea>\r\n                                            <p class=\"text-danger \" v-if=\"errors?.comment\">{{ errors?.comment[0] }} </p>\r\n                                        </div>\r\n                                        <div class=\"col-md-12\">\r\n                                            <label class=\"form-label\">Receiver</label>\r\n                                            <Select2 v-model=\"request.receiver\" :options=\"userDrop\" :settings=\"{ width: '100%' }\" />\r\n                                            <p class=\"text-danger \" v-if=\"errors?.receiver\">{{ errors?.receiver[0] }} </p>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div class=\"float-end\">\r\n                                        <button type=\"button\" class=\"btn btn-success btn-sm mt-2\"\r\n                                            @click=\"requestMaterial\">Submit</button>\r\n                                    </div>\r\n                                </form>\r\n\r\n                            </fieldset>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport store from \"@/store\";\r\nimport { ref } from \"vue\";\r\nimport Select2 from 'vue3-select2-component';\r\n\r\nconst errors = ref({});\r\nconst items = ref({});\r\nconst store_pid = ref({})\r\nconst request = ref({\r\n    receiver: '',\r\n    comment: '',\r\n    store_pid: store_pid,\r\n    items: [],\r\n});\r\n\r\nconst stetStorePid = (event) => {\r\n    store_pid.value = event.target.value;\r\n    loadItem(event.target.value)\r\n}\r\n\r\nconst addItem = (item) => {\r\n    var index = request.value.items.findIndex(x => x.pid == item.pid)\r\n    if (index === -1) {\r\n        request.value.items.push({\r\n            pid: item.pid,\r\n            quantity: 1,\r\n            qnt: item?.quantity,\r\n            name: item.name,\r\n        })\r\n    } else {\r\n        if (request.value.items[index].quantity < item?.quantity) {\r\n            request.value.items[index].quantity++\r\n        } else {\r\n            store.commit('notify', { message: `quantity remaining is : ${request.value.items[index].quantity}`, type: 'warning' })\r\n        }\r\n    }\r\n}\r\nconst compareQnt = (item) => {\r\n    if(item.quantity > item.qnt ) {\r\n        var index = request.value.items.findIndex(x => x.pid == item.pid)\r\n        request.value.items[index].quantity = item.qnt\r\n        store.commit('notify', { message: `quantity remaining is : ${item.qnt}`, type: 'warning' })\r\n    } \r\n}\r\n\r\n\r\nconst removeitem = (i) => {\r\n    request.value.items.splice(i, 1);\r\n}\r\n\r\n\r\nfunction requestMaterial() {\r\n    errors.value = []\r\n    store.dispatch('postMethod', { url: '/request-items', param: request.value }).then((data) => {\r\n        if (data?.status == 422) {\r\n            errors.value = data.data\r\n        } else if (data?.status == 201) {\r\n            let form = document.querySelector('#itemForm');\r\n            request.value.items = [];\r\n            form.reset();\r\n            loadItem(store_pid.value)\r\n        }\r\n    })\r\n}\r\nfunction loadItem(pid) {\r\n    store.dispatch('getMethod', { url: '/load-cr-out-items/'+pid }).then((data) => {\r\n        if (data?.status == 200) {\r\n            items.value = data.data;\r\n        }\r\n    })\r\n}\r\n\r\nif (request.value.items) {\r\n    loadStateRes()\r\n}\r\n\r\nconst userDrop = ref([]);\r\n\r\nfunction loadStateRes() {\r\n    store.dispatch('loadDropdown', 'users').then(({ data }) => {\r\n        userDrop.value = data;\r\n    })\r\n}\r\nconst stores = ref([]);\r\n\r\nfunction loadStores() {\r\n    store.dispatch('loadDropdown', 'stores').then(({ data }) => {\r\n        stores.value = data;\r\n    })\r\n}\r\nloadStores()\r\n\r\n\r\n</script>\r\n\r\n<style scoped></style>","import script from \"./InventoryItemRequestView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./InventoryItemRequestView.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["errors","ref","items","store_pid","request","receiver","comment","stetStorePid","event","value","target","loadItem","addItem","item","index","findIndex","x","pid","push","quantity","qnt","name","store","commit","message","type","compareQnt","removeitem","i","splice","requestMaterial","dispatch","url","param","then","data","status","form","document","querySelector","reset","loadStateRes","userDrop","stores","loadStores","__exports__"],"sourceRoot":""}