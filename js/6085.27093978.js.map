{"version":3,"file":"js/6085.27093978.js","mappings":"+fAGA,MAAMA,EAAc,EAEpB,O,w6CCwFA,MAAMC,GAAYC,EAAAA,EAAAA,KAAI,GAChBC,EAAaA,KACfF,EAAUG,OAAQ,CAAK,EAGrBC,GAASH,EAAAA,EAAAA,IAAI,CAAC,GACdI,GAASJ,EAAAA,EAAAA,IAAI,CAAC,GAEdK,GAAYL,EAAAA,EAAAA,IAAI,CAClBM,SAAU,GACVC,KAAM,GACNC,YAAa,GACbC,YAAa,KAGXC,EAAYC,IACdN,EAAUH,MAAQ,CACdI,SAAUK,EAAIL,SACdE,YAAaG,EAAIH,YACjBD,KAAMI,EAAIJ,KACVE,YAAaE,EAAIC,aACjBC,IAAKF,EAAIE,KAEbd,EAAUG,OAAQ,CAAI,EAGpBY,EAAYA,KACdT,EAAUH,MAAQ,CACdI,SAAU,GACVE,YAAa,GACbD,KAAM,GACNE,YAAa,GAChB,EASL,SAASM,IACLZ,EAAOD,MAAQ,GACfc,EAAAA,EAAMC,SAAS,aAAc,CAAEC,IAAK,gBAAiBC,MAAOd,EAAUH,QAASkB,MAAMC,IAC7D,KAAhBA,GAAMC,OACNnB,EAAOD,MAAQmB,EAAKA,KACG,KAAhBA,GAAMC,SACbvB,EAAUG,OAAQ,EAClBY,IACAS,IACJ,GAER,CAEA,SAASA,EAASL,EAAK,gBACnBF,EAAAA,EAAMC,SAAS,YAAa,CAAEC,IAAKA,IAAOE,MAAMC,IACxB,KAAhBA,GAAMC,SACNlB,EAAOF,MAAQmB,EAAKA,KACxB,GAER,CAPAE,IAQA,MAAMC,GAAQxB,EAAAA,EAAAA,IAAI,CAAC,GACnB,SAASyB,IACLT,EAAAA,EAAMC,SAAS,eAAgB,SAASG,MAAK,EAAGC,WAC5CG,EAAMtB,MAAQmB,CAAI,GAE1B,CAGE,SAASK,EAASC,GACPA,EAAKT,MAAOS,EAAKC,QAGtBL,EAASI,EAAKT,IAClB,C,OAPJO,I,00EC7JA,MAAM3B,EAAc,EAEpB,O","sources":["webpack://Technovati/./src/components/PaginationLinks.vue","webpack://Technovati/./src/views/inventory/store/StoreView.vue","webpack://Technovati/./src/views/inventory/store/StoreView.vue?d31c"],"sourcesContent":["import script from \"./PaginationLinks.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./PaginationLinks.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n    <div>\r\n        <div class=\"container mt-2\">\r\n           \r\n            <div class=\"card\">\r\n                <div class=\"card-header\">\r\n                    <h3>Company Stores</h3>\r\n                    <button class=\"btn btn-primary btn-sm\" @click=\"openModal=true\">Add New</button>\r\n                </div>\r\n                <div class=\"card-body\">\r\n\r\n                    <div class=\"table-responsive\">\r\n                        <table class=\"table-hover table-stripped table-bordered table\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>SN</th>\r\n                                    <th>Name</th>\r\n                                    <th>Manager</th>\r\n                                    <th>location</th>\r\n                                    <th>Description</th>\r\n                                    <th><i class=\"bi bi-gear-fill\"></i></th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr v-for=\"(item, loop) in stores?.data\" :key=\"loop\">\r\n                                    <td>{{ loop + 1 }}</td>\r\n                                    <td>{{ item.name }}</td>\r\n                                    <td>{{ item?.manager?.username }}</td>\r\n                                    <td>{{ item.location }}</td>\r\n                                    <td>{{ item.description }}</td>\r\n                                    <td>\r\n                                        <div class=\"dropdown\">\r\n                                            <button type=\"button\" class=\"btn btn-primary btn-sm dropdown-toggle\" data-bs-toggle=\"dropdown\">\r\n                                                <i class=\"bi bi-tools\"></i>\r\n                                            </button>\r\n                                            <ul class=\"dropdown-menu\">\r\n                                                <li class=\"bg-warning\"><a class=\"dropdown-item pointer\" @click=\"editItem(item)\">Edit</a> </li>\r\n                                                <!-- <li class=\"bg-danger\"><a class=\"dropdown-item pointer\"  @click=\"deleteItem(item.pid)\">Delete</a> </li> -->\r\n                                            </ul>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                        <div class=\"flex justify-center mt-4\">\r\n                            <nav class=\"relative justify-center rounded-md shadow pagination\">\r\n                                <pagination-links v-for=\"(link, i) of stores.links\" :link=\"link\" :key=\"i\" @next=\"nextPage($event,link)\"></pagination-links>\r\n                            </nav>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <o-modal  :isOpen=\"openModal\" modal-class=\"modal-sm\" title=\"Company Store\" @submit=\"createStore\" @modal-close=\"closeModal\">\r\n            <template #content>\r\n                <form id=\"itemForm\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-12\">\r\n                            <label class=\"form-label\">Name</label>\r\n                            <input type=\"text\" v-model=\"storeFrom.name\" class=\"form-control form-control-sm\" placeholder=\"e.g HQ store\">\r\n                            <p class=\"text-danger\" v-if=\"errors?.name\">{{ errors?.name[0] }} </p>\r\n                        </div>\r\n                    <div class=\"col-md-12\">\r\n                        <label class=\"form-label\">Location</label>\r\n                        <textarea v-model=\"storeFrom.location\" class=\"form-control form-control-sm\" placeholder=\"e.g Zaria\"></textarea>\r\n                        <p class=\"text-danger\" v-if=\"errors?.location\">{{ errors?.location[0] }} </p>\r\n                    </div>\r\n                    <div class=\"col-md-12\">\r\n                        <label>Description</label>\r\n                        <textarea v-model=\"storeFrom.description\" class=\"form-control form-control-sm\" placeholder=\"e.g Raw material store\"></textarea>\r\n                        <p class=\"text-danger\" v-if=\"errors?.description\">{{ errors?.description[0] }} </p>\r\n                    </div>\r\n                    <div class=\"col-md-12\">\r\n                        <label class=\"form-label\">Store Manager</label>\r\n                        <Select2 v-model=\"storeFrom.manager_pid\" :options=\"users\" :settings=\"{ width: '100%' }\" />\r\n                        <p class=\"text-danger\" v-if=\"errors?.manager_pid\">{{ errors?.manager_pid[0] }} </p>\r\n                    </div>\r\n                </div>\r\n                   \r\n                </form>\r\n            </template>\r\n        </o-modal>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport store from \"@/store\";\r\nimport { ref } from \"vue\";\r\nimport PaginationLinks from \"@/components/PaginationLinks.vue\";\r\nimport Select2 from 'vue3-select2-component';\r\n\r\nimport OModal from \"@/components/OModal.vue\";\r\nconst openModal = ref(false)\r\nconst closeModal = () => {\r\n    openModal.value = false;\r\n};\r\n\r\nconst errors = ref({});\r\nconst stores = ref({});\r\n\r\nconst storeFrom = ref({\r\n    location: '',\r\n    name: '',\r\n    description: '',\r\n    manager_pid: '',\r\n});\r\n\r\nconst editItem = (sec) => {\r\n    storeFrom.value = {\r\n        location: sec.location,\r\n        description: sec.description,\r\n        name: sec.name,\r\n        manager_pid: sec.maanager_pid,\r\n        pid: sec.pid,\r\n    }\r\n    openModal.value = true\r\n}\r\n\r\nconst resetAttr = () => {\r\n    storeFrom.value = {\r\n        location: '',\r\n        description: '',\r\n        name: '',\r\n        manager_pid: '',\r\n    }\r\n}\r\n\r\n// const deleteItem = (id) => {\r\n//     alert(id)\r\n// }\r\n\r\n\r\n\r\nfunction createStore() {\r\n    errors.value = []\r\n    store.dispatch('postMethod', { url: '/create-store', param: storeFrom.value }).then((data) => {\r\n        if (data?.status == 422) {\r\n            errors.value = data.data\r\n        } else if (data?.status == 201) {\r\n            openModal.value = false;\r\n            resetAttr();\r\n            loadItem()\r\n        }\r\n    })\r\n}\r\nloadItem()\r\nfunction loadItem(url ='/load-stores') {\r\n    store.dispatch('getMethod', { url: url }).then((data) => {\r\n        if (data?.status == 200) {\r\n            stores.value = data.data;\r\n        }\r\n    })\r\n}\r\nconst users = ref({})\r\nfunction dropdownSection() {\r\n    store.dispatch('loadDropdown', 'users').then(({ data }) => {\r\n        users.value = data;\r\n    })\r\n}\r\ndropdownSection()\r\n\r\n  function nextPage(link) {\r\n        if (!link.url || link.active) {\r\n            return;\r\n        }\r\n        loadItem(link.url)\r\n    }\r\n\r\n</script>\r\n\r\n<style scoped></style>","import script from \"./StoreView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./StoreView.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["__exports__","openModal","ref","closeModal","value","errors","stores","storeFrom","location","name","description","manager_pid","editItem","sec","maanager_pid","pid","resetAttr","createStore","store","dispatch","url","param","then","data","status","loadItem","users","dropdownSection","nextPage","link","active"],"sourceRoot":""}