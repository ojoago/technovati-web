{"version":3,"file":"js/6570.9de483d1.js","mappings":"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","sources":["webpack://Technovati/./src/components/PaginationLinks.vue","webpack://Technovati/./src/views/memo/MemoView.vue","webpack://Technovati/./src/views/memo/MemoView.vue?e8d3"],"sourcesContent":["import script from \"./PaginationLinks.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./PaginationLinks.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n    <div>\r\n        <div class=\"container mt-2\">\r\n\r\n            <div class=\"card\">\r\n                <div class=\"card-header\">\r\n                    <h3>Memo</h3>\r\n                    <button class=\"btn btn-sm btn-primary\" @click=\"openModal\">Add New</button>\r\n                </div>\r\n                <div class=\"card-body\">\r\n                    <div class=\"table-responsive\">\r\n                        <table class=\"table-hover table-stripped table-bordered table\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>SN</th>\r\n                                    <th>Author</th>\r\n                                    <th>Subject</th>\r\n                                    <th>Body</th>\r\n                                    <!-- <th>Category</th> -->\r\n                                    <th>File</th>\r\n                                    <th>Status</th>\r\n                                    <th> <i class=\"bi bi-gear-fill\"></i> </th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr v-for=\"(memo, loop) in memos.data\" :key=\"loop\">\r\n                                    <td>{{ loop + 1 }}</td>\r\n                                    <td class=\"line-break\">{{ memo?.author?.username }}</td>\r\n                                    <td class=\"line-break\">{{ memo.subject }}</td>\r\n                                    <td class=\"line-break\">{{ memo.body }}</td>\r\n                                   <!-- <td>{{ memo.memo_category }}</td> -->\r\n                                    <td>{{ memo.memo_status }}</td>\r\n                                    <td>\r\n                                        \r\n                                        <a :href=\"memo.path\"  v-if=\"memo.path\" target=\"_blank\" rel=\"noopener noreferrer\"\r\n                                            :download=\"memo?.path\"> Download</a>\r\n                                    </td>\r\n                                    <td>\r\n                                        <div class=\"dropdown\" v-if=\"memo.status==0\">\r\n                                            <button type=\"button\" class=\"btn btn-primary btn-sm dropdown-toggle\"\r\n                                                data-bs-toggle=\"dropdown\">\r\n                                                <i class=\"bi bi-tools\"></i>\r\n                                            </button>\r\n                                            <ul class=\"dropdown-menu\">\r\n                                                <li><a class=\"dropdown-item pointer bg-success\"\r\n                                                        @click=\"publishMemo(memo.pid)\">Publish</a> </li>\r\n                                                <li><a class=\"dropdown-item pointer bg-warning\"\r\n                                                        @click=\"editMemo(memo)\">Edit</a> </li>\r\n                                                <li><a class=\"dropdown-item pointer bg-danger\"\r\n                                                        @click=\"deleteMemo(memo.pid)\">Delete</a> </li>\r\n                                            </ul>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                        <div class=\"flex justify-center mt-4\">\r\n                            <nav class=\"relative justify-center rounded-md shadow pagination\">\r\n                                <pagination-links v-for=\"(link, i) of memos.links\" :link=\"link\" :key=\"i\"\r\n                                    @next=\"nextPage(link)\"></pagination-links>\r\n                            </nav>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n        <o-modal :isOpen=\"toggleModal\" @submit=\"createMemo\" modal-class=\"modal-lg\" title=\"Create Memo\"\r\n            @modal-close=\"closeModal\">\r\n            <template #content>\r\n                <div>\r\n                    <form id=\"memoForm\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-12\">\r\n                                <div class=\"form-group\">\r\n                                    <label class=\"form-label\">subject</label>\r\n                                    <input type=\"text\" v-model=\"memoForm.subject\" class=\"form-control\"\r\n                                        placeholder=\"Enter subject\">\r\n                                    <p class=\"text-danger \" v-if=\"errors?.subject\">{{ errors?.subject[0] }}</p>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-12\">\r\n                                <div class=\"form-group\">\r\n                                    <label class=\"form-label\">Body</label>\r\n                                    <textarea type=\"text\" v-model=\"memoForm.body\" class=\"form-control\"\r\n                                        placeholder=\"Enter Message\"></textarea>\r\n                                    <p class=\"text-danger \" v-if=\"errors?.body\">{{ errors?.body[0] }}</p>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <!-- <div class=\"col-md-12\">\r\n                                <div class=\"form-group\">\r\n                                    <label class=\"form-label\">Category</label>\r\n                                    <select v-model=\"memoForm.category\" class=\"form-control form-control-sm\">\r\n                                        <option value=\"\" selected>Make Selection</option>\r\n                                        <option value=\"1\">General</option>\r\n                                        <option value=\"2\">Department</option>\r\n                                        <option value=\"3\">Staff</option>\r\n                                    </select>\r\n                                    <p class=\"text-danger \" v-if=\"errors?.category\">{{ errors?.category[0] }}</p>\r\n                                </div>\r\n                            </div> -->\r\n                            <div class=\"col-md-12\">\r\n                                <div class=\"form-group\">\r\n                                    <label class=\"form-label\">File <span class=\"text-danger\">*</span></label>\r\n                                    <input type=\"file\" class=\"form-control form-control-sm\" id=\"image\"\r\n                                        @change=\"handleImageChange\" accept=\".pdf,.docs,.png,.jpg,.jpeg\" a required />\r\n                                    <p class=\"text-danger \" v-if=\"errors?.image\">{{ errors?.image[0] }}</p>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"col-md-12\" v-if=\"memoForm.category == 3\">\r\n                                <div class=\"form-group\">\r\n                                    <label class=\"form-label\">Staff</label>\r\n                                    <div>\r\n                                        <Multiselect v-model=\"memoForm.staff\" :options=\"users\" :multiple=\"true\"\r\n                                            :close-on-select=\"true\" placeholder=\"Pick staff\" label=\"text\"\r\n                                            track-by=\"id\" />\r\n                                    </div>\r\n                                    <p class=\"text-danger \" v-if=\"errors?.staff\">{{ errors?.staff[0] }}</p>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"col-md-12\" v-if=\"memoForm.category == 2\">\r\n                                <div class=\"form-group\">\r\n                                    <label class=\"form-label\">Departments</label>\r\n                                    <div>\r\n                                        <Multiselect v-model=\"memoForm.departments\" :options=\"departments\"\r\n                                            :multiple=\"true\" :close-on-select=\"true\" placeholder=\"Pick Department\"\r\n                                            label=\"text\" track-by=\"id\" />\r\n                                    </div>\r\n                                    <p class=\"text-danger \" v-if=\"errors?.departments\">{{ errors?.departments[0] }}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </template>\r\n        </o-modal>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from \"vue\";\r\nimport store from \"@/store\";\r\nimport PaginationLinks from \"@/components/PaginationLinks.vue\";\r\nimport { Multiselect } from 'vue-multiselect';\r\nimport OModal from \"@/components/OModal.vue\";\r\n\r\nconst toggleModal = ref(false)\r\nconst openModal = () => {\r\n    toggleModal.value = true\r\n\r\n}\r\nconst closeModal = () => {\r\n    toggleModal.value = false;\r\n    resetAttr()\r\n};\r\n    const memoForm = ref({\r\n            subject : '',\r\n            body : '' , \r\n            category : '1' , \r\n            staff : '' , \r\n            departments : '' , \r\n            image : '' , \r\n    });\r\n     \r\n\r\n    const resetAttr = () => {\r\n        memoForm.value = {\r\n            subject: '',\r\n            body: '',\r\n            category: '1',\r\n            staff: '',\r\n            departments: '', \r\n            image: '', \r\n        }\r\n    }\r\n    \r\n    // const cast = [\r\n    //     Request memo,\r\n    //     Confirmation,\r\n    //     Periodic,\r\n    //     Ideas and suggestions,\r\n    //     Informal study results\r\n    // ];\r\n\r\n\r\nconst handleImageChange = (event) => {\r\n     const file = event.target.files[0];\r\n    if (file) {\r\n        var ext = file['name'].substring(file['name'].lastIndexOf('.') + 1);\r\n        if (!['png', 'jpeg', 'jpg','docs','pdf'].includes(ext)) {\r\n            event.target.value = null;\r\n            store.commit('notify', { message: 'Only Image is allowed', type: 'warning' })\r\n            return;\r\n        }\r\n        if (file.size > 1024 * 1024) {\r\n            event.target.value = null;\r\n            store.commit('notify', { message: 'Image cannot be more 1MB', type: 'warning' })\r\n            return;\r\n        }\r\n        const reader = new FileReader();\r\n        reader.onload = () => {\r\n            memoForm.value.image = reader.result;\r\n        };\r\n        reader.readAsDataURL(file);\r\n    }\r\n}\r\n\r\n    const errors = ref({})\r\n    const memos = ref({})\r\n    \r\n    function createMemo(){\r\n        errors.value = [];\r\n        store.dispatch('postMethod', { url: '/create-memo', param: memoForm.value }).then((data) => {\r\n            if (data?.status == 422) {\r\n                errors.value = data.data;\r\n                console.log(data.data);\r\n                \r\n            } else if (data?.status == 201) {\r\n                closeModal()\r\n                loadMemo()\r\n            }\r\n        })\r\n    }\r\n\r\n   const editMemo = (memo) => {\r\n        memoForm.value = {\r\n            subject: memo.subject ,\r\n            body: memo.body ,\r\n            category: memo.category ,\r\n            staff: memo.staff ,\r\n            departments: memo.departments ,\r\n            pid: memo.pid ,\r\n        }\r\n        toggleModal.value = true\r\n   }\r\n\r\n   const deleteMemo = (pid) => {\r\n       store.dispatch('deleteMethod', { url: '/delete-memo-record/' + pid }).then((data) => {\r\n        if (data?.status == 200) {\r\n            store.commit('notify', { message: 'Reloading Records...', type: 'secondary' })\r\n            loadMemo()\r\n        }\r\n    })\r\n   }\r\n   \r\n   const publishMemo = (pid) => {\r\n       store.dispatch('putMethod', { url: '/publish-memo/' + pid}).then((data) => {\r\n        if (data?.status == 201) {\r\n            store.commit('notify', { message: 'Reloading Records...', type: 'secondary' })\r\n            loadMemo()\r\n        }\r\n    })\r\n   }\r\n\r\n    loadMemo()\r\n    function loadMemo(url= '/load-memo'){\r\n        store.dispatch('getMethod', { url: url}).then((data) => {\r\n              if (data?.status == 200) {\r\n                memos.value = data.data;\r\n            }else{\r\n                memos.value ={}\r\n            }\r\n        }).catch(e => {\r\n            console.log(e);\r\n        })\r\n    }\r\n    const users = ref([]);\r\n    function dropdownUser() {\r\n        store.dispatch('loadDropdown', 'users').then(({ data }) => {\r\n            users.value = data;\r\n        }).catch(e => {\r\n            console.log(e);\r\n        })\r\n    }\r\n    dropdownUser()\r\n\r\n    const departments = ref([]);\r\n    function dropdownDepts() {\r\n        store.dispatch('loadDropdown', 'departments').then(({ data }) => {\r\n            departments.value = data;\r\n        }).catch(e => {\r\n            console.log(e);\r\n        })\r\n    }\r\n    dropdownDepts()\r\n\r\n    function nextPage(link) {\r\n        if (!link.url || link.active) {\r\n            return;\r\n        }\r\n        loadMemo(link.url)\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>","import script from \"./MemoView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./MemoView.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["__exports__","toggleModal","ref","openModal","value","closeModal","resetAttr","memoForm","subject","body","category","staff","departments","image","handleImageChange","event","file","target","files","ext","substring","lastIndexOf","includes","store","commit","message","type","size","reader","FileReader","onload","result","readAsDataURL","errors","memos","createMemo","dispatch","url","param","then","data","status","console","log","loadMemo","editMemo","memo","pid","deleteMemo","publishMemo","catch","e","users","dropdownUser","dropdownDepts","nextPage","link","active"],"sourceRoot":""}