{"version":3,"file":"js/2208.afdddded.js","mappings":"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","sources":["webpack://Technovati/./src/composables/formatError.js","webpack://Technovati/./src/components/PaginationLinks.vue","webpack://Technovati/./src/views/inventory/CrOutView.vue","webpack://Technovati/./src/views/inventory/CrOutView.vue?c39c"],"sourcesContent":["\r\nexport function formatError() {\r\n    function transformValidationErrors(response , handleType = 'axios'){\r\n        const errors = []\r\n        if(handleType == 'axios'){\r\n            if(response){\r\n                for (let key in response) {\r\n                    if(key.indexOf('.') !== -1){\r\n                        let k = trimKey(key);\r\n                        errors[k] = response[key][0]\r\n                    }else{\r\n                        errors[key] = response[key][0]\r\n                    }\r\n                    errors[key] = response[key][0]\r\n                }\r\n            }\r\n        }\r\n        return errors\r\n    }\r\n    \r\n    function trimKey(key){\r\n        const parts = key.split('.').filter(part => (part));\r\n        const part = key.split('.').filter(part => !isNaN(part));\r\n       \r\n        // const numericValues = parts.map(Number);\r\n        return parts[2]+part.map(Number);\r\n\r\n// console.log(numericValues);\r\n    }\r\n\r\n    return {\r\n        transformValidationErrors\r\n    }\r\n}","import script from \"./PaginationLinks.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./PaginationLinks.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n    <div>\r\n        <div class=\"container mt-2\">\r\n            <div class=\"row\">\r\n                <div class=\"col-md-7\">\r\n                    <div class=\"card\">\r\n                        <div class=\"card-header\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-6\">\r\n                                    Finished Products\r\n                                </div>\r\n                                <div class=\"col-md-6\">\r\n                                    <select class=\"form-control\" @change=\"loadItem($event.target.value)\">\r\n                                        <option value=\"\" selected>Select Store</option>\r\n                                        <template v-for=\"sec in stores\" :key=\"sec.id\">\r\n                                            <option v-if=\"stores.length == 1\" selected :value=\"sec.id\">{{ sec.text }}\r\n                                            </option>\r\n                                            <option v-else :value=\"sec.id\">{{ sec.text }} </option>\r\n                                        </template>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"card-body\">\r\n                            <input type=\"text\" class=\" form-control form-control-sm\" placeholder=\"search Item\">\r\n                            <div class=\"table-responsive\">\r\n                                <table class=\"table-hover table-stripped table-bordered table\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>SN</th>\r\n                                            <th>Name</th>\r\n                                            <!-- <th>Model</th> -->\r\n                                            <th>Quantity</th>\r\n                                            <!-- <th>Description</th> -->\r\n                                            <th align=\"center\"> <i class=\"bi bi-gear-fill\"></i> </th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        <tr v-for=\"(item, loop) in items?.data\" :key=\"loop\">\r\n                                            <td>{{ loop + 1 }}</td>\r\n                                            <td>{{ item.name }}</td>\r\n                                            <!-- <td>{{ item.model }} </td> -->\r\n                                            <td>{{ item?.quantity ?? 0 }} {{ item.unit }}</td>\r\n                                            <td>\r\n                                                <button v-if=\"item?.quantity > 0\" @click=\"addItem(item)\" type=\"button\"\r\n                                                    class=\"btn btn-primary btn-sm\">\r\n                                                    <i class=\"bi bi-plus\"></i>\r\n                                                </button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                                 <div class=\"flex justify-center mt-4\">\r\n                                    <nav class=\"relative justify-center rounded-md shadow pagination\">\r\n                                        <pagination-links v-for=\"(link, i) of items.links\" :link=\"link\" :key=\"i\"\r\n                                            @next=\"nextPage(link)\"></pagination-links>\r\n                                    </nav>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"col-md-5\">\r\n                    <div class=\"card\">\r\n                        <div class=\"card-body\">\r\n                            <fieldset class=\"border rounded-3 p-1\" id=\"requestBody\">\r\n                                <legend class=\"float-none w-auto px-2 h5\">Request Items</legend>\r\n                                <form id=\"itemForm\" v-if=\"request.items.length\">\r\n\r\n                                    <fieldset class=\"border rounded-3 p-2 m-1\">\r\n                                        <div class=\"col-md-12\" v-for=\"(item, loop) in request.items\" :key=\"loop\">\r\n                                            <div class=\"form-group\">\r\n                                                <label class=\"form-label\">{{ item.name }} </label>\r\n                                                <div class=\"input-group\">\r\n                                                    <span class=\"bg-light p-1\">#{{ item.qnt }}</span>\r\n                                                    <input type=\"number\" v-model=\"item.quantity\" class=\"form-control\"\r\n                                                        placeholder=\"e.g 31\">\r\n                                                    <button type=\"button\" class=\"btn btn-danger btn-sm\"\r\n                                                        @click=\"removeitem(loop)\"> <i class=\"bi bi-file-minus-fill\"></i>\r\n                                                    </button>\r\n                                                </div>\r\n                                                <p class=\"text-danger \" v-if=\"errors[loop]\">{{ errors[loop] }} </p>\r\n                                            </div>\r\n                                        </div>\r\n                                    </fieldset>\r\n\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-md-12\">\r\n                                            <label class=\"form-label\">Comment</label>\r\n                                            <textarea type=\"text\" v-model=\"request.comment\"\r\n                                                class=\"form-control form-control-sm\" placeholder=\"e.g enjoy Grade A Meter\"></textarea>\r\n                                            <p class=\"text-danger \" v-if=\"errors?.comment\">{{ errors?.comment[0] }} </p>\r\n                                        </div>\r\n                                        <div class=\"col-md-12\">\r\n                                            <label class=\"form-label\">DISCO</label>\r\n                                            <!-- <input class=\"form-control form-control-sm\" placeholder=\"\" v-model=\"request.customer_pid\"> -->\r\n                                            <Select2 v-model=\"request.customer_pid\" :options=\"customerDrop\"\r\n                                                :settings=\"{ width: '100%' }\" />\r\n\r\n                                            <p class=\"text-danger \" v-if=\"errors?.customer_pid\">{{\r\n                                                errors?.customer_pid }} </p>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div class=\"float-end\">\r\n                                        <button type=\"button\" class=\"btn btn-success btn-sm mt-2 mb-2\"\r\n                                            @click=\"requestMaterial\">Submit</button>\r\n                                    </div>\r\n                                </form>\r\n\r\n                            </fieldset>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport store from \"@/store\";\r\nimport { ref } from \"vue\";\r\nimport Select2 from 'vue3-select2-component';\r\nimport { useRouter } from 'vue-router';\r\nimport { formatError } from '@/composables/formatError';\r\nimport PaginationLinks from \"@/components/PaginationLinks.vue\";\r\n\r\nconst { transformValidationErrors } = formatError()\r\nconst router = useRouter()\r\nconst errors = ref({});\r\nconst items = ref({});\r\n\r\nconst request = ref({\r\n    customer_pid: '',\r\n    comment: '',\r\n    // store_pid: '04430511J207011I90N211FR73A5',\r\n    items: [],\r\n});\r\n\r\nconst resetAttr = () => {\r\n    request.value = {\r\n        reciver: '',\r\n        comment: '',\r\n        store_pid: '',\r\n        items: [],\r\n    }\r\n}\r\n\r\nconst addItem = (item) => {\r\n    var index = request.value.items.findIndex(x => x.pid == item.pid)\r\n    if (index === -1) {\r\n        request.value.items.push({\r\n            pid: item.pid,\r\n            quantity: 1,\r\n            qnt: item?.quantity,\r\n            name: item.name,\r\n        })\r\n    } else {\r\n        if (request.value.items[index].quantity < item?.quantity) {\r\n            request.value.items[index].quantity++\r\n        } else {\r\n            store.commit('notify', { message: `Quantity remaining is : ${request.value.items[index].quantity}`, type: 'warning' })\r\n        }\r\n    }\r\n}\r\nconst removeitem = (i) => {\r\n    // let len = request.value.items.length;\r\n    // if (len === 1) {\r\n    //     store.commit('notify', { message: 'Qualification requires at least one instituion', type: 'warning' })\r\n    //     return;\r\n    // }\r\n\r\n    request.value.items.splice(i, 1);\r\n}\r\n\r\n\r\nfunction requestMaterial() {\r\n    errors.value = []\r\nstore.dispatch('postMethod', { url: '/item-cr-out', param: request.value }).then((data) => {\r\n        if (data?.status == 422) {\r\n            // errors.value = data.data\r\n            errors.value = transformValidationErrors(data.data)\r\n        } else if (data?.status == 201) {\r\n            // waybill\r\n            router.push({ name: 'CrOutRequestView' })\r\n\r\n            resetAttr();\r\n        }\r\n    }).catch(e => {\r\n        console.log(e);\r\n    })\r\n}\r\n\r\n\r\nfunction loadItem(pid) {\r\n    store.dispatch('getMethod', { url: '/load-cr-out-items/'+pid }).then((data) => {\r\n        if (data?.status == 200) {\r\n            items.value = data.data;\r\n        }else{\r\n            items.value = []\r\n        }\r\n    }).catch(e => {\r\n        console.log(e);\r\n    })\r\n}\r\n\r\nif(request.value.items){\r\n    loadStateRes()\r\n}\r\n\r\nconst customerDrop = ref([]);\r\n\r\nfunction loadStateRes() {\r\n    store.dispatch('loadDropdown', 'customers' ).then(({ data }) => {\r\n        customerDrop.value = data;\r\n    }).catch(e => {\r\n        console.log(e);\r\n    })\r\n}\r\n\r\nconst stores = ref({})\r\nfunction dropdownSection() {\r\n    store.dispatch('loadDropdown', 'stores').then(({ data }) => {\r\n        if (data.length == 1) {\r\n            loadItem(data[0].id)\r\n        }\r\n        stores.value = data;\r\n    }).catch(e => {\r\n        console.log(e);\r\n    })\r\n}\r\ndropdownSection()\r\n\r\nfunction nextPage(link) {\r\n\r\n    if (!link.url || link.active) {\r\n        return;\r\n    }\r\n    store.dispatch('getMethod', { url: link.url }).then((data) => {\r\n        if (data?.status == 200) {\r\n            items.value = data.data;\r\n        }else{\r\n            items.value = []\r\n        }\r\n    }).catch(e => {\r\n        console.log(e);\r\n    })\r\n}\r\n\r\n\r\n\r\n</script>\r\n\r\n<style scoped>\r\n\r\n\r\n</style>","import script from \"./CrOutView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./CrOutView.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["formatError","transformValidationErrors","response","handleType","errors","key","indexOf","k","trimKey","parts","split","filter","part","isNaN","map","Number","__exports__","router","useRouter","ref","items","request","customer_pid","comment","resetAttr","value","reciver","store_pid","addItem","item","index","findIndex","x","pid","push","quantity","qnt","name","store","commit","message","type","removeitem","i","splice","requestMaterial","dispatch","url","param","then","data","status","catch","e","console","log","loadItem","loadStateRes","customerDrop","stores","dropdownSection","length","id","nextPage","link","active"],"sourceRoot":""}