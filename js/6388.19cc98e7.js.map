{"version":3,"file":"js/6388.19cc98e7.js","mappings":"+fAGA,MAAMA,EAAc,EAEpB,O,wbCuBA,MAAMC,GAASC,EAAAA,EAAAA,IAAI,CAAC,GAEdC,GAAOD,EAAAA,EAAAA,IAAI,CACbE,KAAM,GACNC,YAAa,KAGXC,EAAYA,KACdH,EAAKI,MAAQ,CACTH,KAAM,GACNC,YAAa,GAChB,EAGL,SAASG,IACLP,EAAOM,MAAQ,GACfE,EAAAA,EAAMC,SAAS,aAAc,CAAEC,IAAK,oBAAqBC,MAAOT,EAAKI,QAASM,MAAMC,IAC5D,KAAhBA,GAAMC,OACNd,EAAOM,MAAQO,EAAKA,KACG,KAAhBA,GAAMC,QACbT,GACJ,GAER,C,yyBChDA,MAAMN,EAAc,EAEpB,O,uzCCuGA,MAAMgB,GAAYd,EAAAA,EAAAA,KAAI,GAChBe,GAAcf,EAAAA,EAAAA,KAAI,GAElBgB,EAAaA,KACfD,EAAYV,OAAQ,EACpBS,EAAUT,OAAQ,EAClBD,GAAW,EAGTa,EAAkBA,KACpBF,EAAYV,OAAQ,EACpBa,GAAe,EAIbnB,GAASC,EAAAA,EAAAA,IAAI,CAAC,GACdmB,GAAQnB,EAAAA,EAAAA,IAAI,CAAC,GAEboB,GAAOpB,EAAAA,EAAAA,IAAI,CACbC,KAAK,GACLC,KAAK,GACLC,YAAa,KAGXkB,EAAYC,IACdF,EAAKf,MAAQ,CACTJ,KAAMqB,EAAIrB,KACVE,YAAamB,EAAInB,YACjBD,KAAMoB,EAAIpB,KACVqB,IAAKD,EAAIC,KAEbR,EAAYV,OAAQ,CAAI,EAGtBD,EAAYA,KACdgB,EAAKf,MAAQ,CACTJ,KAAM,GACNC,KAAM,GACNC,YAAa,GAChB,EAML,SAASqB,IACLzB,EAAOM,MAAQ,GACfE,EAAAA,EAAMC,SAAS,aAAc,CAAEC,IAAK,eAAgBC,MAAOU,EAAKf,QAASM,MAAMC,IACvD,KAAhBA,GAAMC,OACNd,EAAOM,MAAQO,EAAKA,KACG,KAAhBA,GAAMC,SACbG,IACAS,IACJ,IACDC,OAAMC,IACLC,QAAQC,IAAIF,EAAE,GAEtB,CAEA,SAASF,EAAShB,EAAI,gBAClBF,EAAAA,EAAMC,SAAS,YAAa,CAAEC,IAAKA,IAAOE,MAAMC,IACxB,KAAhBA,GAAMC,SACNM,EAAMd,MAAQO,EAAKA,KACvB,IACDc,OAAMC,IACLC,QAAQC,IAAIF,EAAE,GAEtB,CAEA,SAASG,EAASC,GACTA,EAAKtB,MAAOsB,EAAKC,QAGtBP,EAASM,EAAKtB,IAClB,CAhBAgB,IAiBA,MAAMQ,GAAQjC,EAAAA,EAAAA,IAAI,CAAC,GAEnB,SAASkB,IACLX,EAAAA,EAAMC,SAAS,eAAgB,SAASG,MAAK,EAAGC,WAC5CqB,EAAM5B,MAAQO,CAAI,GAE1B,C,OACAM,I,itEC3LA,MAAMpB,EAAc,EAEpB,O","sources":["webpack://Technovati/./src/components/PaginationLinks.vue","webpack://Technovati/./src/components/material/ItemUnitForm.vue","webpack://Technovati/./src/components/material/ItemUnitForm.vue?2114","webpack://Technovati/./src/views/inventory/ItemView.vue","webpack://Technovati/./src/views/inventory/ItemView.vue?8509"],"sourcesContent":["import script from \"./PaginationLinks.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./PaginationLinks.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n    <div>\r\n         <form id=\"uForm\">\r\n            <div class=\"row\">\r\n                <div class=\"col-md-12\">\r\n                    <div class=\"form-group\">\r\n                        <label class=\"form-label\">Name</label>\r\n                        <input type=\"text\" v-model=\"unit.name\" class=\"form-control\" placeholder=\"e.g meter\">\r\n                        <p class=\"text-danger \" v-if=\"errors?.name\">{{ errors?.name[0] }}</p>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-md-12\">\r\n                    <div class=\"form-group\">\r\n                        <label class=\"form-label\">Description</label>\r\n                        <textarea type=\"text\" v-model=\"unit.description\" class=\"form-control\" placeholder=\"e.g this is \"></textarea>\r\n                        <p class=\"text-danger \" v-if=\"errors?.description\">{{ errors?.description[0] }}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <button type=\"button\" class=\"btn btn-success btn-sm mt-2\" @click=\"addItemUnit\">Submit</button>\r\n        </form>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\n\r\nimport store from \"@/store\";\r\nimport { ref } from \"vue\";\r\nconst errors = ref({});\r\n\r\nconst unit = ref({\r\n    name: '',\r\n    description: '',\r\n});\r\n\r\nconst resetAttr = ()=>{\r\n    unit.value = {\r\n        name: '',\r\n        description: '',\r\n    }\r\n}\r\n\r\nfunction addItemUnit() {\r\n    errors.value = []\r\n    store.dispatch('postMethod', { url: '/create-item-unit', param: unit.value }).then((data) => {\r\n        if (data?.status == 422) {\r\n            errors.value = data.data\r\n        } else if (data?.status == 201) {\r\n            resetAttr()\r\n        }\r\n    })\r\n}\r\n\r\n\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>","import script from \"./ItemUnitForm.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ItemUnitForm.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n    <div>\r\n        <div class=\"container mt-2\">\r\n\r\n            <div class=\"card\">\r\n                <div class=\"card-header\">Company Items\r\n\r\n                    <button class=\"btn btn-primary btn-sm mr-2\" @click=\"openToggleModal\">Add New</button> &nbsp;\r\n                    <button @click=\"unitModal = true\" class=\"btn btn-sm btn-primary ml-2\">Add Item Unit</button>\r\n\r\n                </div>\r\n                <div class=\"card-body\">\r\n\r\n                    <div class=\"table-responsive\">\r\n                        <table class=\"table-hover table-stripped table-bordered table\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th width=\"5%\">SN</th>\r\n                                    <th>Name</th>\r\n                                    <th>Unit</th>\r\n                                    <th>Description</th>\r\n                                    <th> <i class=\"bi bi-gear-fill\"></i> </th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr v-for=\"(item, loop) in items?.data\" :key=\"loop\">\r\n                                    <td>{{ loop + 1 }}</td>\r\n                                    <td>{{ item.name }}</td>\r\n                                    <td>{{ item.unit }}</td>\r\n                                    <td>{{ item.description }}</td>\r\n                                    <td>\r\n                                        <div class=\"dropdown\">\r\n                                            <button type=\"button\" class=\"btn btn-primary btn-sm dropdown-toggle\"\r\n                                                data-bs-toggle=\"dropdown\">\r\n                                                <i class=\"bi bi-tools\"></i>\r\n                                            </button>\r\n                                            <ul class=\"dropdown-menu\">\r\n                                                <li class=\"bg-warning\"><a class=\"dropdown-item pointer\"\r\n                                                        @click=\"editItem(item)\">Edit</a> </li>\r\n                                                <!-- <li class=\"bg-danger\"><a class=\"dropdown-item pointer\"\r\n                                                                @click=\"deleteItem(item.pid)\">Delete</a> </li> -->\r\n                                            </ul>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                        <div class=\"flex justify-center mt-4\">\r\n                            <nav class=\"relative justify-center rounded-md shadow pagination\">\r\n                                <pagination-links v-for=\"(link, i) of items.links\" :link=\"link\" :key=\"i\"\r\n                                    @next=\"nextPage(link)\"></pagination-links>\r\n                            </nav>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <o-modal :isOpen=\"unitModal\" modal-class=\"modal-xs\" title=\"Add Item Unit\" @modal-close=\"closeModal\">\r\n            <template #content>\r\n                <UnitItemForm />\r\n            </template>\r\n            <template #footer>\r\n                <div></div>\r\n            </template>\r\n        </o-modal>\r\n\r\n        <o-modal :isOpen=\"toggleModal\" modal-class=\"modal-xs\" title=\"Create Item Names\" @submit=\"createItem\"\r\n            @modal-close=\"closeModal\">\r\n            <template #content>\r\n                <form id=\"itemForm\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-12\">\r\n                            <label class=\"form-label\">Item Name</label>\r\n                            <input type=\"text\" v-model=\"item.name\" class=\"form-control form-control-sm\"\r\n                                placeholder=\"e.g UIU\">\r\n                            <p class=\"text-danger \" v-if=\"errors?.name\">{{ errors?.name[0] }} </p>\r\n                        </div>\r\n                        <div class=\"col-md-12\">\r\n                            <label class=\"form-label\">Item Name</label>\r\n                            <select v-model=\"item.unit\" class=\"form-control form-control-sm\">\r\n                                <option value=\"\" selected>Select Unit</option>\r\n                                <option v-for=\"(unit, i) in units\" :key=\"i\">{{ unit.text }}</option>\r\n                            </select>\r\n                            <p class=\"text-danger \" v-if=\"errors?.unit\">{{ errors?.unit[0] }} </p>\r\n                        </div>\r\n                        <div class=\"col-md-12\">\r\n                            <label>Description</label>\r\n                            <textarea v-model=\"item.description\" class=\"form-control form-control-sm\"></textarea>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <!-- <div class=\"float-end\">\r\n                        <button type=\"button\" class=\"btn btn-success btn-sm mt-2\" @click=\"createItem\">Submit</button>\r\n                    </div> -->\r\n                </form>\r\n            </template>\r\n        </o-modal>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport store from \"@/store\";\r\nimport { ref } from \"vue\";\r\nimport PaginationLinks from \"@/components/PaginationLinks.vue\";\r\nimport OModal from \"@/components/OModal.vue\";\r\nimport UnitItemForm from \"@/components/material/ItemUnitForm.vue\"\r\n\r\nconst unitModal = ref(false)\r\nconst toggleModal = ref(false);\r\n\r\nconst closeModal = () => {\r\n    toggleModal.value = false;\r\n    unitModal.value = false;\r\n    resetAttr()\r\n};\r\n\r\nconst openToggleModal = ()=> {\r\n    toggleModal.value = true;\r\n    dropdownUnits()\r\n}\r\n\r\n\r\nconst errors = ref({});\r\nconst items = ref({});\r\n\r\nconst item = ref({\r\n    unit:'' ,\r\n    name:'' ,\r\n    description: '' ,\r\n});\r\n \r\nconst editItem = (sec) => {\r\n    item.value = {\r\n        unit: sec.unit ,\r\n        description: sec.description ,\r\n        name: sec.name ,\r\n        pid: sec.pid ,\r\n    }\r\n    toggleModal.value = true\r\n}\r\n\r\nconst resetAttr = () => {\r\n    item.value = {\r\n        unit: '',\r\n        name: '',\r\n        description: '',\r\n    }\r\n}\r\n// const deleteItem = (id) => {\r\n//     alert(id)\r\n// }\r\n\r\nfunction createItem() {\r\n    errors.value = []\r\n    store.dispatch('postMethod', { url: '/create-item', param: item.value }).then((data) => {\r\n        if (data?.status == 422) {\r\n            errors.value = data.data\r\n        } else if (data?.status == 201) {\r\n            closeModal();\r\n            loadItem()\r\n        }\r\n    }).catch(e => {\r\n        console.log(e);\r\n    })\r\n}\r\nloadItem()\r\nfunction loadItem(url='/load-items/') {\r\n    store.dispatch('getMethod', { url: url }).then((data) => {\r\n        if (data?.status == 200) {\r\n            items.value = data.data;\r\n        }\r\n    }).catch(e => {\r\n        console.log(e);\r\n    })\r\n}\r\n\r\nfunction nextPage(link) {\r\n    if (!link.url || link.active) {\r\n        return;\r\n    }\r\n    loadItem(link.url)\r\n}\r\nconst units = ref({});\r\n\r\nfunction dropdownUnits() {\r\n    store.dispatch('loadDropdown', 'units').then(({ data }) => {\r\n        units.value = data;\r\n    })\r\n}\r\ndropdownUnits()\r\n\r\n</script>\r\n\r\n<style scoped></style>","import script from \"./ItemView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ItemView.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["__exports__","errors","ref","unit","name","description","resetAttr","value","addItemUnit","store","dispatch","url","param","then","data","status","unitModal","toggleModal","closeModal","openToggleModal","dropdownUnits","items","item","editItem","sec","pid","createItem","loadItem","catch","e","console","log","nextPage","link","active","units"],"sourceRoot":""}