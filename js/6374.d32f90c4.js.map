{"version":3,"file":"js/6374.d32f90c4.js","mappings":"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","sources":["webpack://Technovati/./src/composables/formatError.js","webpack://Technovati/./src/views/accounts/expense/AddExpense.vue","webpack://Technovati/./src/views/accounts/expense/AddExpense.vue?d21e"],"sourcesContent":["\r\nexport function formatError() {\r\n    function transformValidationErrors(response , handleType = 'axios'){\r\n        const errors = []\r\n        if(handleType == 'axios'){\r\n            if(response){\r\n                for (let key in response) {\r\n                    if(key.indexOf('.') !== -1){\r\n                        let k = trimKey(key);\r\n                        errors[k] = response[key][0]\r\n                    }else{\r\n                        errors[key] = response[key][0]\r\n                    }\r\n                    errors[key] = response[key][0]\r\n                }\r\n            }\r\n        }\r\n        return errors\r\n    }\r\n    \r\n    function trimKey(key){\r\n        const parts = key.split('.').filter(part => (part));\r\n        const part = key.split('.').filter(part => !isNaN(part));\r\n       \r\n        // const numericValues = parts.map(Number);\r\n        return parts[2]+part.map(Number);\r\n\r\n// console.log(numericValues);\r\n    }\r\n\r\n    return {\r\n        transformValidationErrors\r\n    }\r\n}","<template>\r\n    <div>\r\n        <div class=\"container mt-2\">\r\n\r\n            <div class=\"card\">\r\n                <div class=\"card-header\">\r\n                    <h3>Expense</h3>\r\n                </div>\r\n                <div class=\"card-body\">\r\n                    <fieldset>\r\n                        <form action=\"\">\r\n                            <div class=\"col-md-4\">\r\n                                <div class=\"form-group\">\r\n                                    <label class=\"form-label small\">Record Expense In</label>\r\n                                    <select class=\"form-control form-control-sm\" v-model=\"expense.account_type_pid\"\r\n                                        @change=\"dropDownAccount($event.target.value)\">\r\n                                        <option value=\"\" selected>Select Type</option>\r\n                                        <option v-for=\"sec in accountTypeDrop\" :key=\"sec.id\" :value=\"sec.id\">{{\r\n                                            sec.text }} </option>\r\n                                    </select>\r\n                                    <p class=\"text-danger \" v-if=\"errors?.account_type_pid\">{{\r\n                                        errors?.account_type_pid}}\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                            <fieldset class=\"border rounded-3 p-2 m-1\">\r\n                                <legend class=\"float-none w-auto px-2\">Expense Details</legend>\r\n\r\n                                <div class=\"row\" v-for=\"(item, loop) in expense.details\" :key=\"loop\">\r\n\r\n                                    <div class=\"col-md-4\">\r\n                                        <div class=\"form-group\">\r\n                                            <label class=\"form-label small\">Expense Type</label>\r\n                                            <Select2 v-model=\"item.account_pid\" :options=\"accountDrop\"\r\n                                                :settings=\"{ width: '100%' }\" placeholder=\"Select Type\" />\r\n                                            <p v-if=\"errors[`details.${loop}.account_pid`]\" class=\"text-danger\"> {{ errors[`details.${loop}.account_pid`] }} </p>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-md-3\">\r\n                                        <div class=\"form-group\">\r\n                                            <label class=\"form-label small\">Amount</label>\r\n                                            <input type=\"number\" step=\"0.5\" @change=\"subTotal\"\r\n                                                class=\"form-control form-control-sm\" v-model=\"item.amount\"\r\n                                                placeholder=\"e.g 300000\">\r\n                                            <p v-if=\"errors[`details.${loop}.amount`]\" class=\"text-danger\">\r\n                                                {{errors[`details.${loop}.amount`] }} </p>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-md-5\">\r\n                                        <div class=\"form-group\">\r\n                                            <label class=\"form-label small\">Description</label>\r\n                                            <div class=\"input-group\">\r\n                                                <input type=\"text\" class=\"form-control form-control-sm\"\r\n                                                    v-model=\"item.description\" placeholder=\"e.g new consignment\">\r\n                                                <button type=\"button\" class=\"btn btn-danger btn-sm\"\r\n                                                    @click=\"removeQualification(loop)\">\r\n                                                    <i class=\"bi bi-patch-minus\"></i> </button>\r\n                                            </div>\r\n                                            <p v-if=\"errors[`details.${loop}.description`]\" class=\"text-danger\">\r\n                                                {{ errors[`details.${loop}.description`] }} </p>\r\n                                        </div>\r\n                                    </div>\r\n\r\n\r\n\r\n\r\n                                </div>\r\n                                <button type=\"button\" class=\"btn btn-success btn-sm mt-2\" @click=\"addProduct\"> <i\r\n                                        class=\"bi bi-plus\"></i> </button>\r\n\r\n                            </fieldset>\r\n\r\n\r\n                            <div class=\"row\">\r\n\r\n                                <div class=\"col-md-4\">\r\n                                    <fieldset class=\"border rounded-3 p-2 m-1\">\r\n                                        <legend class=\"float-none w-auto px-2\">Summary</legend>\r\n\r\n                                        <input type=\"text\" :value=\"numberFormat(expense.sub_total)\"\r\n                                            class=\"form-control form-control-sm\" disabled placeholder=\"Sub Total\">\r\n\r\n                                        <div class=\"form-group\">\r\n                                            <label for=\"\">Date</label>\r\n                                            <input type=\"date\" v-model=\"expense.date\"\r\n                                                class=\"form-control form-control-sm\">\r\n                                                <p v-if=\"errors?.date\" class=\"text-danger\">\r\n                                                {{ errors?.date }} </p>\r\n                                        </div>\r\n\r\n                                        <div class=\"form-group\">\r\n                                            <label for=\"\">Discount</label>\r\n                                            <input type=\"number\" step=\"0.5\" v-model=\"expense.discount\"\r\n                                                class=\"form-control form-control-sm\" placeholder=\"Discount\">\r\n                                                <p v-if=\"errors?.discount\" class=\"text-danger\">\r\n                                                {{ errors?.discount }} </p>\r\n                                        </div>\r\n\r\n                                    </fieldset>\r\n                                </div>\r\n\r\n                                <div class=\"col-md-8\">\r\n                                    <fieldset class=\"border rounded-3 p-2 m-1\">\r\n                                        <legend class=\"float-none w-auto px-2\">Payment</legend>\r\n                                        <select class=\"form-control form-control-sm\" v-model=\"expense.payment_account\"\r\n                                            @change=\"dropDownPayment($event.target.value)\">\r\n                                            <option value=\"\" selected>Select Type</option>\r\n                                            <option v-for=\"sec in accountTypeDrop\" :key=\"sec.id\" :value=\"sec.id\">{{\r\n                                                sec.text }} </option>\r\n                                        </select>\r\n                                        <div class=\"row\" v-for=\"(pay, loop) in expense.accounts\" :key=\"loop\">\r\n\r\n                                            <div class=\"col-md-4\">\r\n                                                <div class=\"form-group\">\r\n                                                    <label class=\"form-label small\">Account</label>\r\n                                                    <Select2 v-model=\"pay.account_pid\" :options=\"paymentDrop\"\r\n                                                        :settings=\"{ width: '100%' }\" placeholder=\"Select Account\" />\r\n                                                     <p v-if=\"errors[`accounts.${loop}.account_pid`]\" class=\"text-danger\">{{ errors[`accounts.${loop}.account_pid`] }} </p>\r\n                                                </div>\r\n                                            </div>\r\n\r\n\r\n                                            <div class=\"col-md-4\">\r\n                                                <div class=\"form-group\">\r\n                                                    <label class=\"form-label small\">Amount</label>\r\n                                                    <input type=\"number\" v-model=\"pay.amount\" step=\".05\"\r\n                                                        class=\"form-control form-control-sm\"\r\n                                                        placeholder=\"Enter Amount\" />\r\n                                                        <p v-if=\"errors[`accounts.${loop}.amount`]\" class=\"text-danger\">{{ errors[`accounts.${loop}.amount`] }} </p>\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"col-md-4\">\r\n                                                <div class=\"form-group\">\r\n                                                    <label class=\"form-label small\">Date</label>\r\n                                                    <div class=\"input-group\">\r\n                                                        <input type=\"date\" v-model=\"pay.date\"\r\n                                                            class=\"form-control form-control-sm\" />\r\n                                                        <button type=\"button\" class=\"btn btn-danger btn-sm\"\r\n                                                            @click=\"removeAccount(loop)\">\r\n                                                            <i class=\"bi bi-patch-minus\"></i> </button>\r\n                                                    </div>\r\n                                                    <p v-if=\"errors[`accounts.${loop}.date`]\" class=\"text-danger\">{{ errors[`accounts.${loop}.date`] }} </p>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                        </div>\r\n\r\n                                        <button type=\"button\" class=\"btn btn-success btn-sm mt-2\" @click=\"addAccount\">\r\n                                            <i class=\"bi bi-plus\"></i> </button>\r\n                                    </fieldset>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <button type=\"button\" class=\"btn btn-primary mt-2\" @click=\"addexpense\">Submit</button>\r\n                        </form>\r\n                    </fieldset>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport store from \"@/store\";\r\nimport { onMounted, ref } from \"vue\";\r\nimport Select2 from 'vue3-select2-component';\r\n\r\nimport { useHelper } from '@/composables/helper';\r\nimport { formatError } from \"@/composables/formatError\";\r\nconst { numberFormat } = useHelper()\r\nconst {transformValidationErrors} = formatError()\r\n\r\nconst expense = ref({\r\n    account_type_pid : '' ,\r\n    payment_account : '' ,\r\n    sub_total : 0 ,\r\n    discount: 0 ,\r\n    date: '' ,\r\n    details: [{\r\n        account_pid : '' ,        \r\n        description :'' ,\r\n        amount :0\r\n    }],\r\n    accounts: [{\r\n        date: '',\r\n        account_pid: '',\r\n        amount: '',\r\n        note: '',\r\n    }]\r\n})\r\n\r\nconst resetAttr = () => {\r\n    expense.value = {\r\n        payment_account: '',\r\n        account_type_pid: '',\r\n        sub_total: 0,\r\n        discount: 0,\r\n        paid: 0,\r\n        details: [{\r\n            account_pid: '',\r\n            description: '',\r\n            amount: 0\r\n        }],\r\n        accounts: [{\r\n            date: '',\r\n\r\n            account_pid: '',\r\n            description: '',\r\n            amount: 0\r\n        }]\r\n    }\r\n}\r\n\r\nconst addProduct = () => {\r\n    expense.value.details.push({\r\n        account_pid: '',\r\n        description: '',\r\n        amount: 0\r\n    })\r\n}\r\n\r\n\r\nconst removeQualification = (i) => {\r\n    let len = expense.value.details.length;\r\n    if (len === 1) {\r\n        store.commit('notify', { message: 'One Item is required to proceed', type: 'warning' })\r\n        return;\r\n    }\r\n    expense.value.details.splice(i, 1);\r\n    subTotal()\r\n}\r\n\r\nconst subTotal = () => {\r\n    expense.value.sub_total = expense.value.details.reduce((n, { amount }) => Number(n) + Number(amount), 0);\r\n}\r\n\r\n\r\nconst addAccount = () => {\r\n    expense.value.accounts.push({\r\n        account_pid: '',\r\n        description: '',\r\n        amount: ''\r\n    })\r\n}\r\n\r\nconst removeAccount = (i) => {\r\n    let len = expense.value.accounts.length;\r\n    if (len === 1) {\r\n        store.commit('notify', { message: 'One Account is required', type: 'warning' })\r\n        return;\r\n    }\r\n    expense.value.accounts.splice(i, 1);\r\n}\r\n\r\nconst addexpense = () => {\r\n    errors.value = []\r\n    store.dispatch('postMethod', { url: '/add-expense', param: expense.value }).then((data) => {\r\n        if (data?.status == 422) {\r\n            errors.value = transformValidationErrors(data.data)\r\n            console.log(errors.value);\r\n            \r\n        } else if (data?.status == 201) {\r\n            resetAttr()\r\n        }\r\n    }).catch(e => {\r\n        console.log(e);\r\n    })\r\n}\r\n\r\nconst errors = ref({})\r\n\r\nconst accountTypeDrop = ref({});\r\nfunction dropDownAccountType() {\r\n    store.dispatch('loadDropdown', 'account-types').then(({ data }) => {\r\n        accountTypeDrop.value = data;\r\n    }).catch(e => {\r\n        console.log(e);\r\n    })\r\n}\r\ndropDownAccountType()\r\n\r\nconst accountDrop = ref({});\r\nfunction dropDownAccount(pid) {\r\n    store.dispatch('loadDropdown', 'type-accounts/' + pid).then(({ data }) => {\r\n        accountDrop.value = data;\r\n    }).catch(e => {\r\n        console.log(e);\r\n    })\r\n}\r\n\r\nconst paymentDrop = ref({});\r\nfunction dropDownPayment(pid) {\r\n    store.dispatch('loadDropdown', 'type-accounts/' + pid).then(({ data }) => {\r\n        paymentDrop.value = data;\r\n    }).catch(e => {\r\n        console.log(e);\r\n    })\r\n}\r\n\r\n\r\ndropDownSuppliers()\r\nconst supplierDrop = ref({});\r\nfunction dropDownSuppliers() {\r\n    store.dispatch('loadDropdown', 'suppliers').then(({ data }) => {\r\n        supplierDrop.value = data;\r\n    }).catch(e => {\r\n        console.log(e);\r\n    })\r\n}\r\n\r\nonMounted(() => {\r\n      let tsk = localStorage.getItem('TVATI_EDIT_ESP') ? JSON.parse(localStorage.getItem('TVATI_EDIT_ESP')) : 'null'\r\n         if (tsk != 'null') {\r\n            dropDownAccount(tsk.account_type_pid)\r\n            dropDownPayment(tsk.payment_account)\r\n            expense.value = tsk;\r\n         }\r\n   \r\n});\r\n\r\n// load-expense\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>","import script from \"./AddExpense.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./AddExpense.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["formatError","transformValidationErrors","response","handleType","errors","key","indexOf","k","trimKey","parts","split","filter","part","isNaN","map","Number","numberFormat","useHelper","expense","ref","account_type_pid","payment_account","sub_total","discount","date","details","account_pid","description","amount","accounts","note","resetAttr","value","paid","addProduct","push","removeQualification","i","len","length","splice","subTotal","store","commit","message","type","reduce","n","addAccount","removeAccount","addexpense","dispatch","url","param","then","data","status","console","log","catch","e","accountTypeDrop","dropDownAccountType","accountDrop","dropDownAccount","pid","paymentDrop","dropDownPayment","dropDownSuppliers","supplierDrop","onMounted","tsk","localStorage","getItem","JSON","parse","__exports__"],"sourceRoot":""}