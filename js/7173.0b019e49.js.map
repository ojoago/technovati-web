{"version":3,"file":"js/7173.0b019e49.js","mappings":"uqBAwCA,MAAM,aAAEA,IAAiBC,EAAAA,EAAAA,KACnBC,GAAWC,EAAAA,EAAAA,IAAI,CAAC,GAEtB,SAASC,IACLC,EAAAA,EAAMC,SAAS,YAAa,CAAEC,IAAK,iBAAkBC,MAAMC,IACnC,KAAhBA,GAAMC,SACNR,EAASS,MAAQF,EAAKA,KAC1B,IACDG,OAAMC,IACLC,QAAQC,IAAIF,EAAE,GAEtB,CACAT,IAEA,MAAMY,EAAaC,IACfZ,EAAAA,EAAMC,SAAS,YAAY,CAACC,IAAI,cAAcU,EAAIC,OAAO,+CAA+CV,MAAMC,IACzF,KAAdA,GAAMC,QACLN,GACJ,IACDQ,OAAMC,IACLC,QAAQC,IAAIF,EAAE,GAChB,E,4tBC1DN,MAAMM,EAAc,EAEpB,Q,sWCsCA,MAAMC,GAASjB,EAAAA,EAAAA,IAAI,CAAC,GAEVkB,GAASlB,EAAAA,EAAAA,IAAI,CACfmB,IAAI,EACJC,QAAQ,EACRC,MAAM,IAEJC,EAAgBA,KAClBL,EAAOT,MAAQ,GACfN,EAAAA,EAAMC,SAAS,aAAc,CAAEC,IAAK,4BAA6BmB,MAAOL,EAAOV,QAASH,MAAMC,IACtE,KAAhBA,GAAMC,SACNU,EAAOT,MAAQF,EAAKA,KACxB,IACDG,OAAMC,IACLC,QAAQC,IAAIF,EAAE,GAChB,EAGV,SAASc,IACLtB,EAAAA,EAAMC,SAAS,YAAa,CAAEC,IAAK,4BAA6BC,MAAMC,IAC9C,KAAhBA,GAAMC,SACNW,EAAOV,MAAQF,EAAKA,KACxB,IACDG,OAAMC,IACLC,QAAQC,IAAIF,EAAE,GAEtB,C,OAEAc,I,mxBCpEA,MAAM,EAAc,EAEpB,Q,sgBC0CA,MAAMC,GAAUzB,EAAAA,EAAAA,IAAI,IACdD,GAAWC,EAAAA,EAAAA,IAAI,CAAC,GAEtB,SAAS0B,IACLxB,EAAAA,EAAMC,SAAS,YAAa,CAAEC,IAAK,uBAAwBC,MAAMC,IACzC,KAAhBA,GAAMC,SACNR,EAASS,MAAQF,EAAKA,KAC1B,IACDG,OAAMC,IACLC,QAAQC,IAAIF,EAAE,GAEtB,CAEA,SAASiB,IAELzB,EAAAA,EAAMC,SAAS,aAAc,CAAEC,IAAK,kBAAmBmB,MAAOE,EAAQjB,QAASH,MAAMC,IAC7D,KAAhBA,GAAMC,QACNI,QAAQC,IAAI,IAChB,GAGR,C,OAEAc,I,usBCnEA,MAAM,EAAc,EAEpB,Q,siDCFA,MAAM,EAAc,EAEpB,O","sources":["webpack://Technovati/./src/components/salary/SalaryComponent.vue","webpack://Technovati/./src/components/salary/SalaryComponent.vue?9687","webpack://Technovati/./src/components/salary/ConfigComponent.vue","webpack://Technovati/./src/components/salary/ConfigComponent.vue?f44d","webpack://Technovati/./src/components/salary/ComputeComponent.vue","webpack://Technovati/./src/components/salary/ComputeComponent.vue?aa5a","webpack://Technovati/./src/views/payroll/ComputeSalaryView.vue"],"sourcesContent":["<template>\r\n    <div>\r\n\r\n        <div class=\"table-responsive\">\r\n            <table class=\"table table-stripped table-hover table-bordered\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>S/N</th>\r\n                        <th>Month</th>\r\n                        <th>Status</th>\r\n                        <th>Basic</th>\r\n                        <th>Allowance</th>\r\n                        <th>Deduction</th>\r\n                        <th> Payment Date</th>\r\n                        <th> <i class=\"bi bi-gear-fill\"></i> </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr v-for=\"(data, loop) in salaries.data\" :key=\"loop\">\r\n                        <td>{{ loop + 1 }}</td>\r\n                        <td>{{ data?.month }}, {{ data?.year }}</td>\r\n                        <td>{{ data?.payment_status }}</td>\r\n                        <td>{{ numberFormat(data?.basic) }} </td>\r\n                        <td>{{ numberFormat(data?.allowance) }}</td>\r\n                        <td>{{ numberFormat(data?.deduction) }}</td>\r\n                        <td>{{ data?.paid_on }}</td>\r\n                        <td> <button v-if=\"data.status==0\" class=\"btn btn-sm btn-primary\"\r\n                                @click=\"paySalary(data.pid)\">Pay</button> </td>\r\n\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport store from \"@/store\";\r\nimport { ref } from \"vue\";\r\nimport { useHelper } from '@/composables/helper';\r\nconst { numberFormat } = useHelper()\r\nconst salaries = ref({})\r\n\r\nfunction loadSalary() {\r\n    store.dispatch('getMethod', { url: '/load-salary' }).then((data) => {\r\n        if (data?.status == 200) {\r\n            salaries.value = data.data;\r\n        }\r\n    }).catch(e => {\r\n        console.log(e);\r\n    })\r\n}\r\nloadSalary()\r\n\r\nconst paySalary = (pid) => {\r\n    store.dispatch('putMethod',{url:'pay-salary/'+pid,prompt:'are you sure, you want to pay this salary?'}).then((data)=>{\r\n        if(data?.status==201){\r\n            loadSalary()\r\n        }\r\n    }).catch(e=>{\r\n        console.log(e);\r\n    })\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>","import script from \"./SalaryComponent.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./SalaryComponent.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n    <div>\r\n        <form id=\"unitForm\">\r\n            <div class=\"row\">\r\n                <div class=\"col-md-6\">\r\n                    <div class=\"form-group\">\r\n                        <label class=\"form-label\">Tax %</label>\r\n                        <input v-model=\"config.tax\" type=\"number\" step=\"0.5\" class=\"form-control form-control-sm\">\r\n                        <p class=\"text-danger \" v-if=\"errors?.tax\">{{ errors?.tax[0] }} </p>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"col-md-6\">\r\n                    <div class=\"form-group\">\r\n                        <label class=\"form-label\">Company Contribution %</label>\r\n                        <input v-model=\"config.company\" type=\"number\" step=\"0.5\" class=\"form-control form-control-sm\">\r\n\r\n                        <p class=\"text-danger \" v-if=\"errors?.company\">{{ errors?.company[0] }}\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <!-- \r\n\r\n                <div class=\"col-md-4\">\r\n                    <div class=\"form-group\">\r\n                        <label class=\"form-label\">Personal Contribution %</label>\r\n                        <input v-model=\"config.staff\" type=\"number\" step=\"0.5\" placeholder=\"e.g 3000.5\"\r\n                            class=\"form-control form-control-sm\">\r\n                        <p class=\"text-danger \" v-if=\"errors?.staff\">{{ errors?.staff[0] }} </p>\r\n                    </div>\r\n                </div> -->\r\n\r\n\r\n            </div>\r\n            <button type=\"button\" class=\"btn btn-success btn-sm mt-2\" @click=\"updatePension\">Update</button>\r\n        </form>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\n    import store from \"@/store\";\r\nimport { ref } from \"vue\";\r\n\r\nconst errors = ref({})\r\n    \r\n    const config = ref({\r\n        tax:0,\r\n        company:0,\r\n        staff:0\r\n    })\r\n    const updatePension = ()=>{\r\n        errors.value = []\r\n        store.dispatch('postMethod', { url: '/update-deduction-percent', param: config.value }).then((data) => {\r\n            if (data?.status == 422) {\r\n                errors.value = data.data\r\n            }\r\n        }).catch(e => {\r\n            console.log(e);\r\n        })\r\n    }\r\n\r\nfunction load() {\r\n    store.dispatch('getMethod', { url: '/load-deduction-percent' }).then((data) => {\r\n        if (data?.status == 200) {\r\n            config.value = data.data;\r\n        }\r\n    }).catch(e => {\r\n        console.log(e);\r\n    })\r\n}\r\n\r\nload()\r\n    // \r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>","import script from \"./ConfigComponent.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ConfigComponent.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n    <div>\r\n        <div class=\"table-responsive\">\r\n            <table class=\"table-hover table-stripped table-bordered table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>SN</th>\r\n                        <th>Staff Id</th>\r\n                        <th>Names </th>\r\n                        <th>Department</th>\r\n                        <th>Basic Salary</th>\r\n                        <th>\r\n                            <i class=\"bi bi-gear-fill mr-1\"></i>\r\n                            <input type=\"checkbox\">\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr v-for=\"(data, loop) in salaries\" :key=\"loop\">\r\n                        <td>{{ loop + 1 }}</td>\r\n                        <td>{{ data.staff_id }}</td>\r\n                        <td>{{ data.fullname }} </td>\r\n                        <td>{{ data.department }}</td>\r\n                        <td>{{ data.amount }}</td>\r\n                        <td>\r\n                            <input v-model=\"checked\" type=\"checkbox\" :value=\"data.pid\">\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n                <tfoot>\r\n                    <tr>\r\n                        <td colspan=\"4\"></td>\r\n                        <td>total </td>\r\n                        <td> <button class=\"btn btn-sm btn-primary\" @click=\"computeSalary\">Compute</button>\r\n                        </td>\r\n                    </tr>\r\n                </tfoot>\r\n            </table>\r\n\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport store from \"@/store\";\r\nimport { ref } from \"vue\";\r\n\r\nconst checked = ref([])\r\nconst salaries = ref({})\r\n\r\nfunction loadStaffSalary() {\r\n    store.dispatch('getMethod', { url: '/load-staff-salary' }).then((data) => {\r\n        if (data?.status == 200) {\r\n            salaries.value = data.data;\r\n        }\r\n    }).catch(e => {\r\n        console.log(e);\r\n    })\r\n}\r\n\r\nfunction computeSalary() {\r\n\r\n    store.dispatch('postMethod', { url: '/compute-salary', param: checked.value }).then((data) => {\r\n        if (data?.status == 201) {\r\n            console.log(123);\r\n        }\r\n        // store.commit('setSpinner', false)\r\n    })\r\n}\r\n\r\nloadStaffSalary()\r\n\r\n\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>","import script from \"./ComputeComponent.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ComputeComponent.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import script from \"./ComputeSalaryView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ComputeSalaryView.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["numberFormat","useHelper","salaries","ref","loadSalary","store","dispatch","url","then","data","status","value","catch","e","console","log","paySalary","pid","prompt","__exports__","errors","config","tax","company","staff","updatePension","param","load","checked","loadStaffSalary","computeSalary"],"sourceRoot":""}