{"version":3,"file":"js/5013.af270a32.js","mappings":"suEAyHMA,EAAK,W,mCACX,MAAMC,GAAYC,EAAAA,EAAAA,KAAI,GAChBC,GAAkBD,EAAAA,EAAAA,KAAI,GAEtBE,GAAcF,EAAAA,EAAAA,KAAI,GAGlBG,EAAaA,KACfJ,EAAUK,OAAQ,EAClBF,EAAYE,OAAQ,EACpBH,EAAgBG,OAAQ,CAAK,EAG3BC,GAAOL,EAAAA,EAAAA,IAAI,CACbM,KAAM,GACNC,YAAa,KAEXC,GAASR,EAAAA,EAAAA,IAAI,CAAC,GAEpB,SAASS,IACLD,EAAOJ,MAAQ,GACfM,EAAAA,EAAMC,SAAS,aAAc,CAAEC,IAAK,eAAgBC,MAAOR,EAAKD,QAAQU,MAAMC,IAC1E,GAAoB,KAAhBA,GAAMC,OACNR,EAAOJ,MAAQW,EAAKA,UAEnB,GAAoB,KAAhBA,GAAMC,OAAe,CAC1B,IAAIC,EAAOC,SAASC,cAAc,aAClCF,EAAKG,QACLC,GACJ,KACDC,OAAMC,IACLC,QAAQC,IAAIF,EAAE,GAGtB,CAEA,MAAMG,EAAYX,IACdV,EAAKD,MAAO,CACRE,KAAKS,EAAKT,KACVC,YAAYQ,EAAKR,YACjBoB,IAAIZ,EAAKY,KAEb1B,EAAgBG,OAAO,CAAI,EAIzBwB,GAAQ5B,EAAAA,EAAAA,IAAI,CAAC,GAKnB,SAASqB,IACLX,EAAAA,EAAMC,SAAS,YAAa,CAAEC,IAAK,gBAAiBE,MAAMC,IAClC,KAAhBA,GAAMC,SACNY,EAAMxB,MAAQW,EAAKA,KACvB,IACDO,OAAMC,IACLC,QAAQC,IAAIF,EAAE,GAEtB,CATAF,IAUA,MAAMQ,GAAW7B,EAAAA,EAAAA,IAAI,CAAC,GACtB,SAAS8B,IACLpB,EAAAA,EAAMC,SAAS,eAAgB,QAAQG,MAAK,EAAGC,WAC3Cc,EAASzB,MAAQW,CAAI,IACtBO,OAAMC,IACLC,QAAQC,IAAIF,GACZQ,MAAM,uBAAuB,GAErC,CACAD,IAGA,MAAME,GAAWhC,EAAAA,EAAAA,IAAI,CAAC,GACtB,SAASiC,IACLvB,EAAAA,EAAMC,SAAS,eAAgB,eAAeG,MAAK,EAAGC,WAClDiB,EAAS5B,MAAQW,CAAI,IACtBO,OAAMC,IACLC,QAAQC,IAAIF,GACZQ,MAAM,uBAAuB,GAErC,C,OACAE,I,0sECvMA,MAAMC,EAAc,EAEpB,O","sources":["webpack://Technovati/./src/views/tools/ToolsView.vue","webpack://Technovati/./src/views/tools/ToolsView.vue?069b"],"sourcesContent":["<template>\r\n    <div>\r\n        <div class=\"container mt-2\">\r\n            <div class=\"card\">\r\n                <div class=\"card-body\">\r\n                    <div class=\"card-header\">Engineering Tools</div>\r\n                    <ul class=\"nav nav-tabs d-flex\" id=\"myTabjustified\" role=\"tablist\">\r\n                        <li class=\"nav-item flex-fill\" role=\"presentation\">\r\n                            <button class=\"nav-link w-100 active\" id=\"worker-tab\" data-bs-toggle=\"tab\"\r\n                                data-bs-target=\"#worker\" type=\"button\" role=\"tab\" aria-controls=\"worker\"\r\n                                aria-selected=\"true\">Tool</button>\r\n                        </li>\r\n                        <li class=\"nav-item flex-fill\" role=\"presentation\">\r\n                            <button class=\"nav-link w-100\" id=\"casual-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#casual\"\r\n                                type=\"button\" role=\"tab\" aria-controls=\"casual\" aria-selected=\"false\">Tools\r\n                                History</button>\r\n                        </li>\r\n\r\n                    </ul>\r\n                    <div class=\"tab-content pt-2\" id=\"myTabjustifiedContent\">\r\n                        <div class=\"tab-pane fade show active\" id=\"worker\" role=\"tabpanel\" aria-labelledby=\"worker-tab\">\r\n\r\n                            <button class=\"btn btn-primary btn-sm m-2\" @click=\"ToggleToolModal=true\">Add New</button>\r\n\r\n                            <div class=\"table-responsive\">\r\n                                <table class=\"table-hover table-stripped table-bordered  table\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>Tool</th>\r\n                                            <th>Description</th>\r\n                                            <th>quantity</th>\r\n                                            <th> <i class=\"bi bi-gear-fill\"></i> </th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        <tr v-for=\"(item, loop) in tools.data\" :key=\"loop\">\r\n                                            <td>{{ item.name }}</td>\r\n                                            <td>{{ item?.description }}</td>\r\n                                            <td>{{ item.quantity }}</td>\r\n                                            <td>\r\n                                                <div class=\"dropdown\">\r\n                                                    <button type=\"button\" class=\"btn btn-primary btn-sm dropdown-toggle\"\r\n                                                        data-bs-toggle=\"dropdown\">\r\n                                                        <i class=\"bi bi-tools\"></i>\r\n                                                    </button>\r\n                                                    <ul class=\"dropdown-menu\">\r\n                                                        <li><a class=\"dropdown-item pointer bg-warning\" @click=\"editTool(item)\">Edit</a></li>\r\n                                                        <li><a class=\"dropdown-item pointer bg-primary\" @click=\"staffDetail(item)\">Add Quantity</a></li>\r\n                                                        <li><a class=\"dropdown-item pointer bg-info\" @click=\"assignWorker(item.pid)\">Assign </a> </li>\r\n                                                    </ul>\r\n                                                </div>\r\n                                            </td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"tab-pane fade\" id=\"casual\" role=\"tabpanel\" aria-labelledby=\"casual-tab\">\r\n                            <fieldset class=\"border rounded-3 p-2 m-1\">\r\n                                <legend class=\"float-none w-auto px-2\">Add Casual Workers</legend>\r\n\r\n                            </fieldset>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <o-modal :isOpen=\"ToggleToolModal\" modal-class=\"modal-xs\" title=\"Add New Tool\" @submit=\"createTool\"\r\n            @modal-close=\"closeModal\">\r\n            <template #content>\r\n                <form id=\"toolForm\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-12\">\r\n                            <label class=\"form-label\">Tool</label>\r\n                            <input type=\"text\" v-model=\"tool.name\" placeholder=\"e.g tape\"\r\n                                class=\"form-control form-control-sm\">\r\n                            <p class=\"text-danger \" v-if=\"errors?.name\">{{ errors?.name[0] }} </p>\r\n                        </div>\r\n                        <div class=\"col-md-12\">\r\n                            <label class=\"form-label\">Description</label>\r\n                            <textarea type=\"text\" v-model=\"tool.description\" placeholder=\"e.g for measuring\"\r\n                                class=\"form-control form-control-sm\"></textarea>\r\n                            <p class=\"text-danger \" v-if=\"errors?.description\">{{ errors?.description[0] }} </p>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </template>\r\n        </o-modal>\r\n\r\n        <o-modal :isOpen=\"assignModal\" :modal-class=\"xs\" title=\"Assign Staff to team\" @submit=\"addTeam\"\r\n            @modal-close=\"closeModal\">\r\n            <template #content>\r\n                <form id=\"assignForm\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-12\">\r\n                            <label class=\"form-label\">Team</label>\r\n                            <Select2 v-model=\"team.team_pid\" :options=\"teamDrop\" />\r\n                            <p class=\"text-danger \" v-if=\"errors?.team_pid\">{{ errors?.team_pid[0] }} </p>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </template>\r\n\r\n        </o-modal>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport Select2 from 'vue3-select2-component';\r\nimport store from \"@/store\";\r\nimport { ref } from \"vue\";\r\n// import ItemRequestView from '@/views/inventory/ItemRequestView.vue';\r\n\r\n// import WorkerForm from \"@/components/forms/casual/WorkerForm.vue\"\r\nimport OModal from \"@/components/OModal.vue\";\r\n\r\n// const user_pid = ref(null);\r\n\r\nconst xs = 'modal-xs';\r\nconst toolModal = ref(false)\r\nconst ToggleToolModal = ref(false)\r\n\r\nconst assignModal = ref(false)\r\n\r\n\r\nconst closeModal = () => {\r\n    toolModal.value = false;\r\n    assignModal.value = false;\r\n    ToggleToolModal.value = false;\r\n};\r\n\r\nconst tool = ref({\r\n    name: '',\r\n    description: '',\r\n})\r\nconst errors = ref({});\r\n\r\nfunction createTool() {\r\n    errors.value = []\r\n    store.dispatch('postMethod', { url: '/create-tool', param: tool.value}).then((data) => {\r\n        if (data?.status == 422) {\r\n            errors.value = data.data\r\n        } \r\n        else if (data?.status == 201) {\r\n            let form = document.querySelector('#toolForm');\r\n            form.reset();\r\n            loadTools()\r\n        }\r\n    }).catch(e => {\r\n        console.log(e);\r\n    })\r\n\r\n}\r\n\r\nconst editTool = (data) => {\r\n    tool.value ={\r\n        name:data.name ,\r\n        description:data.description ,\r\n        pid:data.pid ,\r\n    }\r\n    ToggleToolModal.value= true;\r\n}\r\n\r\n\r\nconst tools = ref({});\r\n\r\n\r\n\r\nloadTools()\r\nfunction loadTools() {\r\n    store.dispatch('getMethod', { url: '/load-tools' }).then((data) => {\r\n        if (data?.status == 200) {\r\n            tools.value = data.data;\r\n        }\r\n    }).catch(e => {\r\n        console.log(e);\r\n    })\r\n}\r\nconst teamDrop = ref({});\r\nfunction dropDownTeam() {\r\n    store.dispatch('loadDropdown', 'team').then(({ data }) => {\r\n        teamDrop.value = data;\r\n    }).catch(e => {\r\n        console.log(e);\r\n        alert('Something Went Wrong')\r\n    })\r\n}\r\ndropDownTeam()\r\n\r\n\r\nconst deptDrop = ref({});\r\nfunction dropdownDept() {\r\n    store.dispatch('loadDropdown', 'departments').then(({ data }) => {\r\n        deptDrop.value = data;\r\n    }).catch(e => {\r\n        console.log(e);\r\n        alert('Something Went Wrong')\r\n    })\r\n}\r\ndropdownDept()\r\n\r\n\r\n\r\n</script>\r\n\r\n<style scoped></style>","import script from \"./ToolsView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ToolsView.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["xs","toolModal","ref","ToggleToolModal","assignModal","closeModal","value","tool","name","description","errors","createTool","store","dispatch","url","param","then","data","status","form","document","querySelector","reset","loadTools","catch","e","console","log","editTool","pid","tools","teamDrop","dropDownTeam","alert","deptDrop","dropdownDept","__exports__"],"sourceRoot":""}