{"version":3,"file":"js/4320.bbe417bb.js","mappings":"+fAGA,MAAMA,EAAc,EAEpB,O,wbCuBA,MAAMC,GAASC,EAAAA,EAAAA,IAAI,CAAC,GAEdC,GAAOD,EAAAA,EAAAA,IAAI,CACbE,KAAM,GACNC,YAAa,KAGXC,EAAYA,KACdH,EAAKI,MAAQ,CACTH,KAAM,GACNC,YAAa,GAChB,EAGL,SAASG,IACLP,EAAOM,MAAQ,GACfE,EAAAA,EAAMC,SAAS,aAAc,CAAEC,IAAK,oBAAqBC,MAAOT,EAAKI,QAASM,MAAMC,IAC5D,KAAhBA,GAAMC,OACNd,EAAOM,MAAQO,EAAKA,KACG,KAAhBA,GAAMC,QACbT,GACJ,GAER,C,yyBChDA,MAAMN,EAAc,EAEpB,O,47DC2HA,MAAMgB,GAAcd,EAAAA,EAAAA,KAAI,GAClBe,GAAYf,EAAAA,EAAAA,KAAI,GAEhBgB,EAAaA,KACfF,EAAYT,OAAQ,EACpBU,EAAUV,OAAQ,EAClBD,IAAW,EAKTa,IAAejB,EAAAA,EAAAA,IAAI,CAAC,GAG1B,SAASkB,GAAiBT,EAAM,mBAC5BF,EAAAA,EAAMC,SAAS,YAAa,CAAEC,IAAKA,IAAOE,MAAMC,IACxB,KAAhBA,GAAMC,SACNI,GAAaZ,MAAQO,EAAKA,KAC9B,GAER,CAPAM,KAUA,MAAMC,IAAMnB,EAAAA,EAAAA,IAAI,CACZE,KAAM,GACNkB,MAAO,GACPjB,YAAa,GACbF,KAAM,GACNoB,aAAc,KAGZjB,GAAYA,KACde,GAAId,MAAQ,CACRH,KAAM,GACNkB,MAAO,GACPjB,YAAa,GACbF,KAAM,GACNoB,aAAc,GACjB,EAGCtB,IAASC,EAAAA,EAAAA,IAAI,CAAC,GACpB,SAASsB,KACLvB,GAAOM,MAAQ,GACfE,EAAAA,EAAMC,SAAS,aAAc,CAAEC,IAAK,mBAAoBC,MAAOS,GAAId,QAASM,MAAMC,IAC1D,KAAhBA,GAAMC,OACNd,GAAOM,MAAQO,EAAKA,KACG,KAAhBA,GAAMC,SACbK,KACAF,IACJ,GAER,CAKA,MAAMO,IAAYvB,EAAAA,EAAAA,IAAI,CAAC,GAEvB,SAASwB,KACLjB,EAAAA,EAAMC,SAAS,eAAgB,aAAaG,MAAK,EAAGC,WAChDW,GAAUlB,MAAQO,CAAI,GAE9B,CACAY,KAEA,MAAMC,IAAQzB,EAAAA,EAAAA,IAAI,CAAC,GAEnB,SAAS0B,KACLnB,EAAAA,EAAMC,SAAS,eAAgB,SAASG,MAAK,EAAGC,WAC5Ca,GAAMpB,MAAQO,CAAI,GAE1B,CACAc,KAGA,MAAMC,GAAgBf,IACjBO,GAAId,MAAQ,CACTH,KAAMU,EAAKV,KACXkB,MAAOR,EAAKQ,MACZjB,YAAaS,EAAKT,YAClBF,KAAMW,EAAKX,MAAM2B,IACjBP,aAAcT,EAAKS,cAAcO,IACjCA,IAAKhB,EAAKgB,KAEdd,EAAYT,OAAQ,CAAI,EAK5B,SAASwB,GAASC,GAETA,EAAKrB,MAAOqB,EAAKC,QAGtBb,GAAiBY,EAAKrB,IAC1B,C,+tGC7NA,MAAMX,GAAc,GAEpB,S","sources":["webpack://Technovati/./src/components/PaginationLinks.vue","webpack://Technovati/./src/components/material/ItemUnitForm.vue","webpack://Technovati/./src/components/material/ItemUnitForm.vue?2114","webpack://Technovati/./src/views/materials/RawMaterialListView.vue","webpack://Technovati/./src/views/materials/RawMaterialListView.vue?b154"],"sourcesContent":["import script from \"./PaginationLinks.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./PaginationLinks.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n    <div>\r\n         <form id=\"uForm\">\r\n            <div class=\"row\">\r\n                <div class=\"col-md-12\">\r\n                    <div class=\"form-group\">\r\n                        <label class=\"form-label\">Name</label>\r\n                        <input type=\"text\" v-model=\"unit.name\" class=\"form-control\" placeholder=\"e.g meter\">\r\n                        <p class=\"text-danger \" v-if=\"errors?.name\">{{ errors?.name[0] }}</p>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-md-12\">\r\n                    <div class=\"form-group\">\r\n                        <label class=\"form-label\">Description</label>\r\n                        <textarea type=\"text\" v-model=\"unit.description\" class=\"form-control\" placeholder=\"e.g this is \"></textarea>\r\n                        <p class=\"text-danger \" v-if=\"errors?.description\">{{ errors?.description[0] }}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <button type=\"button\" class=\"btn btn-success btn-sm mt-2\" @click=\"addItemUnit\">Submit</button>\r\n        </form>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\n\r\nimport store from \"@/store\";\r\nimport { ref } from \"vue\";\r\nconst errors = ref({});\r\n\r\nconst unit = ref({\r\n    name: '',\r\n    description: '',\r\n});\r\n\r\nconst resetAttr = ()=>{\r\n    unit.value = {\r\n        name: '',\r\n        description: '',\r\n    }\r\n}\r\n\r\nfunction addItemUnit() {\r\n    errors.value = []\r\n    store.dispatch('postMethod', { url: '/create-item-unit', param: unit.value }).then((data) => {\r\n        if (data?.status == 422) {\r\n            errors.value = data.data\r\n        } else if (data?.status == 201) {\r\n            resetAttr()\r\n        }\r\n    })\r\n}\r\n\r\n\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>","import script from \"./ItemUnitForm.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ItemUnitForm.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n    <div>\r\n        <div class=\"container mt-2\">\r\n            <div class=\"card\">\r\n                    <div class=\"card-header\">Raw Materials  <button class=\"btn btn-sm btn-success mb-2\"> \r\n                                    <router-link to=\"/raw-material\" class=\"nav-link\"><i class=\"bi bi-record\"></i> <span class=\"nav-name\">Add Quantity  </span>  </router-link>\r\n                                </button></div>\r\n                    <div class=\"card-body\">\r\n                        <button @click=\"toggleModal = true\" class=\"btn btn-sm btn-primary mr-2\">Add New</button> &nbsp;\r\n                        <button @click=\"unitModal = true\" class=\"btn btn-sm btn-primary ml-2\">Add Item Unit</button>\r\n                        <fieldset class=\"border rounded-3 p-2 m-1\">\r\n                            <legend class=\"float-none w-auto px-2\">Lists</legend>\r\n                            <div class=\"table-responsive\">\r\n                                <table class=\"table-hover table-stripped table-bordered table\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>SN</th>\r\n                                            <th>Name</th>\r\n                                            <th>Model</th>\r\n                                            <th>quantity</th>\r\n                                            <!-- <th>Type</th> -->\r\n                                            <!-- <th>Team</th> -->\r\n                                            <th>description</th>\r\n                                            <th>manufacturer</th>\r\n                                            <th> <i class=\"bi bi-gear-fill\"></i> </th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        <tr v-for=\"(data, loop) in rawMaterials.data\" :key=\"loop\">\r\n                                            <td>{{ loop + 1 }}</td>\r\n                                            <td>{{ data.name }}</td>\r\n                                            <td>{{ data.model  }} </td>\r\n                                            <td>{{ data?.quantity?.quantity }} {{ data?.unit?.name }}</td>\r\n                                            <td>{{ data.description  }}</td>\r\n                                            <td>{{ data.manufacturer?.name }}</td>\r\n                                            <td>\r\n                                                <div class=\"dropdown\">\r\n                                                    <button type=\"button\"\r\n                                                        class=\"btn btn-primary btn-sm dropdown-toggle\"\r\n                                                        data-bs-toggle=\"dropdown\">\r\n                                                        <i class=\"bi bi-tools\"></i>\r\n                                                    </button>\r\n                                                    <ul class=\"dropdown-menu\">\r\n                                                        <li @click=\"editMaterial(data)\"><a class=\"dropdown-item pointer\">Edit</a> </li>\r\n                                                        <!-- <li><a class=\"dropdown-item pointer\">details</a> </li> -->\r\n                                                    </ul>\r\n                                                </div>\r\n                                            </td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                                <div class=\"flex justify-center mt-4\">\r\n                                    <nav class=\"relative justify-center rounded-md shadow pagination\">\r\n                                        <pagination-links v-for=\"(link, i) of rawMaterials.links\" :link=\"link\" :key=\"i\"\r\n                                            @next=\"nextPage(link)\"></pagination-links>\r\n                                    </nav>\r\n                                </div>\r\n                            </div>\r\n                        </fieldset>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <o-modal :isOpen=\"toggleModal\" modal-class=\"modal-lg\" title=\"Add New Item\" @submit=\"addMaterial\" @modal-close=\"closeModal\" >\r\n            <template #content>\r\n                 <form >\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-6\">\r\n                            <div class=\"form-group\">\r\n                                <label class=\"form-label\">Name</label>\r\n                                <input type=\"text\" v-model=\"raw.name\" class=\"form-control\" placeholder=\"e.g box\">\r\n                                <p class=\"text-danger \" v-if=\"errors?.name\">{{ errors?.name[0] }}</p>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md-6\">\r\n                            <div class=\"form-group\">\r\n                                <label class=\"form-label\">model</label>\r\n                                <input type=\"text\" v-model=\"raw.model\" class=\"form-control\" placeholder=\"e.g 20121212\">\r\n                                <p class=\"text-danger \" v-if=\"errors?.model\">{{ errors?.model[0] }}</p>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md-12\">\r\n                            <div class=\"form-group\">\r\n                                <label class=\"form-label\">description</label>\r\n                                <textarea type=\"text\" v-model=\"raw.description\" class=\"form-control\" placeholder=\"e.g this is from japan\"></textarea>\r\n                                <p class=\"text-danger \" v-if=\"errors?.description\">{{ errors?.description[0] }}</p>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                            <div class=\"col-md-6\">\r\n                                <div class=\"form-group\">\r\n                                    <label class=\"form-label\">Unit</label>\r\n                                    <Select2 v-model=\"raw.unit\" :options=\"units\" :settings=\"{ width: '100%' }\"  />\r\n                                    <p class=\"text-danger \" v-if=\"errors?.unit\">{{ errors?.unit[0] }}</p>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-6\">\r\n                                <div class=\"form-group\">\r\n                                    <label class=\"form-label\">manufacturer</label>\r\n                                    <Select2 v-model=\"raw.manufacturer\" :options=\"suppliers\" :settings=\"{ width: '100%' }\"  />\r\n                                    <p class=\"text-danger \" v-if=\"errors?.manufacturer\">{{ errors?.manufacturer[0] }}</p>\r\n                                </div>\r\n                            </div>\r\n                    </div>\r\n                </form>\r\n            </template>\r\n             \r\n        </o-modal>\r\n\r\n        <o-modal :isOpen=\"unitModal\" modal-class=\"modal-xs\" title=\"Add Item Unit\" @modal-close=\"closeModal\" >\r\n            <template #content>\r\n                <UnitItemForm/>\r\n            </template>\r\n            <template #footer>\r\n                <div></div>\r\n            </template>\r\n        </o-modal>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport store from \"@/store\";\r\nimport { ref } from \"vue\";\r\nimport PaginationLinks from \"@/components/PaginationLinks.vue\";\r\nimport OModal from \"@/components/OModal.vue\";\r\nimport UnitItemForm from \"@/components/material/ItemUnitForm.vue\"\r\nimport Select2 from 'vue3-select2-component';\r\n\r\n\r\nconst toggleModal = ref(false)\r\nconst unitModal = ref(false)\r\n\r\nconst closeModal = () => {\r\n    toggleModal.value = false;\r\n    unitModal.value = false;\r\n    resetAttr()\r\n};\r\n\r\n\r\n\r\nconst rawMaterials = ref({});\r\n\r\nloadRawMaterials()\r\nfunction loadRawMaterials(url = '/load-materials') {\r\n    store.dispatch('getMethod', { url: url }).then((data) => {\r\n        if (data?.status == 200) {\r\n            rawMaterials.value = data.data;\r\n        }\r\n    })\r\n}\r\n\r\n\r\nconst raw = ref({\r\n    name: '',\r\n    model: '',\r\n    description: '',\r\n    unit: '',\r\n    manufacturer: '',\r\n});\r\n\r\nconst resetAttr = () => {\r\n    raw.value = {\r\n        name: '',\r\n        model: '',\r\n        description: '',\r\n        unit: '',\r\n        manufacturer: '',\r\n    }\r\n}\r\n\r\nconst errors = ref({})\r\nfunction addMaterial() {\r\n    errors.value = []\r\n    store.dispatch('postMethod', { url: '/create-material', param: raw.value }).then((data) => {\r\n        if (data?.status == 422) {\r\n            errors.value = data.data\r\n        } else if (data?.status == 201) {\r\n            loadRawMaterials()\r\n            closeModal()\r\n        }\r\n    })\r\n}\r\n\r\n\r\n\r\n\r\nconst suppliers = ref({});\r\n\r\nfunction dropdownSupplier() {\r\n    store.dispatch('loadDropdown', 'suppliers').then(({ data }) => {\r\n        suppliers.value = data;\r\n    })\r\n}\r\ndropdownSupplier()\r\n\r\nconst units = ref({});\r\n\r\nfunction dropdownUnits() {\r\n    store.dispatch('loadDropdown', 'units').then(({ data }) => {\r\n        units.value = data;\r\n    })\r\n}\r\ndropdownUnits()\r\n\r\n\r\nconst editMaterial = (data) => {\r\n     raw.value = {\r\n        name: data.name,\r\n        model: data.model,\r\n        description: data.description,\r\n        unit: data.unit?.pid,\r\n        manufacturer: data.manufacturer?.pid,\r\n        pid: data.pid,\r\n    }\r\n    toggleModal.value = true\r\n}\r\n\r\n\r\n\r\nfunction nextPage(link) {\r\n    \r\n    if (!link.url || link.active) {\r\n        return;\r\n    }\r\n    loadRawMaterials(link.url)\r\n}\r\n\r\n</script>\r\n\r\n<style scoped></style>","import script from \"./RawMaterialListView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./RawMaterialListView.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["__exports__","errors","ref","unit","name","description","resetAttr","value","addItemUnit","store","dispatch","url","param","then","data","status","toggleModal","unitModal","closeModal","rawMaterials","loadRawMaterials","raw","model","manufacturer","addMaterial","suppliers","dropdownSupplier","units","dropdownUnits","editMaterial","pid","nextPage","link","active"],"sourceRoot":""}