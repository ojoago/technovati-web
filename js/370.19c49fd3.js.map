{"version":3,"file":"js/370.19c49fd3.js","mappings":"y6BAwEA,MAAMA,GAASC,EAAAA,EAAAA,MACTC,GAAWC,EAAAA,EAAAA,IAAI,MACrBD,EAASE,MAAQC,EAAAA,GAAOC,OAAOC,MAAMC,MAAMC,IAC3C,MAAMC,GAAOP,EAAAA,EAAAA,IAAI,CAAC,GAGZQ,EAAeA,KACjBN,EAAAA,EAAMO,SAAS,YAAa,CAAEC,IAAK,kCAAoCH,EAAKN,OAAOK,IAAKK,OAAQ,2GAA4GC,MAAMP,IAC1L,KAAhBA,GAAMQ,QACNC,EAAYP,EAAKN,OAAOK,IAE5B,IACDS,OAAMC,IACLC,QAAQC,IAAIF,EAAE,GAChB,EAGAG,EAAeA,KACjBjB,EAAAA,EAAMO,SAAS,YAAa,CAAEC,IAAK,+BAAiCH,EAAKN,OAAOK,IAAKK,OAAQ,4BAA6BC,MAAMP,IACxG,KAAhBA,GAAMQ,QACNC,EAAYP,EAAKN,OAAOK,IAE5B,IACDS,OAAMC,IACLC,QAAQC,IAAIF,EAAE,GAChB,EAIN,SAASF,EAAYR,GACjBJ,EAAAA,EAAMO,SAAS,YAAa,CAAEC,IAAK,8BAA8BJ,IAAOM,MAAMP,IAC1EY,QAAQC,IAAIb,GACQ,KAAhBA,GAAMQ,SAENN,EAAKN,MAAQI,GAAMA,KACvB,IACDU,OAAMC,IACLC,QAAQC,IAAIF,EAAE,GAEtB,CAaAI,eAAeC,UACLxB,EAAOyB,SACjB,C,OAbAC,EAAAA,EAAAA,KAAU,KACNhB,EAAKN,MAAQuB,aAAaC,QAAQ,2BAA6BC,KAAKC,MAAMH,aAAaC,QAAQ,4BAA8B,OAC7HR,QAAQC,IAAIX,EAAKN,OACC,QAAdM,EAAKN,MACLJ,EAAO+B,KAAK,CAAEC,KAAM,iCACIC,GAAjBvB,EAAKN,MAAMM,MAClBO,EAAYP,EAAKN,MAAM8B,aAE3BV,GAAmB,I,oyCCtHvB,MAAMW,EAAc,EAEpB,O","sources":["webpack://Technovati/./src/views/materials/RawMaterialRequestDetails.vue","webpack://Technovati/./src/views/materials/RawMaterialRequestDetails.vue?d6a2"],"sourcesContent":["<template>\r\n    <div>\r\n        <div class=\"container mt-2\">\r\n            <div class=\"card\">\r\n                <div class=\"card-header\">Raw Material Request Details</div>\r\n\r\n                <div class=\"card-body\">\r\n                    <div class=\"table-responsive\">\r\n                        <table class=\"table-hover table-stripped table-bordered table\">\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td colspan=\"2\">{{ item?.note }}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <!-- <td>{{ item.requested_by?.username }}</td> -->\r\n                                    <th>Item Count </th>\r\n                                    <td>{{ item?.item_count }}</td>\r\n\r\n                                </tr>\r\n                                <tr>\r\n                                    <th>Receiver </th>\r\n                                    <td>{{ item?.receiver?.username ?? item?.user?.username }}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th>Date </th>\r\n                                    <td>{{ item?.request_time }} <b>Status: {{ item?.request_status }} </b> </td>\r\n                                </tr>\r\n\r\n                            </tbody>\r\n                        </table>\r\n\r\n                        <table class=\"table-hover table-stripped table-bordered table\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>SN</th>\r\n                                    <th>Item Name</th>\r\n                                    <th>Model</th>\r\n                                    <th>Quantity Requested</th>\r\n                                    <th>Quantity Supplied</th>\r\n                                    <th>Quantity Returned</th>\r\n\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr v-for=\"(data, loop) in item.item\" :key=\"loop\">\r\n                                    <td>{{ loop + 1 }}</td>\r\n                                    <td>{{ data.name }}</td>\r\n                                    <td>{{ data.model }}</td>\r\n                                    <td>{{ data.quantity_requested }}</td>\r\n                                    <td>{{ data.quantity_supplied }}</td>\r\n                                    <td>{{ data.quantity_returned }}</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n\r\n                    </div>\r\n\r\n                    <button class=\"btn btn-primary btn-sm\" v-if=\"item?.request_by == user_pid && item.status == 1\"\r\n                        @click=\"confirmItems\">Confirm</button>\r\n                    <button class=\"btn btn-primary btn-sm\" v-if=\"item?.request_by != user_pid && item.status == 3\"\r\n                        @click=\"closeRequest\">Confirm Returned Items</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</template>\r\n\r\n<script setup>\r\nimport store from \"@/store\";\r\nimport { onMounted, ref } from \"vue\";\r\nimport {  useRouter } from 'vue-router';\r\nconst router = useRouter()\r\nconst user_pid = ref(null)\r\nuser_pid.value = store?.state?.user?.data?.pid;\r\nconst item = ref({});\r\n// const requests = ref({});\r\n\r\nconst confirmItems = () => {\r\n    store.dispatch('putMethod', { url: '/confirm-raw-material-received/' + item.value?.pid, prompt: 'by clicking ok you accept that quantity indicated on the app tallies with quantity received phisycally' }).then((data) => {\r\n        if (data?.status == 201) {\r\n            loadRequest(item.value?.pid)\r\n            // requests.value = data.data;\r\n        }\r\n    }).catch(e => {\r\n        console.log(e);\r\n    })\r\n}\r\n\r\nconst closeRequest = () => {\r\n    store.dispatch('putMethod', { url: '/close-raw-material-request/' + item.value?.pid, prompt: 'Mark Status Completed ?' }).then((data) => {\r\n        if (data?.status == 201) {\r\n            loadRequest(item.value?.pid)\r\n            // requests.value = data.data;\r\n        }\r\n    }).catch(e => {\r\n        console.log(e);\r\n    })\r\n}\r\n\r\n\r\nfunction loadRequest(pid) {\r\n    store.dispatch('getMethod', { url: '/load-raw-material-receipt/'+pid }).then((data) => {\r\n        console.log(data);\r\n        if (data?.status == 200) {\r\n            \r\n            item.value = data?.data;\r\n        }\r\n    }).catch(e => {\r\n        console.log(e);\r\n    })\r\n}\r\n\r\nonMounted(() => {\r\n    item.value = localStorage.getItem('TVATI_RAW_MAT_RQ_DETAIL') ? JSON.parse(localStorage.getItem('TVATI_RAW_MAT_RQ_DETAIL')) : 'null'\r\n    console.log(item.value);\r\n    if (item.value == 'null') {\r\n        router.push({ path: 'my-raw-material-request'})\r\n    } else if (item.value.item==undefined){\r\n        loadRequest(item.value.request_pid)\r\n    }\r\n    getUrlQueryParams()\r\n});\r\n\r\nasync function getUrlQueryParams() {\r\n    await router.isReady()\r\n}\r\n\r\n</script>\r\n\r\n<style scoped></style>","import script from \"./RawMaterialRequestDetails.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./RawMaterialRequestDetails.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["router","useRouter","user_pid","ref","value","store","state","user","data","pid","item","confirmItems","dispatch","url","prompt","then","status","loadRequest","catch","e","console","log","closeRequest","async","getUrlQueryParams","isReady","onMounted","localStorage","getItem","JSON","parse","push","path","undefined","request_pid","__exports__"],"sourceRoot":""}