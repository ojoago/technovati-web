{"version":3,"file":"js/1943.c2d2a862.js","mappings":"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","sources":["webpack://Technovati/../src/lib/google-charts-loader.ts","webpack://Technovati/../src/utils.ts","webpack://Technovati/../src/lib/debounce.ts","webpack://Technovati/../src/components/GChart.ts","webpack://Technovati/../src/index.ts","webpack://Technovati/./src/components/CardComponent.vue","webpack://Technovati/./src/components/ChartComponent.vue","webpack://Technovati/./src/components/shift/AttendanceComponent.vue","webpack://Technovati/./src/components/shift/AttendanceComponent.vue?c29c","webpack://Technovati/./src/views/dashboard/EngineerDashboard.vue","webpack://Technovati/./src/views/dashboard/EngineerDashboard.vue?f926"],"sourcesContent":["/**\n * Usage:\n * import { loadGoogleCharts } from 'vue-google-charts'\n *\n * loadGoogleCharts('current', { packages: ['corechart', 'map'] })\n *  .then(google => {\n *    const chart = new google.visualization.Map ...\n *  })\n */\n\nimport type {\n  GoogleViz,\n  GoogleChartLoader,\n  GoogleChartVersion,\n  GoogleChartLoaderOptions,\n} from '../types';\n\nconst chartsScriptUrl = 'https://www.gstatic.com/charts/loader.js';\n\nlet chartsLoaderPromise: null | Promise<GoogleChartLoader> = null;\n\nconst loadedPackages = new Map();\n\nexport function getChartsLoader(): Promise<GoogleChartLoader> {\n  // If already included in the page:\n  if (window.google !== undefined) {\n    return Promise.resolve(window.google.charts);\n  }\n\n  if (chartsLoaderPromise === null) {\n    chartsLoaderPromise = new Promise(resolve => {\n      // Find script tag with same src in DOM.\n      const foundScript = document.querySelector<HTMLScriptElement>(\n        `script[src=\"${chartsScriptUrl}\"]`\n      );\n\n      // Create or get existed tag.\n      const script = foundScript || document.createElement('script');\n\n      // Set src if no script was found.\n      if (!foundScript) {\n        script.src = chartsScriptUrl;\n        script.type = 'text/javascript';\n\n        document.head.append(script);\n      }\n\n      script.onload = () => {\n        if (window.google !== undefined) {\n          resolve(window.google.charts);\n        }\n      };\n    });\n  }\n\n  return chartsLoaderPromise;\n}\n\n/**\n * Function to load Google Charts JS API.\n * @param version - Chart version to load.\n * @param packages - Packages to load.\n * @param language - Languages to load.\n * @param mapsApiKey - Google Maps api key.\n * @returns\n */\nexport async function loadGoogleCharts(\n  version: GoogleChartVersion = 'current',\n  {\n    packages = ['corechart', 'controls'],\n    language = 'en',\n    mapsApiKey,\n  }: GoogleChartLoaderOptions\n): Promise<GoogleViz | undefined> {\n  const loader = await getChartsLoader();\n\n  const settingsKey = `${version}_${packages.join('_')}_${language}`;\n\n  if (loadedPackages.has(settingsKey)) return loadedPackages.get(settingsKey);\n\n  const loaderPromise: Promise<GoogleViz | undefined> = new Promise(resolve => {\n    loader.load(version, {\n      packages,\n      language,\n      mapsApiKey,\n    });\n\n    loader.setOnLoadCallback(() => resolve(window.google));\n  });\n\n  loadedPackages.set(settingsKey, loaderPromise);\n\n  return loaderPromise;\n}\n","import {\n  GoogleChartWrapper,\n  GoogleChartWrapperChartType,\n  GoogleDataTable,\n  GoogleDataView,\n  GoogleViz,\n  GoogleVizEventName,\n  GoogleVizEvents,\n} from './types';\n\nexport interface ICreateChartFunction {\n  (\n    el: HTMLElement,\n    google: GoogleViz,\n    type: GoogleChartWrapperChartType\n  ): GoogleChartWrapper;\n}\n\nexport function getValidChartData(\n  chartsLib: null | GoogleViz,\n  data: unknown[][] | GoogleDataTable | Record<string, any> | null,\n  isFirstRowLabels?: boolean\n): GoogleDataTable | GoogleDataView | null {\n  if (chartsLib !== null && data instanceof chartsLib.visualization.DataTable) {\n    return data;\n  }\n\n  if (chartsLib !== null && data instanceof chartsLib.visualization.DataView) {\n    return data;\n  }\n\n  if (chartsLib !== null && Array.isArray(data)) {\n    return chartsLib.visualization.arrayToDataTable(data, isFirstRowLabels);\n  }\n\n  if (chartsLib !== null && data !== null && typeof data === 'object') {\n    return new chartsLib.visualization.DataTable(data);\n  }\n\n  return null;\n}\n\nexport function createChartObject(\n  chartsLib: GoogleViz | null,\n  chartObject: GoogleChartWrapper | null,\n  chartEl: HTMLElement | null,\n  chartType: GoogleChartWrapperChartType,\n  chartEvents: GoogleVizEvents | null,\n  createChartFunction?: ICreateChartFunction\n): GoogleChartWrapper | null {\n  const createChart: ICreateChartFunction = (\n    el: HTMLElement,\n    google: GoogleViz,\n    type: GoogleChartWrapperChartType\n  ): GoogleChartWrapper => {\n    if (type === undefined) {\n      throw new Error('please, provide chart type property');\n    }\n\n    return new google.visualization[type](el);\n  };\n\n  if (chartsLib === null) {\n    throw new Error('please, provide charts lib property');\n  }\n\n  if (chartEl === null) {\n    throw new Error('please, provide chart element property');\n  }\n\n  const fn = createChartFunction || createChart;\n\n  chartObject = fn(chartEl, chartsLib, chartType);\n\n  attachListeners(chartsLib, chartObject, chartEvents);\n\n  return chartObject;\n}\n\nfunction attachListeners(\n  chartsLib: null | GoogleViz,\n  chartObject: GoogleChartWrapper | null,\n  chartEvents: GoogleVizEvents | null\n): void {\n  if (chartEvents === null) {\n    return;\n  }\n\n  for (const [event, listener] of Object.entries(chartEvents)) {\n    if (chartsLib !== null && chartObject !== null) {\n      chartsLib.visualization.events.addListener(\n        chartObject,\n        event as GoogleVizEventName,\n        listener as (chartWrapper: GoogleChartWrapper) => any\n      );\n    }\n  }\n}\n","export interface DebouncedFunction<\n  Args extends any[],\n  F extends (...args: Args) => any\n> {\n  (this: ThisParameterType<F>, ...args: Args & Parameters<F>): void;\n}\n\nexport function debounce<Args extends any[], F extends (...args: Args) => any>(\n  func: F,\n  waitMilliseconds = 50\n): DebouncedFunction<Args, F> {\n  let timeoutId: ReturnType<typeof setTimeout> | undefined;\n  function nextInvokeTimeout() {\n    return waitMilliseconds;\n  }\n\n  const debouncedFunction = function (\n    this: ThisParameterType<F>,\n    ...args: Parameters<F>\n  ) {\n    const context = this;\n\n    const invokeFunction = function () {\n      timeoutId = undefined;\n\n      func.apply(context, args);\n    };\n\n    if (timeoutId !== undefined) {\n      clearTimeout(timeoutId);\n    }\n\n    timeoutId = setTimeout(invokeFunction, nextInvokeTimeout());\n  };\n\n  return debouncedFunction;\n}\n","import {\n  defineComponent,\n  ref,\n  h,\n  onMounted,\n  onBeforeUnmount,\n  watch,\n  PropType,\n} from 'vue';\n\nimport {\n  GoogleViz,\n  GoogleChartWrapper,\n  GoogleChartWrapperChartType,\n  GoogleChartOptions,\n  GoogleChartVersion,\n  GoogleChartLoaderOptions,\n  GoogleVizEvents,\n  GoogleDataTable,\n} from '../types';\n\nimport {\n  createChartObject,\n  getValidChartData,\n  ICreateChartFunction,\n} from '../utils';\n\nimport { loadGoogleCharts } from '../lib/google-charts-loader';\nimport { debounce } from '../lib/debounce';\n\nlet chartsLib: null | GoogleViz = null;\n\nexport const GChart = defineComponent({\n  name: 'GChart',\n  props: {\n    type: {\n      type: String as PropType<GoogleChartWrapperChartType>,\n      required: true,\n    },\n    data: {\n      type: [Array, Object, null] as PropType<\n        unknown[][] | GoogleDataTable | Record<string, any> | null\n      >,\n      default: () => [],\n    },\n    isFirstRowLabels: {\n      type: Boolean,\n      default: false,\n    },\n    options: {\n      type: Object as PropType<GoogleChartOptions>,\n      default: () => ({}),\n    },\n    version: {\n      type: String as PropType<GoogleChartVersion>,\n      default: 'current',\n    },\n    settings: {\n      type: Object as PropType<GoogleChartLoaderOptions>,\n      default: () => ({\n        packages: ['corechart', 'table'],\n      }),\n    },\n    events: {\n      type: Object as PropType<GoogleVizEvents | null>,\n      default: null,\n    },\n    createChart: {\n      type: Function as PropType<ICreateChartFunction>,\n      default: undefined,\n    },\n    resizeDebounce: {\n      type: Number,\n      default: 200,\n    },\n  },\n  setup(props, { emit }) {\n    const chartObject = ref<GoogleChartWrapper | null>(null);\n    const chartEl = ref<HTMLElement | null>(null);\n\n    function drawChart(): void {\n      if (chartsLib === null || chartObject.value === null) {\n        return;\n      }\n\n      const data = getValidChartData(\n        chartsLib,\n        props.data,\n        props.isFirstRowLabels\n      );\n      if (data !== null) {\n        chartObject.value?.draw(data, props.options);\n      }\n    }\n\n    watch(\n      () => props.data,\n      () => drawChart(),\n      { deep: true }\n    );\n\n    watch(\n      () => props.options,\n      () => drawChart(),\n      { deep: true }\n    );\n\n    watch(\n      () => props.type,\n      () => {\n        chartObject.value = createChartObject(\n          chartsLib,\n          chartObject.value,\n          chartEl.value,\n          props.type,\n          props.events,\n          props.createChart\n        );\n\n        drawChart();\n      }\n    );\n\n    onMounted(() => {\n      loadGoogleCharts(props.version, props.settings).then(api => {\n        if (api !== undefined) {\n          chartsLib = api;\n\n          chartObject.value = createChartObject(\n            chartsLib,\n            chartObject.value,\n            chartEl.value,\n            props.type,\n            props.events,\n            props.createChart\n          );\n\n          emit('ready', chartObject.value, api);\n\n          drawChart();\n        }\n      });\n\n      if (props.resizeDebounce > 0) {\n        window.addEventListener(\n          'resize',\n          debounce(drawChart, props.resizeDebounce) as EventListener\n        );\n      }\n    });\n\n    onBeforeUnmount(() => {\n      if (\n        chartObject.value !== null &&\n        typeof chartObject.value.clearChart === 'function'\n      ) {\n        chartObject.value.clearChart();\n      }\n\n      if (props.resizeDebounce > 0) {\n        window.removeEventListener(\n          'resize',\n          debounce(drawChart, props.resizeDebounce) as EventListener\n        );\n      }\n    });\n\n    return () => h('div', { ref: chartEl }, []);\n  },\n});\n","import { createApp } from 'vue';\n\nimport { loadGoogleCharts } from './lib/google-charts-loader';\nimport { GChart } from './components/GChart';\n\nconst app = createApp({});\n\n// Install the components\nexport function install() {\n  app.component('GChart', GChart);\n}\n\n// Expose the components\nexport { loadGoogleCharts, GChart };\n\n/* -- Plugin definition & Auto-install -- */\n/* You shouldn't have to modify the code below */\n\n// Plugin\nconst plugin = {\n  version: process.env.VERSION,\n  install,\n};\n\nexport default plugin;\n\n// Auto-install\nlet GlobalVue = null;\nif (typeof window !== 'undefined') {\n  GlobalVue = window.Vue;\n}\n\nif (GlobalVue !== null && GlobalVue !== undefined) {\n  app.use(plugin);\n}\n","import script from \"./CardComponent.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./CardComponent.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./CardComponent.vue?vue&type=style&index=0&id=30586156&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-30586156\"]])\n\nexport default __exports__","import script from \"./ChartComponent.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ChartComponent.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n    <div>\r\n        <div class=\"attendance-card shadow\">\r\n             <h5 class=\"card-title h6 text-center\">{{ date }} <span>| {{ time }}</span></h5>\r\n             <div class=\"col-outer\">\r\n                <div class=\"col-inner\">\r\n                    Time in\r\n                    <hr>\r\n                    {{timeIn}}\r\n                </div>\r\n                <div class=\"col-inner\">\r\n                    time out\r\n                    <hr>\r\n                    {{timeOut}}\r\n                </div>\r\n             </div>\r\n             <button @click=\"startCamera\" v-if=\"clockBtn == false\" class=\"btn btn-sm btn-primary actionBtn\">Clock In</button>\r\n             <button @click=\"clockOut\" v-if=\"clockBtn== true\" class=\"btn btn-sm btn-danger actionBtn\">Clock Out</button>\r\n\r\n        </div>\r\n\r\n        <o-modal  :isOpen=\"toggleModal\" modal-class=\"modal-sm\" title=\"Take Attendance\" @modal-close=\"closeModal\">\r\n            <template #content>\r\n                <center><button @click=\"initCamera\" v-if=\"!stopStream\" class=\"btn btn-sm btn-success\">Retake</button></center>\r\n                <div class=\"container text-center\" v-if=\"startStream\">\r\n                    <video ref=\"video\" width=\"250\" v-if=\"stopStream\" height=\"250\" autoplay></video>\r\n                    <center><button @click=\"captureImage\" v-if=\"stopStream\" class=\"text-center btn btn-sm btn-success\">CAPTURE</button></center>\r\n                    <canvas ref=\"canvas\" width=\"250\" height=\"250\" style=\"display: none;\"></canvas>\r\n                    <img v-if=\"capturedImage\" :src=\"capturedImage\" alt=\"Captured Image\" />\r\n\r\n                    <!-- <p v-if=\"coordinates\">Coordinates: {{ coordinates.latitude }}, {{ coordinates.longitude }}</p>\r\n                    <p v-if=\"locationError\">{{ locationError }}</p> -->\r\n                </div>\r\n            </template>\r\n            <template #footer><div></div></template>\r\n        </o-modal>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport store from '@/store';\r\nimport OModal from '@/components/OModal.vue';\r\n\r\nimport { ref, onMounted } from 'vue'\r\nconst toggleModal = ref(false)\r\n\r\nconst date = ref(null);\r\ndate.value = new Date().toDateString();\r\nconst time = ref()\r\nfunction timer() {\r\n    time.value = new Date().toLocaleTimeString();\r\n}\r\nsetInterval(() => timer(), 1000)\r\nconst timeIn = ref('--:--')\r\nconst timeOut = ref('--:--')\r\nconst clockBtn = ref(null)\r\nconst closeModal = () => {\r\n    toggleModal.value = false;\r\n    stopCamera()\r\n};\r\nconst startCamera = () => {\r\n    toggleModal.value = true;\r\n    initCamera()\r\n};\r\nconst video = ref(null);\r\nconst canvas = ref(null);\r\nconst capturedImage = ref(null);\r\nconst startStream = ref(false);\r\nconst stopStream = ref(true);\r\nlet stream = null;\r\nconst attendance = ref({})\r\nconst initCamera = async () => {\r\n    try {\r\n        capturedImage.value = null\r\n        startStream.value = true\r\n        stopStream.value = true\r\n        stream = await navigator.mediaDevices.getUserMedia({ video: true });\r\n        video.value.srcObject = stream;\r\n    } catch (error) {\r\n        console.error('Error accessing webcam:', error);\r\n    }\r\n}\r\nconst captureImage = async () => {\r\n    platform();\r\n    agent();\r\n    const context = canvas.value.getContext('2d');\r\n    context.drawImage(video.value, 0, 0, canvas.value.width, canvas.value.height);\r\n    stopCamera()\r\n    // Convert the canvas image to a data URL\r\n    capturedImage.value = canvas.value.toDataURL('image/png');\r\n    attendance.value.image = capturedImage;\r\n    clockIn()\r\n};\r\n\r\n// Initialize the webcam when the component is mounted\r\n// initCamera();\r\n\r\nconst platform = () => {\r\n    const platform = navigator.platform;\r\n    let pf;\r\n    if (platform.toLowerCase().includes('win')) {\r\n        pf = 'Windows';\r\n    } else if (platform.toLowerCase().includes('mac')) {\r\n        pf = 'macOS';\r\n    } else if (platform.toLowerCase().includes('linux')) {\r\n        pf = 'Linux';\r\n    } else {\r\n        pf = 'Unknown OS';\r\n    }\r\n    attendance.value.platform = pf\r\n}\r\n\r\nconst agent = () => {\r\n    const userAgent = navigator.userAgent;\r\n    let brow;\r\n    if (userAgent.includes('Chrome')) {\r\n        brow = 'Google Chrome';\r\n    } else if (userAgent.includes('Firefox')) {\r\n        brow = 'Mozilla Firefox';\r\n    } else if (userAgent.includes('Safari')) {\r\n        brow = 'Apple Safari';\r\n    } else if (userAgent.includes('Edge')) {\r\n        brow = 'Microsoft Edge';\r\n    } else if (userAgent.includes('Opera') || userAgent.includes('OPR/')) {\r\n        brow = 'Opera';\r\n    } else if (userAgent.includes('Brave')) {\r\n        brow = 'Brave';\r\n    } else {\r\n        brow = 'Unknown Browser';\r\n    }\r\n    attendance.value.browser = brow\r\n}\r\n\r\n\r\n\r\nconst stopCamera = () => {\r\n    if (stream) {\r\n        stream.getTracks().forEach(track => track.stop());\r\n    }\r\n    stopStream.value = false\r\n}\r\n\r\n// coordinates\r\nconst coordinates = ref(null);\r\nconst locationError = ref(null);\r\n\r\nonMounted(() => {\r\n\r\n    getLocation()\r\n})\r\n\r\nconst getLocation = () => {\r\n    if (navigator.geolocation) {\r\n        navigator.geolocation.getCurrentPosition(\r\n            (position) => {\r\n                coordinates.value = {\r\n                    latitude: position.coords.latitude,\r\n                    longitude: position.coords.longitude,\r\n                    accuracy: position.coords.accuracy,\r\n                };\r\n                // coordinates.value = position.coords\r\n                attendance.value.coordinates = coordinates\r\n                console.log(position);\r\n            },\r\n            (error) => {\r\n                locationError.value = `Error getting location: ${error.message}`;\r\n                attendance.value.coordinates = null;\r\n            }, { enableHighAccuracy: true }\r\n        );\r\n    } else {\r\n        attendance.value.coordinates = null;\r\n        locationError.value = 'Geolocation is not supported by your browser.';\r\n    }\r\n};\r\n\r\n// function getLocationName(lat, lng) {\r\n    \r\n//     // Replace 'YOUR_API_KEY' with your Google Maps API key\r\n//     const apiKey = 'YOUR_API_KEY';\r\n//     const apiUrl = `https://maps.googleapis.com/maps/api/geocode/json?latlng=${lat},${lng}&key=${apiKey}`;\r\n//     return apiUrl\r\n//     // fetch(apiUrl)\r\n//     //     .then(response => response.json())\r\n//     //     .then(data => {\r\n//     //         const locationName = data.results[0].formatted_address;\r\n//     //         document.getElementById('locationName').textContent = `Location Name: ${locationName}`;\r\n//     //     })\r\n//     //     .catch(error => {\r\n//     //         console.log('Error fetching location data:', error);\r\n//     //     });\r\n// }\r\n\r\n// // Example coordinates (replace with your actual coordinates)\r\n// const latitude = 37.7749;\r\n// const longitude = -122.4194;\r\n\r\n// getLocationName(latitude, longitude);\r\n\r\n\r\nfunction clockIn() {\r\n    store.dispatch('postMethod', { url: '/clock-in', param: attendance.value }).then((data) => {\r\n        if (data?.status == 201) {\r\n            clockBtn.value = true;\r\n            timeIn.value = data?.data?.time_in;\r\n            toggleModal.value = false;\r\n        }\r\n    });\r\n}\r\n\r\n\r\nconst checkedInToday = () => {\r\n//last-check-in\r\n    store.dispatch('getMethod', { url: '/last-check-in' }).then((data) => {\r\n        if (data?.status == 200) {\r\n            clock(data?.data)\r\n        }\r\n    });\r\n}\r\n onMounted(()=>{\r\n    checkedInToday()\r\n })\r\n\r\n\r\nconst clockOut = () => {\r\n    store.dispatch('putMethod', { url: '/clock-out',prompt:\"are you sure you want to clock out?\" }).then((data) => {\r\n        if (data?.status == 201) {\r\n            clock(data?.data)\r\n        }\r\n    });\r\n}\r\nconst clock = (data) => {\r\n    if (data == null) {\r\n        clockBtn.value = false;\r\n    } else {\r\n        timeIn.value = data?.time_in;\r\n        clockBtn.value = true;\r\n        if (data.time_out != null) {\r\n            timeOut.value = data?.time_out;\r\n            clockBtn.value = null;\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n</script>\r\n\r\n<style scoped>\r\n    .attendance-card{\r\n        max-width: 100%;\r\n        padding: 5px;\r\n        background-color: #f1f1f1;\r\n        /* box-shadow: #f1f1f1; */\r\n       /* box-shadow: inset 5em 1em #646363; */\r\n    }\r\n    .col-outer{\r\n        display: flex;\r\n        justify-content: space-between;\r\n        padding: 5px;\r\n        text-transform: uppercase;\r\n    }\r\n    .actionBtn{\r\n        width: 100%;\r\n    }\r\n</style>","import script from \"./AttendanceComponent.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./AttendanceComponent.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./AttendanceComponent.vue?vue&type=style&index=0&id=4b9f5ed4&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-4b9f5ed4\"]])\n\nexport default __exports__","<template>\r\n    <div>\r\n        <div class=\"container mt-2\">\r\n            \r\n        <div class=\"card\">\r\n            <div class=\"card-header\">\r\n                 <h5 class=\"card-title\">Engineer Dashboard </h5>\r\n\r\n            </div>\r\n            <div class=\"card-body\">\r\n            <div class=\"row\">\r\n                <div class=\"col-md-4\">\r\n                    <AttendanceComponent />\r\n                </div>\r\n                <div class=\"col-md-8\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-4\">\r\n                            <Card title=\"Number of Team\" :count=\"assembling.teams\"  icon=\"bi-hash\" />\r\n                        </div>\r\n                        <div class=\"col-md-4\">\r\n                            <Card title=\"Full Time Staff\" :count=\"staff.total_staff\"  icon=\"bi-hash\" />\r\n                        </div>\r\n                        <div class=\"col-md-4\">\r\n                            <Card title=\"Casual Staff\" :count=\"staff.casual_staff\"  icon=\"bi-hash\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n            <div class=\"row\">\r\n                <div class=\"col-md-5\">\r\n                    <Chart :length=\"pieChart.data.length\" chart=\"PieChart\" :data=\"pieChart.data\" :options=\"pieChart.options\" />\r\n                     <!-- <GChart v-if=\"pieChart.data.length> 1\" type=\"PieChart\" :data=\"pieChart.data\"\r\n                        :options=\"pieChart.options\" />\r\n                        <span v-else> {{ pieChart.options.title }}, No Data loaded</span> -->\r\n                </div>\r\n\r\n                <div class=\"col-md-7\">\r\n                    <Chart :length=\"dailyColumn.data.length\" chart=\"ColumnChart\" :data=\"dailyColumn.data\" :options=\"dailyColumn.options\" />\r\n                    \r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-md-8\">\r\n                    \r\n                    <Chart :length=\"monthlyColumn.data.length\" chart=\"LineChart\" :data=\"monthlyColumn.data\" :options=\"monthlyColumn.options\" />\r\n\r\n                </div>\r\n\r\n                <div class=\"col-md-4\">\r\n                    <Chart :length=\"pieYearly.data.length\" chart=\"PieChart\" :data=\"pieYearly.data\" :options=\"pieYearly.options\" />\r\n                </div>\r\n            </div>\r\n                \r\n            </div>\r\n        </div>\r\n        <!-- Engineering\r\n        {{ assembling }} -->\r\n    </div>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\n    \r\n\r\nimport store from \"@/store\";\r\nimport { onMounted, ref } from \"vue\";\r\nimport AttendanceComponent from '@/components/shift/AttendanceComponent.vue';\r\nimport Chart from '@/components/ChartComponent.vue';\r\nimport Card from '@/components/CardComponent.vue'\r\n\r\nconst monthNames = ['','Jan','Feb', 'Mar', 'Apr', 'May', 'Jun','Jul','Aug','Sep','Oct','Nov','Dec'];\r\n\r\nconst pieChart = ref({options: {\r\n    title: 'Assembled, this Month',\r\n    width: 400,\r\n    height: 400,\r\n}, data:[]})\r\n\r\nconst pieYearly = ref({options: {\r\n    title: 'Assembled, Yearly',\r\n    width: 300,\r\n    height: 300,\r\n}, data:[]})\r\n\r\nconst dailyColumn = ref({\r\n    options:  {\r\n            title: 'Assembled, Today',\r\n            // subtitle: 'Sales, Expenses, and Profit: 2014-2017',        \r\n},\r\n data:[]})\r\n\r\n\r\n \r\nconst monthlyColumn = ref({\r\n    options:  {\r\n            title: 'Assembled, Monthly',\r\n            // subtitle: 'Sales, Expenses, and Profit: 2014-2017',        \r\n},\r\n data:[]})\r\n\r\n \r\n\r\nconst assembling = ref({})\r\nconst staffAssembled = () => {\r\n    store.dispatch('getMethod', { url: '/load-engineer-dashboard' }).then((data) => {\r\n        if (data?.status == 200) {\r\n            assembling.value = data.data;\r\n            // pie chart data \r\n            let pie = data.data.team_monthly\r\n            pieChart.value.data.push(['Team','Assembled, this Month'])\r\n            pie.forEach((element) => {\r\n                pieChart.value.data.push([element?.team  , element.total])\r\n            })\r\n\r\n            let daily = data.data.team_daily\r\n            dailyColumn.value.data.push(['Date','total'])\r\n            daily.forEach((element) => {\r\n                dailyColumn.value.data.push([element?.team , element.total])\r\n            })\r\n            let monthly = data?.data?.monthly\r\n            console.log(monthly);\r\n            \r\n            monthlyColumn.value.data.push(['Month','total'])\r\n            monthly.forEach((el) => {\r\n                monthlyColumn.value.data.push([monthNames[el?.month] ,el.total])\r\n            })\r\n\r\n            let yearly = data?.data?.yearly\r\n            pieYearly.value.data.push(['Year','total'])\r\n            yearly.forEach((element) => {\r\n                pieYearly.value.data.push([element?.year+'.' , element.total])\r\n            })\r\n\r\n\r\n        }\r\n    })\r\n}\r\n\r\nconst staff = ref({})\r\nconst staffCount = () => {\r\n    store.dispatch('getMethod', { url: '/load-staff-count' }).then((data) => {\r\n        if (data?.status == 200) {\r\n            staff.value = data.data;\r\n        }\r\n    })\r\n}\r\n\r\n\r\n\r\nonMounted(() => {\r\n    staffCount()\r\n    staffAssembled()\r\n})\r\n\r\n\r\n// load-engineer-dashboard\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>","import script from \"./EngineerDashboard.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./EngineerDashboard.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["chartsScriptUrl","chartsLoaderPromise","loadedPackages","Map","getChartsLoader","undefined","window","google","Promise","resolve","charts","foundScript","document","querySelector","concat","script","createElement","src","type","head","append","onload","loadGoogleCharts","version","arguments","length","packages","language","mapsApiKey","loader","settingsKey","join","has","get","loaderPromise","load","setOnLoadCallback","set","getValidChartData","chartsLib","data","isFirstRowLabels","visualization","DataTable","DataView","Array","isArray","arrayToDataTable","createChartObject","chartObject","chartEl","chartType","chartEvents","createChartFunction","createChart","el","Error","fn","attachListeners","event","listener","Object","entries","events","addListener","debounce","func","timeoutId","waitMilliseconds","nextInvokeTimeout","debouncedFunction","_len","args","_key","context","this","invokeFunction","apply","clearTimeout","setTimeout","GChart","defineComponent","name","props","String","required","default","Boolean","options","settings","Function","resizeDebounce","Number","setup","param","emit","ref","drawChart","value","ref1","draw","watch","deep","onMounted","then","api","addEventListener","onBeforeUnmount","clearChart","removeEventListener","h","app","createApp","install","component","plugin","GlobalVue","Vue","use","__exports__","toggleModal","date","Date","toDateString","time","timer","toLocaleTimeString","setInterval","timeIn","timeOut","clockBtn","closeModal","stopCamera","startCamera","initCamera","video","canvas","capturedImage","startStream","stopStream","stream","attendance","async","navigator","mediaDevices","getUserMedia","srcObject","error","console","captureImage","platform","agent","getContext","drawImage","width","height","toDataURL","image","clockIn","pf","toLowerCase","includes","userAgent","brow","browser","getTracks","forEach","track","stop","coordinates","locationError","getLocation","geolocation","getCurrentPosition","position","latitude","coords","longitude","accuracy","log","message","enableHighAccuracy","store","dispatch","url","status","time_in","checkedInToday","clock","clockOut","prompt","time_out","monthNames","pieChart","title","pieYearly","dailyColumn","monthlyColumn","assembling","staffAssembled","pie","team_monthly","push","element","team","total","daily","team_daily","monthly","month","yearly","year","staff","staffCount"],"sourceRoot":""}