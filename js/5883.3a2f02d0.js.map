{"version":3,"file":"js/5883.3a2f02d0.js","mappings":"+fAGA,MAAMA,EAAc,EAEpB,O,siCCqDA,MAAMC,GAASC,EAAAA,EAAAA,MACTC,GAAWC,EAAAA,EAAAA,IAAI,CAAC,GAGtB,SAASC,EAAkBC,GACvBC,aAAaC,QAAQ,qBAAsBC,KAAKC,UAAUJ,EAAM,KAAM,IACtEL,EAAOU,KAAK,CAAEC,KAAM,qBAAsBC,MAAO,CAAEC,QAASR,EAAKS,MACrE,CAEA,SAASC,IACLC,EAAAA,EAAMC,SAAS,YAAa,CAAEC,IAAK,uBAAwBC,MAAMC,IACzC,KAAhBA,GAAMC,SACNC,QAAQC,IAAIH,EAAKA,MACjBlB,EAASsB,MAAQJ,EAAKA,KAC1B,GAER,C,OARAL,I,ojCC/DA,MAAMhB,EAAc,EAEpB,O,68CC0GA,MAAMC,GAASC,EAAAA,EAAAA,MACTwB,GAActB,EAAAA,EAAAA,KAAI,GAClBD,GAAWC,EAAAA,EAAAA,IAAI,CAAC,GAChBuB,GAAQvB,EAAAA,EAAAA,IAAI,CAAC,GACbwB,EAAcd,IAChBY,EAAYD,OAAQ,EACpBE,EAAMF,MAAQX,GAASR,IAAI,EAGzBuB,EAAaA,KACfH,EAAYD,OAAQ,CAAK,EAG7B,SAASpB,EAAkBC,GACvBC,aAAaC,QAAQ,0BAA2BC,KAAKC,UAAUJ,EAAM,KAAM,IAC3EL,EAAOU,KAAK,CAAEC,KAAM,+BAAgCC,MAAO,CAAEC,QAASR,EAAKS,MAC/E,CAEA,SAASC,EAAYG,EAAM,kCACvBF,EAAAA,EAAMC,SAAS,YAAa,CAAEC,IAAKA,IAAOC,MAAMC,IACxB,KAAhBA,GAAMC,SACNnB,EAASsB,MAAQJ,EAAKA,KAC1B,IACDS,OAAMC,IACLR,QAAQC,IAAIO,EAAE,GAEtB,CATAf,IAYA,MAAMgB,EAAoBA,KACtBf,EAAAA,EAAMC,SAAS,aAAc,CAAEC,IAAK,kCAAoCc,MAAQN,EAAMF,QAASL,MAAMC,IAC7E,KAAhBA,GAAMC,SACNI,EAAYD,OAAQ,EACxB,IACDK,OAAMC,IACLR,QAAQC,IAAIO,EAAE,GAChB,EAEAG,EAAiBnB,IACnBE,EAAAA,EAAMC,SAAS,aAAc,CAAEC,IAAK,gCAAgCJ,EAAMkB,MAAQN,EAAMF,QAASL,MAAMC,IAC/E,KAAhBA,GAAMC,SACNI,EAAYD,OAAQ,EACxB,IACDK,OAAMC,IACLR,QAAQC,IAAIO,EAAE,GAChB,EAKN,SAASI,EAASC,GACTA,EAAKjB,MAAOiB,EAAKC,QAGtBrB,EAAYoB,EAAKjB,IACrB,C,o9DCnKA,MAAMnB,EAAc,EAEpB,Q,2tCCFA,MAAM,EAAc,EAEpB,O","sources":["webpack://Technovati/./src/components/PaginationLinks.vue","webpack://Technovati/./src/components/request/InventoryItemListComponent.vue","webpack://Technovati/./src/components/request/InventoryItemListComponent.vue?c058","webpack://Technovati/./src/components/request/RawListComponent.vue","webpack://Technovati/./src/components/request/RawListComponent.vue?46cc","webpack://Technovati/./src/views/materials/MyRawMaterialRequestView.vue"],"sourcesContent":["import script from \"./PaginationLinks.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./PaginationLinks.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n    <div>\r\n        <div class=\"container mt-2\">\r\n            <fieldset class=\"border rounded-3 p-2 m-1\">\r\n                <legend class=\"float-none w-auto px-2 h5\"></legend>\r\n                <input type=\"text\" class=\" form-control form-control-sm\" placeholder=\"search Item\">\r\n                    <div class=\"table-responsive\">\r\n                        <table class=\"table-hover table-stripped table-bordered table\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>SN</th>\r\n                                    <th>Request Note</th>\r\n                                    <th>Requested By</th>\r\n                                    <th>Items</th>\r\n                                    <th>Receiver</th>\r\n                                    <th>Receiver</th>\r\n                                    <th>time</th>\r\n                                    <th align=\"center\"> <i class=\"bi bi-gear-fill\"></i> </th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr v-for=\"(item, loop) in requests?.data\" :key=\"loop\">\r\n                                    <td>{{ loop + 1 }}</td>\r\n                                    <td>{{ item.comment }}</td>\r\n                                    <td>{{ item.request?.username }}</td>\r\n                                    <td>{{ item.items_count }}</td>\r\n                                    <td>{{ item.receiver?.username ?? item.request?.username }}</td>\r\n                                    <td>{{ item.way_status }}</td>\r\n                                    <td>{{ item.request_time }}</td>\r\n                                    <td>\r\n                                        <div class=\"dropdown\">\r\n                                            <button type=\"button\" class=\"btn btn-primary btn-sm dropdown-toggle\" data-bs-toggle=\"dropdown\">\r\n                                                <i class=\"bi bi-tools\"></i>\r\n                                            </button>\r\n                                            <ul class=\"dropdown-menu\">\r\n                                                <li><a class=\"dropdown-item pointer bg-info\" @click=\"requestDetailPage(item)\">Detail</a></li>\r\n                                                <li><a class=\"dropdown-item pointer bg-warning\" v-if=\"item?.status == 0\" @click=\"requestDetailPage(item)\">Edit</a></li>\r\n                                                <li><a class=\"dropdown-item pointer bg-secondary\" v-if=\"item?.status == 1\" @click=\"requestDetailPage(item)\">Return</a></li>\r\n                                            </ul>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n\r\n                    </div>\r\n\r\n            </fieldset>\r\n            \r\n        </div>\r\n    </div>\r\n      \r\n</template>\r\n\r\n<script setup>\r\nimport store from \"@/store\";\r\nimport { ref } from \"vue\";\r\nimport { useRouter } from 'vue-router';\r\nconst router = useRouter()\r\nconst requests = ref({});\r\n\r\n\r\nfunction requestDetailPage(item) {\r\n    localStorage.setItem('TVATI_MY_RQ_DETAIL', JSON.stringify(item, null, 2))\r\n    router.push({ path: 'my-request-details', query: { request: item.pid } })\r\n}\r\nloadRequest()\r\nfunction loadRequest() {\r\n    store.dispatch('getMethod', { url: '/load-item-request' }).then((data) => {\r\n        if (data?.status == 200) {\r\n            console.log(data.data);\r\n            requests.value = data.data;\r\n        }\r\n    })\r\n}\r\n\r\n</script>\r\n\r\n<style scoped></style>","import script from \"./InventoryItemListComponent.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./InventoryItemListComponent.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n    <div>\r\n        <div class=\"container mt-2\">\r\n            <fieldset class=\"border rounded-3 p-2 m-1\">\r\n                <legend class=\"float-none w-auto px-2 h5\"></legend>\r\n                <input type=\"text\" class=\" form-control form-control-sm\" placeholder=\"search Item\">\r\n                    <div class=\"table-responsive\">\r\n                        <table class=\"table-hover table-stripped table-bordered table\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>SN</th>\r\n                                    <th>Request Note</th>\r\n                                    <!-- <th>Requested By</th> -->\r\n                                    <th>Items</th>\r\n                                    <th>Receiver</th>\r\n                                    <th>time</th>\r\n                                    <th>status</th>\r\n                                    <th align=\"center\"> <i class=\"bi bi-gear-fill\"></i> </th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr v-for=\"(item, loop) in requests?.data\" :key=\"loop\">\r\n                                    <td>{{ loop + 1 }}</td>\r\n                                    <td>{{ item?.note }}</td>\r\n                                    <!-- <td>{{ item?.user?.username }}</td> -->\r\n                                    <td>{{ item?.item_count }}</td>\r\n                                    <td>{{ item?.receiver?.username ?? item.user?.username }}</td>\r\n                                    <td>{{ item?.request_time }}</td>\r\n                                    <td>{{ item?.request_status }}</td>\r\n                                    <td>\r\n                                        <div class=\"dropdown\">\r\n                                            <button type=\"button\" class=\"btn btn-primary btn-sm dropdown-toggle\"\r\n                                                data-bs-toggle=\"dropdown\">\r\n                                                <i class=\"bi bi-tools\"></i>\r\n                                            </button>\r\n                                            <ul class=\"dropdown-menu\">\r\n                                                <li><a class=\"dropdown-item pointer\"\r\n                                                        @click=\"requestDetailPage(item)\">Detail</a></li>\r\n                                                <li><a class=\"dropdown-item pointer bg-warning\" v-if=\"item?.status==0\"\r\n                                                        @click=\"cancelRequest(item.request_pid)\">Cancel</a></li>\r\n                                                <li><a class=\"dropdown-item pointer bg-info\"\r\n                                                        v-if=\" item?.status > 0 && item?.status < 4 \"\r\n                                                        @click=\"returnItem(item)\">Return</a></li>\r\n                                            </ul>\r\n                                        </div>\r\n                                        <!-- <button @click=\"requestDetailPage(item)\" type=\"button\"\r\n                                            class=\"btn btn-primary btn-sm\">\r\n                                            <i class=\"bi bi-plus\"></i>\r\n                                        </button> -->\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                        <div class=\"flex justify-center mt-4\">\r\n                            <nav class=\"relative justify-center rounded-md shadow pagination\">\r\n                                <pagination-links v-for=\"(link, i) of requests.links\" :link=\"link\" :key=\"i\"\r\n                                    @next=\"nextPage(link)\"></pagination-links>\r\n                            </nav>\r\n                        </div>\r\n                    </div>\r\n\r\n            </fieldset>\r\n           \r\n        </div>\r\n\r\n        <o-modal :isOpen=\"toggleModal\" modal-class=\"modal-lg\" @submit=\"returnBackToStore\"\r\n            title=\"Returning Item to store\" @modal-close=\"closeModal\">\r\n            <template #content>\r\n                <div>\r\n                    <form id=\"rForm\">\r\n                        <table class=\"table-hover table-stripped table-bordered table\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>SN</th>\r\n                                    <th>Item Name</th>\r\n                                    <th>Model</th>\r\n                                    <th>Requested</th>\r\n                                    <th>Supplied</th>\r\n                                    <th>Return</th>\r\n\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr v-for=\"(data, loop) in items\" :key=\"loop\">\r\n                                    <td>{{ loop + 1 }}</td>\r\n                                    <td>{{ data.name }}</td>\r\n                                    <td>{{ data.model }}</td>\r\n                                    <td>{{ data.quantity_requested }}</td>\r\n                                    <td>{{ data.quantity_supplied }}</td>\r\n                                    <td> <input v-model=\"data.quantity_returned\" type=\"text\"\r\n                                            class=\"form-control form-control-sm\" placeholder=\"\"></td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </form>\r\n                </div>\r\n            </template>\r\n\r\n        </o-modal>\r\n    </div>\r\n\r\n</template>\r\n\r\n<script setup>\r\nimport store from \"@/store\";\r\nimport { ref } from \"vue\";\r\nimport OModal from \"@/components/OModal.vue\";\r\nimport PaginationLinks from \"@/components/PaginationLinks.vue\";\r\n\r\nimport { useRouter } from 'vue-router';\r\n\r\nconst router = useRouter()\r\nconst toggleModal = ref(false)\r\nconst requests = ref({});\r\nconst items = ref({})\r\nconst returnItem = (request) => {\r\n    toggleModal.value = true;\r\n    items.value = request?.item;\r\n}\r\n\r\nconst closeModal = () => {\r\n    toggleModal.value = false;\r\n};\r\n\r\nfunction requestDetailPage(item) {\r\n    localStorage.setItem('TVATI_RAW_MAT_RQ_DETAIL', JSON.stringify(item, null, 2))\r\n    router.push({ path: 'raw-material-request-details', query: { request: item.pid } })\r\n}\r\nloadRequest()\r\nfunction loadRequest(url = '/load-my-raw-material-requests') {\r\n    store.dispatch('getMethod', { url: url }).then((data) => {\r\n        if (data?.status == 200) {\r\n            requests.value = data.data;\r\n        }\r\n    }).catch(e => {\r\n        console.log(e);\r\n    })\r\n}\r\n\r\n\r\nconst returnBackToStore = () => {\r\n    store.dispatch('postMethod', { url: '/return-requested-raw-materials' , param : items.value }).then((data) => {\r\n        if (data?.status == 201) {\r\n            toggleModal.value = false;\r\n        }\r\n    }).catch(e => {\r\n        console.log(e);\r\n    })\r\n}\r\nconst cancelRequest = (pid) => {\r\n    store.dispatch('postMethod', { url: '/cancel-raw-material-request/'+pid , param : items.value }).then((data) => {\r\n        if (data?.status == 201) {\r\n            toggleModal.value = false;\r\n        }\r\n    }).catch(e => {\r\n        console.log(e);\r\n    })\r\n}\r\n\r\n\r\n\r\nfunction nextPage(link) {\r\n    if (!link.url || link.active) {\r\n        return;\r\n    }\r\n    loadRequest(link.url)\r\n}\r\n\r\n\r\n\r\n</script>\r\n\r\n<style scoped></style>","import script from \"./RawListComponent.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./RawListComponent.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import script from \"./MyRawMaterialRequestView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./MyRawMaterialRequestView.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["__exports__","router","useRouter","requests","ref","requestDetailPage","item","localStorage","setItem","JSON","stringify","push","path","query","request","pid","loadRequest","store","dispatch","url","then","data","status","console","log","value","toggleModal","items","returnItem","closeModal","catch","e","returnBackToStore","param","cancelRequest","nextPage","link","active"],"sourceRoot":""}